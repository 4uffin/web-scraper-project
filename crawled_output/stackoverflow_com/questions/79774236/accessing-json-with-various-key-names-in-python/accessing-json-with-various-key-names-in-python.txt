Accessing JSON with various key names in Python - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
Accessing JSON with various key names in Python [closed]
Ask Question
Asked
yesterday
Modified
today
Viewed
71 times
-1
Closed. This question needs debugging details. It is not currently accepting answers.
Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.
Closed 20 hours ago.
Improve this question
I just got a JSON file for exercise:
{"data":[
{"British Columbia":"BC","BC":"4.63"},
{"Alberta":"AB","AB":"4.15"},
{"Ontario":"ON","ON":"13.6"},
{"Manitoba":"MB","MB":"1.28"},
{"Saskatchewan":"SK","SK":"1.1"}
]}
Each element inside have different key names. I would like to know the simplest way to access the numeric variable inside the file.
This is the code I am using to access the element right now. It will get the province with the largest population. Can it be simpler?
pythonjson
Share
Improve this question
Follow
edited 21 hours ago
jonrsharpe
123k3030 gold badges275275 silver badges486486 bronze badges
asked yesterday
zihao shengzihao sheng
722 bronze badges
New contributor
zihao sheng is a new contributor to this site. Take care in asking for clarification, commenting, and answering.
Check out our Code of Conduct.
4
3
why did you post a picture of the code? ... how are people supposed to test it? ... please delete the picture and post text instead ... format it as a code block
jsotola
–
jsotola
2025-09-24 22:40:19 +00:00
Commented
yesterday
2
Please have a look at the Tour and How to ask Questions sections
gsalles
–
gsalles
2025-09-24 22:42:38 +00:00
Commented
yesterday
always put code/output/errors as text, not image. We can't copy text from image to use it in comments, answers or search in Google
furas
–
furas
2025-09-25 01:03:43 +00:00
Commented
yesterday
dictionary doesn't have to keep order of elements and sometimes [1][1] doesn't have to be float value. And [0] doesn't have to be province name
furas
–
furas
2025-09-25 01:11:10 +00:00
Commented
yesterday
Add a comment
|
2 Answers
2
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
2
I think the simplest
way involves iterating through the list and then accessing the value in each dictionary.
Look:
import json
json_string = '{"data":[{"British Columbia":"BC","BC":"4.63"}, {"Alberta":"AB","AB":"4.15"}, {"Ontario":"ON","ON":"13.6"}, {"Manitoba":"MB","MB":"1.28"}, {"Saskatchewan":"SK","SK":"1.1"}]}'
data = json.loads(json_string)
for item in data['data']:
for key, value in item.items():
if key == list(item.keys())[1]:
numeric_value = value
print(numeric_value)
If some entries are missing population values, your code should handle that gracefully (e.g., by skipping those entries or assigning them a default population of 0).
Share
Improve this answer
Follow
answered yesterday
Teapot codeTeapot code
1511 silver badge77 bronze badges
New contributor
Teapot code is a new contributor to this site. Take care in asking for clarification, commenting, and answering.
Check out our Code of Conduct.
2 Comments
Add a comment
Tejas Parnerkar Tejas Parnerkar yesterday
This is good for the current schema :) Could there be cases where there are more complex cases, where a recursive check may be needed? 2025-09-25T00:08:41.933Z+00:00
0
Reply
Copy link
Teapot code Teapot code 20 hours ago
For complex, nested structures, a recursive function would indeed be the more better solution. 2025-09-25T08:43:56.397Z+00:00
0
Reply
Copy link
0
Observe that in
{"data":[
{"British Columbia":"BC","BC":"4.63"},
{"Alberta":"AB","AB":"4.15"},
{"Ontario":"ON","ON":"13.6"},
{"Manitoba":"MB","MB":"1.28"},
{"Saskatchewan":"SK","SK":"1.1"}
]}
there are not numeric values, but string representation of numeric value, numeric value would look following way
{"British Columbia":"BC","BC":4.63}
and therefore need to convert to float arises.
get the province with the largest population. Can it be simpler?
You might use max built-in function with function extracting numeric value as key, for example
import json
def is_numeric(text):
return text.replace(".", "", 1).isdigit()
def extract_numeric_values(dct):
return [float(val) for val in dct.values() if is_numeric(val)]
provdata = '''{"data":[
{"British Columbia":"BC","BC":"4.63"},
{"Alberta":"AB","AB":"4.15"},
{"Ontario":"ON","ON":"13.6"},
{"Manitoba":"MB","MB":"1.28"},
{"Saskatchewan":"SK","SK":"1.1"}
]}'''
test_data = json.loads(provdata)
biggest = max(test_data["data"], key=extract_numeric_values)
print(biggest)
# {'Ontario': 'ON', 'ON': '13.6'}
Explanation: I firstly define heuristic for determining if text is holding numeric value, which is as follows: after replacing at most 1 . if it is all-digit then this is numeric, then I define function for extracting numeric values out of dictionary and convert them into list of floats, for which I use so-called list-comprehension. Then I json.loads (which parse string rather than file, I use it for brevity sake) to parse data and use max built-in function with function I defined.
(tested in Python 3.12.3)
Share
Improve this answer
Follow
answered 21 hours ago
DaweoDaweo
38.1k33 gold badges1717 silver badges3232 bronze badges
Comments
Add a comment
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
pythonjson
See similar questions with these tags.
The Overflow Blog
Democratizing your data access with AI agents
The history and future of software development (part 1)
Featured on Meta
Spevacus has joined us as a Community Manager
Introducing a new proactive anti-spam measure
New and improved coding challenges
New comment UI experiment graduation
Policy: Generative AI (e.g., ChatGPT) is banned
Related
3930
How do I POST JSON data with cURL?
3004
How can I remove a key from a Python dictionary?
2878
How to upgrade all Python packages with pip
1123
How to POST JSON data with Python Requests?
1867
Use different Python version with virtualenv
1313
Parsing JSON with Unix tools
1464
Getting key with maximum value in dictionary?
1046
Jackson with JSON: Unrecognized field, not marked as ignorable
Hot Network Questions
How can blood fuel space travel?
Removing temporary LaTeX files
Are there any problems with mastering my own music?
What qualifies to be a "family of statistical tests" for Bonferroni corrections?
Are there injections that combine 80 different vaccines?
From honeycombs to a cube
Traveling by car on train in Germany
Plotting functions without sampling artefacts
How to delete a file with a very long (and very strange) filename in Windows?
How to handle a warlock with Aspect of the Moon and Visions of Distant Realms?
Identifying voltage regulator on induction hob (marked FF 04)
Stretch an elastic band around three nails so that it relaxes when any nail is removed
Changing size of math environments
how would you formalise in first order logic the sentence "I am a liar"?
What conditions on an Earthlike planet would allow for a massive, Pando-esque forest that’s a single organism?
Where was the Kenya sequence in The Crown Episode 1 filmed?
Could our telescopes detect a type I civilisation
Prove that the sequences of numbers coincide
What happens when the jewels run out?
Quantizing EM field by imposing canonical commutation relations
In Justice Kagan's "Congress, as everyone agrees, prohibited each of those presidential removals." who exactly is "everyone"?
Another Slitherlink Next Step
Verify a Chinese ID Number
What does it mean for a museum exhibit "not to have a Soviet anniversary"?
more hot questions
lang-py
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.25.34480