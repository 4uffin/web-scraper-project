java - How make @JoinColumns conditional? - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
How make @JoinColumns conditional?
Ask Question
Asked
8 days ago
Modified
7 days ago
Viewed
109 times
1
I have the following scenario:
class AId {
String aId1;
String aId2;
}
@IdClass{AId.class}
class A {
@Id String aId1;
@Id String aId2;
String aType;
// possible values are 0,1
}
@IdClass{BId.class}
class B {
@Id String bId1;
@Id String bId2;
String bType; // possible values are 0,1,2
@ManyToOne (fetchType="EAGER")
@JoinColumn(name = bId1, referenceColumn = aId1)
@JoinColumn(name = bType, referenceColumn = aType)
A aOfB;
// B will have an A only if bType <> 2
}
So if B={01,02,1}, I want to perform the join with table A to obtain A={01,03,1}
But, if B={01,02,2} since bType is 2, I know that it won't have an A element and I don't want to join when I fetch B. I am just unsure what the correct syntax is to achieve this.
Do I use @JoinFormula? But the examples that I've seen using @JoinFormula only relies on single column joins whereas in my case I need 2.
Update:
I was hoping that there would be a way to make the query dynamic. Example if bType<>2, I would have the following query:
select
b1_0.b_id1,
b1_0.b_id2,
a1_0.a_id1,
a1_0.a_id2,
a1_0.a_type,
b1_0.bType
from
b_table b1_0
left join
a_table a1_0
on a1_0.a_id1=b1_0.b_id1
and a1_0.a_type=b1_0.b_type
where
(
b1_0.b_id1,b1_0.b_id2
) in ((?,?))
But if btype=2, then only:
select
b1_0.b_id1,
b1_0.b_id2,
b1_0.bType
from
b_table b1_0
where
(
b1_0.b_id1,b1_0.b_id2
) in ((?,?))
javapostgresqlspring-bootjpajpql
Share
Improve this question
Follow
edited Sep 15 at 23:52
Guppy_00Guppy_00
asked Sep 14 at 2:30
Guppy_00Guppy_00
30711 gold badge22 silver badges99 bronze badges
8
I am not sure what is the goal here - do you want to omit JOIN in SQL query entirely? Or you aiming to achieve any special JOIN condition? I could augment the query by using JoinColumnOrFormula and JoinColumnsOrFormulas
Michał Turczyn
–
Michał Turczyn
2025-09-14 20:18:46 +00:00
Commented
Sep 14 at 20:18
I want to omit the JOIN completely when bType=2. But if this is not possible, could you also share the syntax if using JoinColumnOrFormulas?
Guppy_00
–
Guppy_00
2025-09-15 01:09:51 +00:00
Commented
Sep 15 at 1:09
A has a composite PK, so you need BOTH aId1 and aId2 referenced to point at a single A instance. B={01,02,1} will be pointing at many A instances {01,01,1}-> {01,N,1}.
Yes, what you may want can be done, but you might want to rethink the problem to avoid needing to use funky behavior in your object model. B should just have a foreign key to A. If you can't change the reference, why map it in the entity?
Chris
–
Chris
2025-09-15 20:13:24 +00:00
Commented
Sep 15 at 20:13
@Chris sorry I was trying to simplify the classes in my question but you're right. B should have additional attribute aId2 and aOfB should have additional @JoinColumn(name = aId2, referenceColumn = aId2).
Guppy_00
–
Guppy_00
2025-09-15 23:58:09 +00:00
Commented
Sep 15 at 23:58
This does not make sense - what does it mean that bType<>2 - to know that, you have to go to database. How can you make a query based on data in database, without knowing it first? You have to make general query and there is no way for you to know whether bType is 2 or whatever. Moreover, it would make sense only if bType has the same value in all rows. Now i understand your problem even less.
Michał Turczyn
–
Michał Turczyn
2025-09-16 04:54:07 +00:00
Commented
Sep 16 at 4:54
|
Show 3 more comments
1 Answer
1
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
0
You cannot write query with conditional join like so
select * from someTable
when someColumn = 2 then join someOtherTable
so i don't know what you mean by "omit join for particular values".
However, I can give you idea, how you can augment your join statement using @JoinColumnOrFormula and @JoinColumnOrFormulas:
@ManyToOne(fetch = FetchType.EAGER, optional = true)
@JoinColumnsOrFormulas({
// regular key join: bId1 -> aId1
@JoinColumnOrFormula(
column = @JoinColumn(name = "b_id1", referencedColumnName = "a_id1", insertable = false, updatable = false)
),
// conditional join: only if bType != '2', join bType -> aType
@JoinColumnOrFormula(
formula = @JoinFormula(
value = "CASE WHEN b_type <> '2' THEN b_type ELSE NULL END",
referencedColumnName = "a_type"
)
)
})
private A aOfB;
It produces following query
select
b1_0.b_id1,
b1_0.b_id2,
a1_0.a_id1,
a1_0.a_id2,
a1_0.a_type,
b1_0.bType
from
b_table b1_0
left join
a_table a1_0
on a1_0.a_id1=b1_0.b_id1
and a1_0.a_type=CASE
WHEN b1_0.b_type <> '2' THEN b1_0.b_type
ELSE NULL
END
where
(
b1_0.b_id1,b1_0.b_id2
) in ((?,?))
But i am not sure if that's exactly what you want.
Share
Improve this answer
Follow
answered Sep 15 at 5:25
Michał TurczynMichał Turczyn
40.7k1818 gold badges5656 silver badges8787 bronze badges
9 Comments
Add a comment
Guppy_00 Guppy_00 Sep 15 at 23:44
Hello. Thank you very much for your answer. I have edited my question to include the exact SQL queries that I need. My only concern with your suggestion is that the JOIN will still be done despite bType=2 just that aType will be set to NULL ensuring no match will be found. Is my understanding correct? Performance wise, I just want to omit the processing time of looking for an entry in A with a1_0.a_id1=b1_0.b_id1 and a1_0.a_type=NULL (which I know for certain won't exist) 2025-09-15T23:44:13.25Z+00:00
0
Reply
Copy link
Michał Turczyn Michał Turczyn Sep 16 at 4:57
You are right. But omitting join depending on rows value is simply invalid SQL. 2025-09-16T04:57:43.973Z+00:00
0
Reply
Copy link
Guppy_00 Guppy_00 Sep 16 at 5:11
Ok I understand perhaps what I am trying to do cannot be done by a single query. 2025-09-16T05:11:19.177Z+00:00
0
Copy link
Michał Turczyn Michał Turczyn Sep 16 at 5:20
Yes, so you can only do it by raw SQL. I think there is no way to achieve this with JPQL 2025-09-16T05:20:39.117Z+00:00
1
Copy link
Guppy_00 Guppy_00 Sep 16 at 0:00
Also, when I tried your syntax, I am getting the following error message:
Caused by: org.hibernate.AssertionFailure: value involves formulas 2025-09-16T00:00:38.077Z+00:00
0
Reply
Copy link
Michał Turczyn Michał Turczyn Sep 16 at 4:59
Well, it might be that i used slightly different column names or properties names. Please ensure everything is correct. 2025-09-16T04:59:03.97Z+00:00
0
Reply
Copy link
Guppy_00 Guppy_00 Sep 16 at 5:01
I has nothing to do with the naming. Actually, I have encountered this error before. Whenever I combine JoinColumn and JoinFormula 2025-09-16T05:01:07.733Z+00:00
0
Copy link
Michał Turczyn Michał Turczyn Sep 16 at 5:02
But my approach uses only JoinColumnsOrFormulas and JoinColumnsOrFormula, it does not use JoinColumn 2025-09-16T05:02:21.533Z+00:00
0
Copy link
Guppy_00 Guppy_00 Sep 16 at 5:10
You have a JoinColumn inside JoinColumnOrFormula. What I mean is I have encountered this exact error when I combine formula and columns 2025-09-16T05:10:36.237Z+00:00
0
Copy link
Your Answer
Thanks for contributing an answer to Stack Overflow!Please be sure to answer the question. Provide details and share your research!But avoid …Asking for help, clarification, or responding to other answers.Making statements based on opinion; back them up with references or personal experience.To learn more, see our tips on writing great answers.
Draft saved
Draft discarded
Sign up or log in
Sign up using Google
Sign up using Email and Password
Submit
Post as a guest
Name
Email
Required, but never shown
Post as a guest
Name
Email
Required, but never shown
Post Your Answer
Discard
By clicking “Post Your Answer”, you agree to our terms of service and acknowledge you have read our privacy policy.
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
javapostgresqlspring-bootjpajpql
See similar questions with these tags.
The Overflow Blog
Stack Overflow is helping you learn to code with new resources
Off with your CMS’s head! Composability and security in headless CMS
Featured on Meta
Spevacus has joined us as a Community Manager
Introducing a new proactive anti-spam measure
Policy: Generative AI (e.g., ChatGPT) is banned
New and improved coding challenges
New comment UI experiment graduation
Related
4440
How do I avoid checking for nulls in Java?
4768
How do I read / convert an InputStream into a String in Java?
4130
How do I generate random integers within a specific range in Java?
3755
How can I create a memory leak in Java?
4031
How do I efficiently iterate over each entry in a Java Map?
2631
How to show tables in PostgreSQL?
3538
How do I convert a String to an int in Java?
1984
How can I change a PostgreSQL user password?
1696
How can I drop all the tables in a PostgreSQL database?
3261
How do I test a class that has private methods, fields or inner classes?
Hot Network Questions
(LuaLaTeX) Issue with Cyrillic and Japanese Fonts Conflict
Is vowel length phonemic in General American?
What insurance options, if any, exist to allow an individual to transport valuable items owned by others with minimal liability?
How to make homemade baking chips (like butterscotch or peanut butter chips)?
How do I make the jump FROM the wooden block in Anouki Village?
What is the probability that a random tetrahedron inside a sphere is intersected by the sphere's vertical axis?
Introduction or Description of Mahowald's Sq1, Sq2 Diagrams
"Saying who or what did the action would be clearer": passive voice vs. active voice in a technical document/checklist?
Compute probability current from stochastic path integral
Textures stretching
Why is it useful to have mem_top < mem_max?
What is this circuit breaker on the outside of my house for?
How to perform sed replacement from the rule file only on certain lines?
Why does the Equality Act 2010 contain a provision mandating its amendment?
How did "hospital" lose its first syllable in some languages?
Terrorist acts committed by Antifa?
What spider is this. Found in Milwaukee WI
Why is the geometric solution of minimizing error via orthogonality called a "least squares" solution?
Does "a man can do what he wants, but not want what he wants" have a logical problem?
Reapplying the Vigenère cipher with different texts acting as key
Weep holes or other? Should they be filled?
Are these LED/resistor configurations equivalent?
`circledsteps`, but... `squaredsteps` and `triangledsteps`?
How to visualize odds ratios across a continuous variable without binning
more hot questions
Question feed
Subscribe to RSS
Question feed
To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
default
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.22.34261