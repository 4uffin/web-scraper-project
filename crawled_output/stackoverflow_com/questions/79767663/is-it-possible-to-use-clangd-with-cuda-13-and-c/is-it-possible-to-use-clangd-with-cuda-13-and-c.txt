Is it possible to use clangd with cuda 13 and c++? - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
Is it possible to use clangd with cuda 13 and c++? [closed]
Ask Question
Asked
3 days ago
Modified
2 days ago
Viewed
93 times
-6
Closed. This question needs debugging details. It is not currently accepting answers.
Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.
Closed 3 days ago.
This post was edited and submitted for review 2 days ago.
Improve this question
I have some c++ code that uses cuda.
My editor (which uses clangd) is reporting a lot of spurious errors.
For example the code
#include <string>
void main() {
std::string x = "";
}
produces the error
Cannot initialize a variable of type 'std::string' (aka 'int') with an lvalue of type 'const char[1]' (init_conversion_failed).
if the source file has the extension .cu (but not if the source file has extension .cpp).
Is there a way of getting rid of these errors without losing cuda support?
I am currently using clangd 18.1.3.
I tried setting various compile flags in .clangd (-x cuda, -I, --cuda-path, --cuda-gpu-arch.
I also tried using a compile-commands.json file generated by bear and another one generated by cmake.
None of these helped.
Setting -x cpp gets rid of the sort of errors mentioned above, but then the language server does not recognize cuda code and reports errors there instead.
c++cudaclangd
Share
Improve this question
Follow
edited 2 days ago
drgdrg
asked Sep 17 at 17:57
drgdrg
1133 bronze badges
New contributor
drg is a new contributor to this site. Take care in asking for clarification, commenting, and answering.
Check out our Code of Conduct.
4
The message 'std::string' (aka 'int') deserves your focus.
Why does your compiler think std::string means int?
Drew Dormann
–
Drew Dormann
2025-09-17 18:24:30 +00:00
Commented
Sep 17 at 18:24
Yes, I did #include <string>.
The error goes away if I use -x c++ instead of -x cuda.
drg
–
drg
2025-09-17 18:30:19 +00:00
Commented
Sep 17 at 18:30
From the first comment in stackoverflow.com/questions/75474131/… it says that you only need -xcuda if your source file does not end in .cu
Craig Estey
–
Craig Estey
2025-09-17 18:53:28 +00:00
Commented
Sep 17 at 18:53
3
@drg "Yes, I did #include <string>." -- I do not see this in your minimal reproducible example. The idea is that someone (even yourself) should be able to copy-paste the code from a question to reproduce the error. (It helps ensure that important details are not omitted.) So... should that be a two-line code block? #include <string> std::string x = "";? Is that enough to reproduce the problem?
JaMiT
–
JaMiT
2025-09-17 20:01:58 +00:00
Commented
Sep 17 at 20:01
Add a comment
|
1 Answer
1
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
0
I was able to get rid of the errors by upgrading to the 20250914 snapshot of clangd.
The latest stable version 21.1.0 still has the errors.
Share
Improve this answer
Follow
answered Sep 17 at 19:13
drgdrg
1133 bronze badges
New contributor
drg is a new contributor to this site. Take care in asking for clarification, commenting, and answering.
Check out our Code of Conduct.
Comments
Add a comment
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
c++cudaclangd
See similar questions with these tags.
The Overflow Blog
Stack Overflow is helping you learn to code with new resources
Off with your CMS’s head! Composability and security in headless CMS
Featured on Meta
Spevacus has joined us as a Community Manager
Introducing a new proactive anti-spam measure
New comment UI experiment graduation
New and improved coding challenges
Policy: Generative AI (e.g., ChatGPT) is banned
Linked
2
How to use cuda with LSP-clangd
Related
4226
The Definitive C++ Book Guide and List
3949
What are the differences between a pointer variable and a reference variable?
3453
What's the problem with "using namespace std;"?
1006
How to get the CUDA version?
3176
When should static_cast, dynamic_cast, const_cast, and reinterpret_cast be used?
3172
How to set, clear, and toggle a single bit
1654
Replacing a 32-bit loop counter with 64-bit introduces crazy performance deviations with _mm_popcnt_u64 on Intel CPUs
2195
What is a smart pointer and when should I use one?
3159
What is the difference between #include <filename> and #include "filename"?
1775
What is a lambda expression, and when should I use one?
Hot Network Questions
How to typeset the complete structure of deeply nested formulas?
"Saying who or what did the action would be clearer": passive voice vs. active voice in a technical document/checklist?
How to directly reboot into the EFI GUI via an EFI shell?
The unit normal field to an oriented manifold in Munkres “Analysis on Manifolds”
What is this circuit box for
Number of prime factors modulo residue classes
git says Bad key types '+ssh-rsa,ssh-dss' when trying to do git fetch on my MacBook. How do I fix?
Two definitions of regularity for ultrafilters
Submitted the same research article in two journals, now I'm scared
Validity of assuming the integral of a vanishing integrand over an infinitely large surface is equal to zero
Why it takes so long to referee a paper in some journals?
What would be the impact of a being that is so hot it melts metal from 1km away. How far away would be habitable? (On Earth btw)
What species of plum is this? (France, mid-September)
Was it normal to refer to God as 'the Father' during the time of Jesus?
What does ripe fig falling into the eater's mouth in Nahum 3:12 signify?
If a partition that has always been able to be mounted normally,suddenly cannot be mounted and enters Emergency Mode,what might be the reason?
Historic mistake in sign of KdV equation
How to remove BitLocker encryption for a volume that does not have a drive-letter
How to add more drives to a sambashare and also best arrangement for multiple drives of different sizes in a RAID setup
A man you don't meet every day
How could triangles exist?
Update docker service volume
Strongly-typed CUDA device memory
How to end mob silencing? Targeted Canceling? Negative Votes require Feedback suggestion
more hot questions
lang-cpp
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.19.34211