Typescript narrowing difference between if/else and switch for object with union discriminator - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
Typescript narrowing difference between if/else and switch for object with union discriminator
Ask Question
Asked
4 days ago
Modified
yesterday
Viewed
68 times
1
In the following code, TypeScript narrows the action variable differently between the if/else and switch examples. In the switch example, the variable is correctly narrowed to never while it can still be { type: "increment" | "decrement"; } in the if/else example.
To me, both variations seem to do the same, so I am not sure where the difference is coming from.
A few observations: removing either the increment or decrement case from the switch will change the action type to { type: "increment" | "decrement"; } in the default block, regardless of which one is removed. Also in the else block, the type of action.type is never, which I would have expected to be "increment" | "decrement" based on the type of action.
export const assertUnreachable = (_: never): never => {
throw new Error("Didn't expect to get here");
};
export type Action = {
type: "set";
} | {
type: "increment" | "decrement";
};
export const test = (action: Action) => {
if (action.type === "set") {
console.log("set");
} else if (action.type === "increment") {
console.log("increment");
} else if (action.type === "decrement") {
console.log("decrement");
// } else if (action.type === "decrement" || action.type === "increment") { // detected as duplicate
//
console.log("decrement");
} else {
console.log(action.type); // never
assertUnreachable(action); // { type: "increment" | "decrement"; }
}
switch (action.type) {
case "set":
console.log("set");
break;
case "increment":
console.log("increment");
break;
case "decrement":
console.log("decrement");
break;
default:
assertUnreachable(action); // never
break;
}
};
typescript
Share
Improve this question
Follow
edited 2 days ago
gilly
7177 bronze badges
asked Sep 18 at 1:50
TeiemTeiem
1,7312121 silver badges4646 bronze badges
3
3
TS doesn't do full exhaustiveness detection on if/else the way it does with switch. There are various open feature requests about it, like microsoft/TypeScript#56527, and microsoft/TypeScript#21985. Does that fully address the question? If so I'll write an answer or find a duplicate. If not, what am I missing?
jcalz
–
jcalz
2025-09-18 03:28:08 +00:00
Commented
Sep 18 at 3:28
@jcalz Yes, t answers the question, thank you :) Do you by chance also know why there is this difference between handling of if/else and switch?
Teiem
–
Teiem
2025-09-21 14:22:36 +00:00
Commented
yesterday
See github.com/microsoft/TypeScript/issues/…
jcalz
–
jcalz
2025-09-21 15:13:01 +00:00
Commented
yesterday
Add a comment
|
1 Answer
1
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
1
In general TypeScript does more thorough and accurate exhaustiveness analysis for switch statements than it does for if/else blocks.
This difference is known and considered a missing feature for if/else; see various feature requests such as microsoft/TypeScript#21985 and microsoft/TypeScript#56527.
There are some cases where if/else narrowing succeeds, such as checking more standard discriminated unions (e.g., change your type to type Action = { type: "set"; } | { type: "increment" } | { type: "decrement" }; and it will behave as you expect). Unfortunately when you use a union discriminant, the normal narrowing narrows type but not action (this is another missing feature, microsoft/TypeScript#42384, and explains why you see action.type as never while action is not {type: never}).
On the other hand, switch is special-cased to deal with exhaustiveness more effectively.
That's because a switch statement is explicitly about checking various cases for a single expression, so it's more straightforward to identify if all cases have been checked. It takes a lot more work for the compiler to analyze a series of if/else statements to even identify that you're doing the same thing that a switch statement does (as opposed to a more general use of if/else involving multiple expressions). See this comment by the TS dev team lead on microsoft/TypeScript#59876. It mentions that this behavior is unlikely to change.
So that's the explanation: it's easier to analyze switch than it is to analyze if/else, so TypeScript does more thorough analysis with the former than it does with the latter.
Share
Improve this answer
Follow
answered yesterday
jcalzjcalz
337k2929 gold badges450450 silver badges448448 bronze badges
Comments
Add a comment
Your Answer
Thanks for contributing an answer to Stack Overflow!Please be sure to answer the question. Provide details and share your research!But avoid …Asking for help, clarification, or responding to other answers.Making statements based on opinion; back them up with references or personal experience.To learn more, see our tips on writing great answers.
Draft saved
Draft discarded
Sign up or log in
Sign up using Google
Sign up using Email and Password
Submit
Post as a guest
Name
Email
Required, but never shown
Post as a guest
Name
Email
Required, but never shown
Post Your Answer
Discard
By clicking “Post Your Answer”, you agree to our terms of service and acknowledge you have read our privacy policy.
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
typescript
See similar questions with these tags.
The Overflow Blog
Stack Overflow is helping you learn to code with new resources
Off with your CMS’s head! Composability and security in headless CMS
Featured on Meta
Spevacus has joined us as a Community Manager
Introducing a new proactive anti-spam measure
Policy: Generative AI (e.g., ChatGPT) is banned
New and improved coding challenges
New comment UI experiment graduation
Related
819
What is the syntax for Typescript arrow functions with generics?
565
What is the difference between types String and string?
629
The difference between "require(x)" and "import x"
431
Setting default value for TypeScript object passed as argument
3
Functional switch case with object literal and Typescript
307
What's the difference between 'extends' and 'implements' in TypeScript
473
What is the difference between Subject and BehaviorSubject?
135
Difference between 'object' ,{} and Object in TypeScript
381
What is the difference between .ts and .tsx extensions. Both are used as extensions for typescript files in react. So where should we use them?
300
TypeScript empty object for a typed variable
Hot Network Questions
Understanding the Relationship Between Mean Difference and p-value in a Paired t-Test
Solve the equations to name the animal
Do the Matrix movies take place in our present or our future?
Did Jack Swigert really cover the LEM detachment switch with a paper note in Apollo 13?
Insert image into rounded TikZ node so it uses the whole box
What spider is this. Found in Milwaukee WI
How to have cell return a value based on the number enter in another cell
Was Leonardo da Vinci recognized as an inventor during his lifetime, or mainly as an artist?
What is the probe like structure next to the static port on this cessna 172?
Alien invasion using plant soporific to render population unconscious, ruined by immune man
Time is to "eternal" as space is to what?
How do I Shove in 5e 2014, specifically?
A tour through a city of circular roads with no sharp turns
What insurance options, if any, exist to allow an individual to transport valuable items owned by others with minimal liability?
Why it takes so long to referee a paper in some journals?
What does "your own" mean in "did it not remain your own?", Acts 5:4?
Does the US Constitution's Supremacy Clause make California's new laws regulating the conduct of federal agents (e.g. "No Secret Police Act") moot?
Between the NKJV and the KJV, which is the better interpretation of Job 7:20a; is this a question or a statement?
Productivity of 不～ prefix
Books about algebra in style of category theory
Was it normal to refer to God as 'the Father' during the time of Jesus?
Map all possible choices from a set of functions onto a list of arguments
What's the PC used in "American Kickboxer"?
Can I use Heavy Weapon Mastery with an Opportunity Attack?
more hot questions
Question feed
Subscribe to RSS
Question feed
To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
lang-js
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.22.34261