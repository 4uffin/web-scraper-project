Modify JavaScript class for all future instances - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
Modify JavaScript class for all future instances
Ask Question
Asked
2 days ago
Modified
today
Viewed
127 times
-1
I am customizing a javascript application using the framework the application gives. I am able to modify the code of a single file.
I've found a bug in the application itself and I'd like to correct it from the single file I'm given. Typically, this could be achieved on a single instance with something like this:
class A {
doathing(){
console.log("A thing");
}
}
let a = A();
a.doathing = () => console.log("A different thing");
...
a.doathing() // log: A different thing
But in this case I don't have access to the instance when I need to change the behavior. I need to change the class itself so that all future instances have the new behavior. So I'm looking for something like this:
class A {
doathing(){
console.log("A thing");
}
}
darkmagic(A, () => console.log("A different thing"));
...
let a = A();
...
a.doathing() // desired log message is: A different thing
Is this possible? Is there a way I could create my own class that overrides it and then ensure everywhere else in the app that uses it uses my class? Any other crazy ideas?
javascript
Share
Improve this question
Follow
edited 13 hours ago
Kevin S.Kevin S.
asked 2 days ago
Kevin S.Kevin S.
64866 silver badges1111 bronze badges
5
5
I'm not sure "dark magic" is a valid stackoverflow request :) I mean you are asking for a very unusual employment of classes, that's likely an anti-pattern, so it won't benefit others. That being said, you could change class A's method by doathing by assigning to A.prototype.doathng, see fiddle.
kikon
–
kikon
2025-09-24 00:48:47 +00:00
Commented
2 days ago
You don't want to change only the future instances, you simply want to change all instances, no?
Bergi
–
Bergi
2025-09-24 08:03:37 +00:00
Commented
yesterday
1
@kikon Post an answer.
Barmar
–
Barmar
2025-09-24 14:51:24 +00:00
Commented
yesterday
@Bergi I believe for my purposes I did need it for all future instances. But its also okay if the previous instances are affected. I think the distinction is well described in this thread now.
Kevin S.
–
Kevin S.
2025-09-25 14:43:55 +00:00
Commented
14 hours ago
@kikon I very much appreciate the answer. I simply follow the stack overflow mantra, if its something I need then its likely someone else will need it. I know for sure there are people I work with that will find this useful.
Kevin S.
–
Kevin S.
2025-09-25 14:45:41 +00:00
Commented
14 hours ago
Add a comment
|
1 Answer
1
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
5
Using javascript classes in the way you suggest is unusual and I can't think of a legitimate reason to employ it in regular development, when one has access to the codebase one's developing.
Still, if someone is under duress and has to modify a library in a hacky way (having partial access, as you describe), the possibility exists to change a method of an existing class, say A#doathing as in your example
piece of code, by assigning a new function to A.prototype.doathing:
class A{
doathing(){
console.log("A thing");
}
}
const a = new A();
a.doathing();
A.prototype.doathing = function(){
console.log("A different thing");
}
const a1 = new A();
a1.doathing();
Note that, as Bergi observed in comments, this doesn't perfectly fit your description -- after applying the change to class A, not only the new instances created for A will behave in the altered way, but also
existing ones, instantiated before the change was applied to the class. So, if in the code above one added a.doathing() at the very end, the result would also be Another thing:
class A{
doathing(){
console.log("A thing");
}
}
const a = new A();
a.doathing();
A.prototype.doathing = function(){
console.log("A different thing");
}
const a1 = new A();
a1.doathing();
a.doathing(); // also `A different thing`
If that detail were important, an (even hackier) solution could be devised. But before getting there, some clarifications might be helpful. In fact, it's not obvious if all the classes you want to modify are actually defined in the scope you have access to.
Share
Improve this answer
Follow
edited yesterday
answered yesterday
kikonkikon
9,77033 gold badges1111 silver badges4040 bronze badges
Comments
Add a comment
Your Answer
Thanks for contributing an answer to Stack Overflow!Please be sure to answer the question. Provide details and share your research!But avoid …Asking for help, clarification, or responding to other answers.Making statements based on opinion; back them up with references or personal experience.To learn more, see our tips on writing great answers.
Draft saved
Draft discarded
Sign up or log in
Sign up using Google
Sign up using Email and Password
Submit
Post as a guest
Name
Email
Required, but never shown
Post as a guest
Name
Email
Required, but never shown
Post Your Answer
Discard
By clicking “Post Your Answer”, you agree to our terms of service and acknowledge you have read our privacy policy.
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
javascript
See similar questions with these tags.
The Overflow Blog
Democratizing your data access with AI agents
The history and future of software development (part 1)
Featured on Meta
Spevacus has joined us as a Community Manager
Introducing a new proactive anti-spam measure
New and improved coding challenges
New comment UI experiment graduation
Policy: Generative AI (e.g., ChatGPT) is banned
Related
5797
Loop (for each) over an array in JavaScript
3889
How do I test for an empty JavaScript object?
3452
How can I change an element's class with JavaScript?
4459
Which "href" value should I use for JavaScript links, "#" or "javascript:void(0)"?
4154
How do I check for an empty/undefined/null string in JavaScript?
2688
Set a default parameter value for a JavaScript function
2330
Are double quotes and single quotes interchangeable for string literals in JavaScript?
1101
Is Safari on iOS 6 caching $.ajax results?
Hot Network Questions
Using Switch to return a value depending on the sign of a real number
What happened to all of the energy created at the Big Bang when the matter and antimatter annihilated each other?
Verify a Chinese ID Number
Ian Stewart, Definition for Primitive Root of Unity
What is this glass device I found next to drinking glasses in the south of France
How to use ≥ 16 usbip ports from one host controller on Debian?
Does clipping distortion affect the information contained within a frequency-modulated signal?
rkhunter Updates -- "no updates" for several months now
What "real mistakes" exist in the Messier catalog?
"Dubito, ergo cognosco". Could we argue that the very fact of doubting, sets a limit to the epistemological notions we can actually doubt?
What does it mean for work to be done ON a system?
Changing size of math environments
How to crack ECC using halving
Change the font for the dagger symbol in math mode
Simplification of an analytically evaluated integral expressed in terms of elliptic integrals
What is the exact meaning of olcAccess: {1}to dn.exact="" by * read
Prove that the sequences of numbers coincide
Could our telescopes detect a type I civilisation
Regulator circuit outputs negative current
Lock icon to convey disabled but has a clickable feature?
How to convert square wave to sine wave
What is the effectiveness of using a miniature (ground) plane to route vias through as opposed to using separate paths and vias?
Why would disembarking a few passengers delay a flight by 3 hours?
Does pseudo-vitae revenants produce replenish vitae in Kindred?
more hot questions
Question feed
Subscribe to RSS
Question feed
To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
lang-js
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.25.34480