GitHub - mindcraft-bots/mindcraft: Minecraft AI with LLMs+Mineflayer
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
App Modernization
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
mindcraft-bots
/
mindcraft
Public
Notifications
You must be signed in to change notification settings
Fork
561
Star
4.2k
Minecraft AI with LLMs+Mineflayer
License
MIT license
4.2k
stars
561
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
89
Pull requests
2
Actions
Projects
0
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Issues
Pull requests
Actions
Projects
Security
Insights
mindcraft-bots/mindcraft
developBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit¬†History1,547 Commitsbotsbots¬†¬†patchespatches¬†¬†profilesprofiles¬†¬†services/viaproxyservices/viaproxy¬†¬†srcsrc¬†¬†taskstasks¬†¬†.gitignore.gitignore¬†¬†DockerfileDockerfile¬†¬†FAQ.mdFAQ.md¬†¬†LICENSELICENSE¬†¬†README.mdREADME.md¬†¬†andy.jsonandy.json¬†¬†docker-compose.ymldocker-compose.yml¬†¬†eslint.config.jseslint.config.js¬†¬†keys.example.jsonkeys.example.json¬†¬†main.jsmain.js¬†¬†minecollab.mdminecollab.md¬†¬†package.jsonpackage.json¬†¬†requirements.txtrequirements.txt¬†¬†settings.jssettings.js¬†¬†View all filesRepository files navigationREADMEMIT licenseMindcraft üß†‚õèÔ∏è
Crafting minds for Minecraft with LLMs and Mineflayer!
FAQ | Discord Support | Video Tutorial | Blog Post | Contributor TODO | Paper Website | MineCollab
CautionDo not connect this bot to public servers with coding enabled. This project allows an LLM to write/execute code on your computer. The code is sandboxed, but still vulnerable to injection attacks. Code writing is disabled by default, you can enable it by setting allow_insecure_coding to true in settings.js. Ye be warned.
Requirements
Minecraft Java Edition (up to v1.21.6, recommend v1.21.1)
Node.js Installed (at least v18)
One of these: OpenAI API Key | Gemini API Key | Anthropic API Key | Replicate API Key | Hugging Face API Key | Groq API Key | Ollama Installed. | Mistral API Key | Qwen API Key [Intl.]/[cn] | Novita AI API Key | Cerebras API Key | Mercury API
Install and Run
Make sure you have the requirements above.
Clone or download this repository (big green button) 'git clone https://github.com/mindcraft-bots/mindcraft.git'
Rename keys.example.json to keys.json and fill in your API keys (you only need one). The desired model is set in andy.json or other profiles. For other models refer to the table below.
In terminal/command prompt, run npm install from the installed directory
Start a minecraft world and open it to LAN on localhost port 55916
Run node main.js from the installed directory
If you encounter issues, check the FAQ or find support on discord. We are currently not very responsive to github issues. To run tasks please refer to Minecollab Instructions
Tasks
Bot performance can be roughly evaluated with Tasks. Tasks automatically intialize bots with a goal to acquire specific items or construct predefined buildings, and remove the bot once the goal is achieved.
To run tasks, you need python, pip, and optionally conda. You can then install dependencies with pip install -r requirements.txt.
Tasks are defined in json files in the tasks folder, and can be run with: python tasks/run_task_file.py --task_path=tasks/example_tasks.json
For full evaluations, you will need to download and install the task suite. Full instructions.
Model Customization
You can configure project details in settings.js. See file.
You can configure the agent's name, model, and prompts in their profile like andy.json with the model field. For comprehensive details, see Model Specifications.
API
Config Variable
Example Model name
Docs
openai
OPENAI_API_KEY
gpt-4o-mini
docs
google
GEMINI_API_KEY
gemini-2.0-flash
docs
anthropic
ANTHROPIC_API_KEY
claude-3-haiku-20240307
docs
xai
XAI_API_KEY
grok-2-1212
docs
deepseek
DEEPSEEK_API_KEY
deepseek-chat
docs
ollama (local)
n/a
ollama/sweaterdog/andy-4:micro-q8_0
docs
qwen
QWEN_API_KEY
qwen-max
Intl./cn
mistral
MISTRAL_API_KEY
mistral-large-latest
docs
replicate
REPLICATE_API_KEY
replicate/meta/meta-llama-3-70b-instruct
docs
groq (not grok)
GROQCLOUD_API_KEY
groq/mixtral-8x7b-32768
docs
huggingface
HUGGINGFACE_API_KEY
huggingface/mistralai/Mistral-Nemo-Instruct-2407
docs
novita
NOVITA_API_KEY
novita/deepseek/deepseek-r1
docs
openrouter
OPENROUTER_API_KEY
openrouter/anthropic/claude-3.5-sonnet
docs
glhf.chat
GHLF_API_KEY
glhf/hf:meta-llama/Llama-3.1-405B-Instruct
docs
hyperbolic
HYPERBOLIC_API_KEY
hyperbolic/deepseek-ai/DeepSeek-V3
docs
vllm
n/a
vllm/llama3
n/a
cerebras
CEREBRAS_API_KEY
cerebras/llama-3.3-70b
docs
mercury
MERCURY_API_KEY
mercury-coder-small
docs
If you use Ollama, to install the models used by default (generation and embedding), execute the following terminal command:
ollama pull sweaterdog/andy-4:micro-q8_0 && ollama pull embeddinggemma
To use Azure, you can reuse the OPENAI_API_KEY environment variable. You can get the key from the Azure portal. See azure.json for an example.
Online Servers
To connect to online servers your bot will need an official Microsoft/Minecraft account. You can use your own personal one, but will need another account if you want to connect too and play with it. To connect, change these lines in settings.js:
"host": "111.222.333.444",
"port": 55920,
"auth": "microsoft",
// rest is same...
ImportantThe bot's name in the profile.json must exactly match the Minecraft profile name! Otherwise the bot will spam talk to itself.
To use different accounts, Mindcraft will connect with the account that the Minecraft launcher is currently using. You can switch accounts in the launcer, then run node main.js, then switch to your main account after the bot has connected.
Docker Container
If you intend to allow_insecure_coding, it is a good idea to run the app in a docker container to reduce risks of running unknown code. This is strongly recommended before connecting to remote servers.
docker run -i -t --rm -v $(pwd):/app -w /app -p 3000-3003:3000-3003 node:latest node main.js
or simply
docker-compose up
When running in docker, if you want the bot to join your local minecraft server, you have to use a special host address host.docker.internal to call your localhost from inside your docker container. Put this into your settings.js:
"host": "host.docker.internal", // instead of "localhost", to join your local minecraft from inside the docker container
To connect to an unsupported minecraft version, you can try to use viaproxy
Bot Profiles
Bot profiles are json files (such as andy.json) that define:
Bot backend LLMs to use for talking, coding, and embedding.
Prompts used to influence the bot's behavior.
Examples help the bot perform tasks.
Model Specifications
LLM models can be specified simply as "model": "gpt-4o". However, you can use different models for chat, coding, and embeddings.
You can pass a string or an object for these fields. A model object must specify an api, and optionally a model, url, and additional params.
"model": {
"api": "openai",
"model": "gpt-4o",
"url": "https://api.openai.com/v1/",
"params": {
"max_tokens": 1000,
"temperature": 1
}
},
"code_model": {
"api": "openai",
"model": "gpt-4",
"url": "https://api.openai.com/v1/"
},
"vision_model": {
"api": "openai",
"model": "gpt-4o",
"url": "https://api.openai.com/v1/"
},
"embedding": {
"api": "openai",
"url": "https://api.openai.com/v1/",
"model": "text-embedding-ada-002"
},
"speak_model": {
"api": "openai",
"url": "https://api.openai.com/v1/",
"model": "tts-1",
"voice": "echo"
}
model is used for chat, code_model is used for newAction coding, vision_model is used for image interpretation, and embedding is used to embed text for example selection. If code_model or vision_model is not specified, model will be used by default. Not all APIs support embeddings or vision.
All apis have default models and urls, so those fields are optional. The params field is optional and can be used to specify additional parameters for the model. It accepts any key-value pairs supported by the api. Is not supported for embedding models.
Embedding Models
Embedding models are used to embed and efficiently select relevant examples for conversation and coding.
Supported Embedding APIs: openai, google, replicate, huggingface, novita
If you try to use an unsupported model, then it will default to a simple word-overlap method. Expect reduced performance, recommend mixing APIs to ensure embedding support.
Specifying Profiles via Command Line
By default, the program will use the profiles specified in settings.js. You can specify one or more agent profiles using the --profiles argument: node main.js --profiles ./profiles/andy.json ./profiles/jill.json
Patches
Some of the node modules that we depend on have bugs in them. To add a patch, change your local node module file and run npx patch-package [package-name]
Citation:
@article{mindcraft2025,
title = {Collaborating Action by Action: A Multi-agent LLM Framework for Embodied Reasoning},
author = {White*, Isadora and Nottingham*, Kolby and Maniar, Ayush and Robinson, Max and Lillemark, Hansen and Maheshwari, Mehul and Qin, Lianhui and Ammanabrolu, Prithviraj},
journal = {arXiv preprint arXiv:2504.17950},
year = {2025},
url = {https://arxiv.org/abs/2504.17950},
}
About
Minecraft AI with LLMs+Mineflayer
Resources
Readme
License
MIT license
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
4.2k
stars
Watchers
56
watching
Forks
561
forks
Report repository
Releases
4
Mindcraft v0.1.3 | Villagers and Buckets
Latest
Sep 20, 2025
+ 3 releases
Packages
0
No packages published
Uh oh!
There was an error while loading. Please reload this page.
Contributors
51
+ 37 contributors
Languages
JavaScript
70.7%
Python
23.1%
HTML
5.8%
Other
0.4%
Footer
¬© 2025 GitHub,¬†Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can‚Äôt perform that action at this time.