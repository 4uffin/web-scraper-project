GitHub - SkyworkAI/DeepResearchAgent: DeepResearchAgent is a hierarchical multi-agent system designed not only for deep research tasks but also for general-purpose task solving. The framework leverages a top-level planning agent to coordinate multiple specialized lower-level agents, enabling automated task decomposition and efficient execution across diverse and complex domains.
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
App Modernization
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
SkyworkAI
/
DeepResearchAgent
Public
Notifications
You must be signed in to change notification settings
Fork
358
Star
2.7k
DeepResearchAgent is a hierarchical multi-agent system designed not only for deep research tasks but also for general-purpose task solving. The framework leverages a top-level planning agent to coordinate multiple specialized lower-level agents, enabling automated task decomposition and efficient execution across diverse and complex domains.
skyworkai.github.io/DeepResearchAgent/
License
MIT license
2.7k
stars
358
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
5
Pull requests
4
Actions
Projects
0
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Issues
Pull requests
Actions
Projects
Security
Insights
SkyworkAI/DeepResearchAgent
mainBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit¬†History127 Commits.github/workflows.github/workflows¬†¬†.idea.idea¬†¬†configsconfigs¬†¬†docsdocs¬†¬†examplesexamples¬†¬†srcsrc¬†¬†teststests¬†¬†.env.template.env.template¬†¬†.gitignore.gitignore¬†¬†LICENSELICENSE¬†¬†MakefileMakefile¬†¬†README.mdREADME.md¬†¬†README_CN.mdREADME_CN.md¬†¬†main.pymain.py¬†¬†poetry.lockpoetry.lock¬†¬†pyproject.tomlpyproject.toml¬†¬†requirements.txtrequirements.txt¬†¬†View all filesRepository files navigationREADMEMIT licenseDeepResearchAgent
English | ÁÆÄ‰Ωì‰∏≠Êñá | üåê Website
Introduction
image.png
DeepResearchAgent is a hierarchical multi-agent system designed not only for deep research tasks but also for general-purpose task solving. The framework leverages a top-level planning agent to coordinate multiple specialized lower-level agents, enabling automated task decomposition and efficient execution across diverse and complex domains.
üåê Check out our interactive website: https://skyworkai.github.io/DeepResearchAgent/ - Explore the architecture, view experiments, and learn more about our research!
Architecture
The system adopts a two-layer structure:
1. Top-Level Planning Agent
Responsible for understanding, decomposing, and planning the overall workflow for a given task.
Breaks down tasks into manageable sub-tasks and assigns them to appropriate lower-level agents.
Dynamically coordinates the collaboration among agents to ensure smooth task completion.
2. Specialized Lower-Level Agents
Deep Analyzer
Performs in-depth analysis of input information, extracting key insights and potential requirements.
Supports analysis of various data types, including text and structured data.
Deep Researcher
Conducts thorough research on specified topics or questions, retrieving and synthesizing high-quality information.
Capable of generating research reports or knowledge summaries automatically.
Browser Use
Automates browser operations, supporting web search, information extraction, and data collection tasks.
Assists the Deep Researcher in acquiring up-to-date information from the internet.
MCP Manager Agent
Manages and orchestrates Model Context Protocol (MCP) tools and services.
Enables dynamic tool discovery, registration, and execution through MCP standards.
Supports both local and remote MCP tool integration for enhanced agent capabilities.
General Tool Calling Agent
Provides a general-purpose interface for invoking various tools and APIs.
Supports function calling, allowing the agent to execute specific tasks or retrieve information from external services.
Features
Hierarchical agent collaboration for complex and dynamic task scenarios
Extensible agent system, allowing easy integration of additional specialized agents
Automated information analysis, research, and web interaction capabilities
Secure Python code execution environment for tools, featuring configurable import controls, restricted built-ins, attribute access limitations, and resource limits. (See PythonInterpreterTool Sandboxing for details).
Support for asynchronous operations, enabling efficient handling of multiple tasks and agents
Support for local and remote model inference, including OpenAI, Anthropic, Google LLMs, and local Qwen models via vLLM
Support for image and video generation tools based on the Imagen and Veo3 models, respectively
Image and Video Examples:
Updates
2025.08.04: Add the support for loading mcp tools from the local json file.
2025.07.08: Add the video generator tool, which can generate a video based on the input text and/or image. The video generator tool is based on the Veo3 model.
2025.07.08: Add the image generator tool, which can generate images based on the input text. The image generator tool is based on the Imagen model.
2025.07.07: Due to the limited flexibility of TOML configuration files, we have switched to using the config format supported by mmengine.
2025.06.20: Add the support for the mcp (Both the local mcp and remote mcp).
2025.06.17: Update technical report https://arxiv.org/pdf/2506.12508.
2025.06.01: Update the browser-use to 0.1.48.
2025.05.30: Convert the sub agent to a function call. Planning agent can now be gpt-4.1 or gemini-2.5-pro.
2025.05.27: Support OpenAI, Anthropic, Google LLMs, and local Qwen models (via vLLM, see details in Usage).
TODO List
Asynchronous feature completed
Image Generator Tool completed
Video Generator Tool completed
MCP in progress
Load local MCP tools from JSON file completed
AI4Research Agent to be developed
Novel Writing Agent to be developed
Installation
Prepare Environment
# poetry install environment
conda create -n dra python=3.11
conda activate dra
make install
# (Optional) You can also use requirements.txt
conda create -n dra python=3.11
conda activate dra
make install-requirements
# playwright install if needed
pip install playwright
playwright install chromium --with-deps --no-shell
Set Up .env
Please refer to the .env.template file and create a .env file in the root directory of the project. This file is used to configure API keys and other environment variables.
Refer to the following instructions to obtain the necessary google gemini-2.5-pro API key and set it in the .env file:
https://aistudio.google.com/app/apikey
https://cloud.google.com/docs/authentication/application-default-credentials?hl=zh-cn
brew install --cask google-cloud-sdk
gcloud init
gcloud auth application-default login
Usage
Main Example
A simple example to demonstrate the usage of the DeepResearchAgent framework.
python main.py
Run Single Agent Example
A simple example to demonstrate the usage of a single agent, such as a general tool calling agent.
python examples/run_general.py
RUN GAIA Evaluation Example
# Download GAIA
mkdir data && cd data
git clone https://huggingface.co/datasets/gaia-benchmark/GAIA
# Run
python examples/run_gaia.py
Experiments
We evaluated our agent on both GAIA validation and test sets, achieving state-of-the-art performance. Our system demonstrates superior performance across all difficulty levels.
With the integration of the Computer Use and MCP Manager Agent, which now enables pixel-level control of the browser, our system demonstrates remarkable evolutionary capabilities. The agents can dynamically acquire and enhance their abilities through learning and adaptation, leading to significantly improved performance. The latest results show:
Test Set: 83.39 (average), with 93.55 on Level 1, 83.02 on Level 2, and 65.31 on Level 3
Validation Set: 82.4 (average), with 92.5 on Level 1, 83.7 on Level 2, and 57.7 on Level 3
Questions
1. About Qwen Models
Our framework now supports:
qwen2.5-7b-instruct
qwen2.5-14b-instruct
qwen2.5-32b-instruct
Update your config:
model_id = "qwen2.5-7b-instruct"
2. Browser Use
If problems occur, reinstall:
pip install "browser-use[memory]"==0.1.48
pip install playwright
playwright install chromium --with-deps --no-shell
3. Sub-Agent Calling
Function-calling is now supported natively by GPT-4.1 / Gemini 2.5 Pro. Claude-3.7-Sonnet is also recommended.
4. Use vllm for local models
We provide huggingface as a shortcut to the local model. Also provide vllm as a way to start services so that parallel acceleration can be provided.
Step 1: Launch the vLLM Inference Service
nohup bash -c 'CUDA_VISIBLE_DEVICES=0,1 python -m vllm.entrypoints.openai.api_server \
--model /input0/Qwen3-32B \
--served-model-name Qwen \
--host 0.0.0.0 \
--port 8000 \
--max-num-seqs 16 \
--enable-auto-tool-choice \
--tool-call-parser hermes \
--tensor_parallel_size 2' > vllm_qwen.log 2>&1 &
Update .env:
QWEN_API_BASE=http://localhost:8000/v1
QWEN_API_KEY="abc"
Step 2: Launch the Agent Service
python main.py
Example command:
Use deep_researcher_agent to search the latest papers on the topic of 'AI Agent' and then summarize it.
Acknowledgement
DeepResearchAgent is primarily inspired by the architecture of smolagents. The following improvements have been made:
The codebase of smolagents has been modularized for better structure and organization.
The original synchronous framework has been refactored into an asynchronous one.
The multi-agent setup process has been optimized to make it more user-friendly and efficient.
We would like to express our gratitude to the following open source projects, which have greatly contributed to the development of this work:
smolagents - A lightweight agent framework.
OpenManus - An asynchronous agent framework.
browser-use - An AI-powered browser automation tool.
crawl4ai - A web crawling library for AI applications.
markitdown - A tool for converting files to Markdown format.
We sincerely appreciate the efforts of all contributors and maintainers of these projects for their commitment to advancing AI technologies and making them available to the wider community.
Contribution
Contributions and suggestions are welcome! Feel free to open issues or submit pull requests.
Cite
@misc{zhang2025agentorchestrahierarchicalmultiagentframework,
title={AgentOrchestra: A Hierarchical Multi-Agent Framework for General-Purpose Task Solving},
author={Wentao Zhang, Liang Zeng, Yuzhen Xiao, Yongcong Li, Ce Cui, Yilei Zhao, Rui Hu, Yang Liu, Yahui Zhou, Bo An},
year={2025},
eprint={2506.12508},
archivePrefix={arXiv},
primaryClass={cs.AI},
url={https://arxiv.org/abs/2506.12508},
}
üá®üá≥ ‰∏≠ÊñáÁâàËØ¥ÊòéÊñáÊ°£
Â¶ÇÊûú‰Ω†Êõ¥‰π†ÊÉØÈòÖËØª‰∏≠ÊñáËØ¥ÊòéÊñáÊ°£ÔºåËØ∑Êü•ÈòÖ README_CN.md„ÄÇ
About
DeepResearchAgent is a hierarchical multi-agent system designed not only for deep research tasks but also for general-purpose task solving. The framework leverages a top-level planning agent to coordinate multiple specialized lower-level agents, enabling automated task decomposition and efficient execution across diverse and complex domains.
skyworkai.github.io/DeepResearchAgent/
Topics
gaia
multiagent-systems
general-purpose
multimodel
Resources
Readme
License
MIT license
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
2.7k
stars
Watchers
18
watching
Forks
358
forks
Report repository
Releases
No releases published
Packages
0
No packages published
Uh oh!
There was an error while loading. Please reload this page.
Contributors
3
DVampire
Wentao Zhang
ZV-Liu
ZV-Liu
google-labs-jules[bot]
Languages
JavaScript
53.3%
Fluent
31.2%
Python
11.8%
CSS
3.0%
Other
0.7%
Footer
¬© 2025 GitHub,¬†Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can‚Äôt perform that action at this time.