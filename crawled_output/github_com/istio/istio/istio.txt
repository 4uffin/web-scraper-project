GitHub - istio/istio: Connect, secure, control, and observe services.
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
App Modernization
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
istio
/
istio
Public
Notifications
You must be signed in to change notification settings
Fork
8.1k
Star
37.4k
Connect, secure, control, and observe services.
istio.io
License
Apache-2.0 license
37.4k
stars
8.1k
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
451
Pull requests
57
Discussions
Actions
Wiki
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Issues
Pull requests
Discussions
Actions
Wiki
Security
Insights
istio/istio
masterBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit History25,441 Commits.devcontainer.devcontainer  .github.github  architecturearchitecture  binbin  cnicni  common-protos/k8s.iocommon-protos/k8s.io  commoncommon  dockerdocker  istioctlistioctl  licenseslicenses  logologo  manifestsmanifests  operatoroperator  pilotpilot  pkgpkg  prowprow  releaserelease  releasenotesreleasenotes  samplessamples  securitysecurity  teststests  toolstools  .gitattributes.gitattributes  .gitignore.gitignore  BUGS-AND-FEATURE-REQUESTS.mdBUGS-AND-FEATURE-REQUESTS.md  CODEOWNERSCODEOWNERS  CONTRIBUTING.mdCONTRIBUTING.md  LICENSELICENSE  MakefileMakefile  Makefile.core.mkMakefile.core.mk  Makefile.overrides.mkMakefile.overrides.mk  README.mdREADME.md  RELEASE_BRANCHES.mdRELEASE_BRANCHES.md  SUPPORT.mdSUPPORT.md  VERSIONVERSION  go.modgo.mod  go.sumgo.sum  istio.depsistio.deps  View all filesRepository files navigationREADMEContributingApache-2.0 licenseSecurityIstio
Istio is an open source service mesh that layers transparently onto existing distributed applications. Istio’s powerful features provide a uniform and more efficient way to secure, connect, and monitor services. Istio is the path to load balancing, service-to-service authentication, and monitoring – with few or no service code changes.
For in-depth information about how to use Istio, visit istio.io
To ask questions and get assistance from our community, visit Github Discussions
To learn how to participate in our overall community, visit our community page
In this README:
Introduction
Repositories
Issue management
In addition, here are some other documents you may wish to read:
Istio Community - describes how to get involved and contribute to the Istio project
Istio Developer's Guide - explains how to set up and use an Istio development environment
Project Conventions - describes the conventions we use within the code base
Creating Fast and Lean Code - performance-oriented advice and guidelines for the code base
You'll find many other useful documents on our Wiki.
Introduction
Istio is an open platform for providing a uniform way to integrate
microservices, manage traffic flow across microservices, enforce policies
and aggregate telemetry data. Istio's control plane provides an abstraction
layer over the underlying cluster management platform, such as Kubernetes.
Istio is composed of these components:
Envoy - Sidecar proxies per microservice to handle ingress/egress traffic
between services in the cluster and from a service to external
services. The proxies form a secure microservice mesh providing a rich
set of functions like discovery, rich layer-7 routing, circuit breakers,
policy enforcement and telemetry recording/reporting
functions.
Note: The service mesh is not an overlay network. It
simplifies and enhances how microservices in an application talk to each
other over the network provided by the underlying platform.
Istiod - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:
Pilot - Responsible for configuring the proxies at runtime.
Citadel - Responsible for certificate issuance and rotation.
Galley - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.
Operator - The component provides user friendly options to operate the Istio service mesh.
Repositories
The Istio project is divided across a few GitHub repositories:
istio/api. This repository defines
component-level APIs and common configuration formats for the Istio platform.
istio/community. This repository contains
information on the Istio community, including the various documents that govern
the Istio open source project.
istio/istio. This is the main code repository. It hosts Istio's
core components, install artifacts, and sample programs. It includes:
istioctl. This directory contains code for the
istioctl command line utility.
pilot. This directory
contains platform-specific code to populate the
abstract service model, dynamically reconfigure the proxies
when the application topology changes, as well as translate
routing rules into proxy specific configuration.
security. This directory contains security related code,
including Citadel (acting as Certificate Authority), citadel agent, etc.
istio/proxy. The Istio proxy contains
extensions to the Envoy proxy (in the form of
Envoy filters) that support authentication, authorization, and telemetry collection.
istio/ztunnel. The repository contains the Rust implementation of the ztunnel
component of Ambient mesh.
istio/client-go. This repository defines
auto-generated Kubernetes clients for interacting with Istio resources programmatically.
NoteOnly the istio/api and istio/client-go repositories expose stable interfaces intended for direct usage as libraries.
Issue management
We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:
Epic. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things.
Each issue is ultimately part of an epic.
Milestone. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we
think the issue should get addressed.
Priority. Each issue has a priority which is represented by the column in the Prioritization project. Priority can be one of
P0, P1, P2, or >P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the
milestone cannot be considered achieved if the issue isn't resolved.
Istio is a Cloud Native Computing Foundation project.
About
Connect, secure, control, and observe services.
istio.io
Topics
kubernetes
microservices
microservice
consul
api-management
proxies
resiliency
nomad
fault-injection
circuit-breaker
service-mesh
lyft-envoy
envoy
polyglot-microservices
enforce-policies
request-routing
Resources
Readme
License
Apache-2.0 license
Contributing
Contributing
Security policy
Security policy
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
37.4k
stars
Watchers
980
watching
Forks
8.1k
forks
Report repository
Releases
396
Istio 1.27.1
Latest
Sep 3, 2025
+ 395 releases
Packages
0
No packages published
Uh oh!
There was an error while loading. Please reload this page.
Contributors
1,148
+ 1,134 contributors
Languages
Go
98.0%
Shell
0.8%
Makefile
0.3%
CSS
0.3%
Jsonnet
0.2%
HTML
0.2%
Other
0.2%
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.