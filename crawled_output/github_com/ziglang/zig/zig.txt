GitHub - ziglang/zig: General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
ziglang
/
zig
Public
Uh oh!
There was an error while loading. Please reload this page.
Notifications
You must be signed in to change notification settings
Fork
3k
Star
41.2k
General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
ziglang.org
License
MIT license
41.2k
stars
3k
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
3.5k
Pull requests
291
Actions
Wiki
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Issues
Pull requests
Actions
Wiki
Security
Insights
ziglang/zig
masterBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit History34,932 Commits.github.github  cici  cmakecmake  docdoc  liblib  srcsrc  stage1stage1  testtest  toolstools  .gitattributes.gitattributes  .gitignore.gitignore  .mailmap.mailmap  CMakeLists.txtCMakeLists.txt  LICENSELICENSE  README.mdREADME.md  bootstrap.cbootstrap.c  build.zigbuild.zig  build.zig.zonbuild.zig.zon  View all filesRepository files navigationREADMECode of conductContributingMIT license
A general-purpose programming language and toolchain for maintaining
robust, optimal, and reusable software.
https://ziglang.org/
Documentation
If you are looking at this README file in a source tree, please refer to the
Release Notes, Language Reference, or Standard Library
Documentation corresponding to the version of Zig that you are using by
following the appropriate link on the
download page.
Otherwise, you're looking at a release of Zig, so you can find the language
reference at doc/langref.html, and the standard library documentation by
running zig std, which will open a browser tab.
Installation
download a pre-built binary
install from a package manager
bootstrap zig for any target
A Zig installation is composed of two things:
The Zig executable
The lib/ directory
At runtime, the executable searches up the file system for the lib/ directory,
relative to itself:
lib/
lib/zig/
../lib/
../lib/zig/
(and so on)
In other words, you can unpack a release of Zig anywhere, and then begin
using it immediately. There is no need to install it globally, although this
mechanism supports that use case too (i.e. /usr/bin/zig and /usr/lib/zig/).
Building from Source
Ensure you have the required dependencies:
CMake >= 3.15
System C/C++ Toolchain
LLVM, Clang, LLD development libraries == 21.x
Then it is the standard CMake build process:
mkdir build
cd build
cmake ..
make install
For more options, tips, and troubleshooting, please see the
Building Zig From Source
page on the wiki.
Building from Source without LLVM
In this case, the only system dependency is a C compiler.
cc -o bootstrap bootstrap.c
./bootstrap
This produces a zig2 executable in the current working directory. This is a
"stage2" build of the compiler,
without LLVM extensions, and is
therefore lacking these features:
Release mode optimizations
aarch64 machine code backend
@cImport
zig translate-c
Ability to compile assembly files
Some ELF linking features
Most COFF/PE linking features
Some WebAssembly linking features
Ability to create import libs from def files
Ability to create static archives from object files
Ability to compile C, C++, Objective-C, and Objective-C++ files
However, a compiler built this way does provide a C backend, which may be
useful for creating system packages of Zig projects using the system C
toolchain. In this case, LLVM is not needed!
Furthermore, a compiler built this way provides an LLVM backend that produces
bitcode files, which may be compiled into object files via a system Clang
package. This can be used to produce system packages of Zig applications
without the Zig package dependency on LLVM.
Contributing
Donate monthly.
Zig is Free and Open Source Software. We welcome bug reports and patches from
everyone. However, keep in mind that Zig governance is BDFN (Benevolent
Dictator For Now) which means that Andrew Kelley has final say on the design
and implementation of everything.
One of the best ways you can contribute to Zig is to start using it for an
open-source personal project.
This leads to discovering bugs and helps flesh out use cases, which lead to
further design iterations of Zig. Importantly, each issue found this way comes
with real world motivations, making it straightforward to explain the reasoning
behind proposals and feature requests.
You will be taken much more seriously on the issue tracker if you have a
personal project that uses Zig.
The issue label
Contributor Friendly
exists to help you find issues that are limited in scope and/or knowledge of
Zig internals.
Please note that issues labeled
Proposal
but do not also have the
Accepted
label are still under consideration, and efforts to implement such a proposal
have a high risk of being wasted. If you are interested in a proposal which is
still under consideration, please express your interest in the issue tracker,
providing extra insights and considerations that others have not yet expressed.
The most highly regarded argument in such a discussion is a real world use case.
For more tips, please see the
Contributing page on the
wiki.
Community
The Zig community is decentralized. Anyone is free to start and maintain their
own space for Zig users to gather. There is no concept of "official" or
"unofficial". Each gathering place has its own moderators and rules. Users are
encouraged to be aware of the social structures of the spaces they inhabit, and
work purposefully to facilitate spaces that align with their values.
Please see the Community wiki
page for a public listing of social spaces.
About
General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
ziglang.org
Topics
language
compiler
zig
Resources
Readme
License
MIT license
Code of conduct
Code of conduct
Contributing
Contributing
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
41.2k
stars
Watchers
385
watching
Forks
3k
forks
Report repository
Releases
21
0.15.1
Latest
Aug 29, 2025
+ 20 releases
Sponsor this project
Sponsor
Uh oh!
There was an error while loading. Please reload this page.
Learn more about GitHub Sponsors
Packages
0
No packages published
Uh oh!
There was an error while loading. Please reload this page.
Contributors
1,078
+ 1,064 contributors
Languages
Zig
97.8%
C
1.3%
C++
0.6%
Python
0.1%
CMake
0.1%
JavaScript
0.1%
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.