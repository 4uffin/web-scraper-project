GitHub - WebKit/WebKit: Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
WebKit
/
WebKit
Public
Notifications
You must be signed in to change notification settings
Fork
1.7k
Star
9.2k
Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.
9.2k
stars
1.7k
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Pull requests
1.6k
Actions
Wiki
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Pull requests
Actions
Wiki
Security
Insights
WebKit/WebKit
mainBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit History300,289 Commits.github.github  ConfigurationsConfigurations  JSTestsJSTests  LayoutTestsLayoutTests  ManualTestsManualTests  PerformanceTestsPerformanceTests  SourceSource  ToolsTools  WebDriverTestsWebDriverTests  WebKit.xcworkspaceWebKit.xcworkspace  WebKitLibrariesWebKitLibraries  WebsitesWebsites  metadatametadata  resourcesresources  .ccls.ccls  .clang-format.clang-format  .dir-locals.el.dir-locals.el  .editorconfig.editorconfig  .gitattributes.gitattributes  .gitignore.gitignore  .sourcefilters.sourcefilters  .submitproject.submitproject  .submitproject-tools.submitproject-tools  .swift-format.swift-format  CMakeLists.txtCMakeLists.txt  CMakePresets.jsonCMakePresets.json  Introduction.mdIntroduction.md  MakefileMakefile  Makefile.sharedMakefile.shared  ReadMe.mdReadMe.md  vcpkg-configuration.jsonvcpkg-configuration.json  vcpkg.jsonvcpkg.json  View all filesRepository files navigationREADMEWebKit
WebKit is a cross-platform web browser engine. On iOS and macOS, it powers Safari, Mail, Apple Books, and many other applications. For more information about WebKit, see the WebKit project website.
Trying the Latest
On macOS, download Safari Technology Preview to test the latest version of WebKit. On Linux, download Epiphany Technology Preview. On Windows, you'll have to build it yourself.
Reporting Bugs
Search WebKit Bugzilla to see if there is an existing report for the bug you've encountered.
Create a Bugzilla account to report bugs (and comment on them) if you haven't done so already.
File a bug in accordance with our guidelines.
Once your bug is filed, you will receive email when it is updated at each stage in the bug life cycle. After the bug is considered fixed, you may be asked to download the latest nightly and confirm that the fix works for you.
Getting the Code
Run the following command to clone WebKit's Git repository:
git clone https://github.com/WebKit/WebKit.git WebKit
You can enable git fsmonitor to make many git commands faster (such as git status) with git config core.fsmonitor true
Building WebKit
Building for Apple platforms
Install Xcode and its command line tools if you haven't done so already:
Install Xcode Get Xcode from https://developer.apple.com/downloads. To build WebKit for OS X, Xcode 5.1.1 or later is required. To build WebKit for iOS Simulator, Xcode 7 or later is required.
Install the Xcode Command Line Tools In Terminal, run the command: xcode-select --install
Run the following command to build a macOS debug build with debugging symbols and assertions:
Tools/Scripts/build-webkit --debug
For performance testing, and other purposes, use --release instead. If you
also need debug symbols (dSYMs), run:
Tools/Scripts/build-webkit --release DEBUG_INFORMATION_FORMAT=dwarf-with-dsym
Embedded Builds
To build for an embedded platform like iOS, tvOS, or watchOS, pass a platform
argument to build-webkit.
For example, to build a debug build with debugging symbols and assertions for
embedded simulators:
Tools/Scripts/build-webkit --debug --<platform>-simulator
or embedded devices:
Tools/Scripts/build-webkit --debug --<platform>-device
where platform is ios, tvos or watchos.
Using Xcode
You can open WebKit.xcworkspace to build and debug WebKit within Xcode.
Select the "Everything up to WebKit + Tools" scheme to build the entire
project.
If you don't use a custom build location in Xcode preferences, you have to
update the workspace settings to use WebKitBuild directory.
In menu bar,
choose File > Workspace Settings, then click the Advanced button, select
"Custom", "Relative to Workspace", and enter WebKitBuild for both Products
and Intermediates.
Building the GTK Port
For production builds:
cmake -DPORT=GTK -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja
ninja
sudo ninja install
For development builds:
Tools/gtk/install-dependencies
Tools/Scripts/update-webkitgtk-libs
Tools/Scripts/build-webkit --gtk --debug
For more information on building WebKitGTK, see the wiki page.
Building the WPE Port
For production builds:
cmake -DPORT=WPE -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja
ninja
sudo ninja install
For development builds:
Tools/wpe/install-dependencies
Tools/Scripts/update-webkitwpe-libs
Tools/Scripts/build-webkit --wpe --debug
Building Windows Port
For building WebKit on Windows, see the WebKit on Windows page.
Running WebKit
With Safari and Other macOS Applications
Run the following command to launch Safari with your local build of WebKit:
Tools/Scripts/run-safari --debug
The run-safari script sets the DYLD_FRAMEWORK_PATH environment variable to point to your build products, and then launches /Applications/Safari.app. DYLD_FRAMEWORK_PATH tells the system loader to prefer your build products over the frameworks installed in /System/Library/Frameworks.
To run other applications with your local build of WebKit, run the following command:
Tools/Scripts/run-webkit-app <application-path>
iOS Simulator
Run the following command to launch iOS simulator with your local build of WebKit:
run-safari --debug --ios-simulator
In both cases, if you have built release builds instead, use --release instead of --debug.
To run other applications, for example MobileMiniBrowser, with your local build of WebKit, run the following command:
Tools/Scripts/run-webkit-app --debug --iphone-simulator <application-path>
Using Xcode
Open WebKit.xcworkspace, select intended scheme such as MobileMiniBrowser and an iOS simulator as target, click run.
Linux Ports
If you have a development build, you can use the run-minibrowser script, e.g.:
run-minibrowser --debug --wpe
Pass one of --gtk, --jsc-only, or --wpe to indicate the port to use.
Contribute
Congratulations! You’re up and running. Now you can begin coding in WebKit and contribute your fixes and new features to the project. For details on submitting your code to the project, read Contributing Code.
About
Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.
Topics
javascript
macos
ios
gtk
browser
web
webkit
Resources
Readme
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
9.2k
stars
Watchers
139
watching
Forks
1.7k
forks
Report repository
Releases
3,964
tags
Packages
0
No packages published
Uh oh!
There was an error while loading. Please reload this page.
Contributors
1,094
Uh oh!
There was an error while loading. Please reload this page.
+ 1,080 contributors
Languages
JavaScript
48.0%
HTML
24.9%
C++
13.8%
WebAssembly
6.0%
Objective-C++
2.4%
Python
1.6%
Other
3.3%
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.