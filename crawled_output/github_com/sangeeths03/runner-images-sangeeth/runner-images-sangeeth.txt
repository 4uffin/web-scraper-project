GitHub - sangeeths03/runner-images-sangeeth: GitHub Actions runner images
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
sangeeths03
/
runner-images-sangeeth
Public
forked from actions/runner-images
Notifications
You must be signed in to change notification settings
Fork
1
Star
0
GitHub Actions runner images
License
MIT license
0
stars
3.5k
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Pull requests
0
Actions
Projects
0
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Pull requests
Actions
Projects
Security
Insights
sangeeths03/runner-images-sangeeth
mainBranchesTagsGo to fileCodeOpen more actions menu  Folders and filesNameNameLast commit messageLast commit dateLatest commit History6,485 Commits.github.github  .vscode.vscode  FastlanedemoappFastlanedemoapp  docsdocs  helpershelpers  images.CIimages.CI  imagesimages  schemasschemas  script/buildscript/build  .gitattributes.gitattributes  .gitignore.gitignore  CMakeLists.txtCMakeLists.txt  CODE_OF_CONDUCT.mdCODE_OF_CONDUCT.md  CONTRIBUTING.mdCONTRIBUTING.md  Info.plist.inInfo.plist.in  LICENSELICENSE  README.mdREADME.md  SECURITY.mdSECURITY.md  main.cppmain.cpp  View all filesRepository files navigationREADMECode of conductContributingLicenseSecurityGitHub Actions Runner Images
Table of Contents
About
Available Images
Announcements
Image Definitions
Image Releases
Software and Image Support
How to Interact with the Repo
FAQs
About
This repository contains the source code used to create the VM images for GitHub-hosted runners used for Actions, as well as for Microsoft-hosted agents used for Azure Pipelines.
To build a VM machine from this repo's source, see the instructions.
Available Images
Image
YAML Label
Included Software
Rollout Status of Latest Image Release
Ubuntu 24.04
ubuntu-latest or ubuntu-24.04
ubuntu-24.04
Ubuntu 22.04
ubuntu-22.04
ubuntu-22.04
macOS 15
macos-15-large
macOS-15
macOS 15 Arm64
macos-15 or macos-15-xlarge
macOS-15-arm64
macOS 14
macos-latest-large or macos-14-large
macOS-14
macOS 14 Arm64
macos-latest, macos-14, macos-latest-xlarge or macos-14-xlarge
macOS-14-arm64
macOS 13
macos-13 or macos-13-large
macOS-13
macOS 13 Arm64
macos-13-xlarge
macOS-13-arm64
Windows Server 2025
windows-2025
windows-2025
Windows Server 2022
windows-latest or windows-2022
windows-2022
Windows Server 2019
windows-2019
windows-2019
Label scheme
In general the -latest label is used for the latest OS image version that is GA
Before moving the-latest label to a new OS version we will announce the change and give sufficient lead time for users to update their workflows
Announcements
See notable upcoming changes by viewing issues with the Announcement label.
Image Definitions
Beta
The purpose of a Beta is to collect feedback on an image before it is released to GA. The goal of a Beta is to identify and fix any potential issues that exist on that
image. Images are updated on a weekly cadence. Any workflows that run on a beta image do not fall under the customer SLA in place for Actions.
Customers choosing to use Beta images are encouraged to provide feedback in the runner-images repo by creating an issue. A Beta may take on different availability, i.e. public vs private.
GA
A GA (General Availability) image has been through a Beta period and is deemed ready for general use. Images are updated on a weekly cadence. In order to be moved to
GA the image must meet the following criteria:
Has been through a Beta period (public or private)
Most major software we install on the image has a compatible
version for the underlying OS and
All major bugs reported during the Beta period have been addressed.
This image type falls under the customer SLA for actions. GA images are eventually deprecated according to our guidelines as we only support the
latest 2 versions of an OS.
Latest Migration Process
GitHub Actions and Azure DevOps use the -latest YAML label (ex: ubuntu-latest, windows-latest, and macos-latest). These labels point towards the newest stable OS version available.
The -latest migration process is gradual and happens over 1-2 months in order to allow customers to adapt their workflows to the newest OS version. During this process, any workflow using the -latest label, may see changes in the OS version in their workflows or pipelines. To avoid unwanted migration, users can specify a specific OS version in the yaml file (ex: macos-14, windows-2022, ubuntu-22.04).
Image Releases
How to best follow along with changes
Find the latest releases for this repository here.
Subscribe to the releases coming out of this repository, instructions here.
Upcoming changes: A pre-release is created when the deployment of an image has started. As soon as the deployment is finished, the pre-release is converted to a release. If you have subscribed to releases, you will get notified of pre-releases as well.
You can also track upcoming changes using the awaiting-deployment label.
For high impact changes, we will post these in advance to the GitHub Changelog on our blog and on twitter.
Ex: breaking changes, GA or deprecation of images
Cadence
We typically deploy weekly updates to the software on the runner images.
Software and Image Support
Support Policy
Tools and versions will typically be removed 6 months after they are deprecated or have reached end-of-life
We support (at maximum) 2 GA images and 1 beta image at a time. We begin the deprecation process of the oldest image label once the newest OS image label has been released to GA.
The images generally contain the latest versions of packages installed except for Ubuntu LTS where we mostly rely on the Canonical-provided repositories.
Popular tools can have several versions installed side-by-side with the following strategy:
Tool name
Installation strategy
Docker images
not more than 3 latest LTS OS\tool versions. New images or new versions of current images are added using the standard tool request process
Java
all LTS versions
Node.js
3 latest LTS versions
Go
3 latest minor versions
Python
Ruby
5 most popular major.minor versions
PyPy
3 most popular major.minor versions
.NET Core
2 latest LTS versions and 1 latest version. For each feature version only latest patch is installed. Note for Ubuntu images see details.
GCC
GNU Fortran
Clang
GNU C++
3 latest major versions
Android NDK
1 latest non-LTS, 2 latest LTS versions
Xcode
- only one major version of Xcode will be supported per macOS version
- all minor versions of the supported major version will be available
- beta and RC versions will be provided "as-is" in the latest available macOS image only no matter of beta/GA status of the image
- when a new patch version is released, the previous patch version will be replaced
Package managers usage
We use third-party package managers to install software during the image generation process. The table below lists the package managers and the software installed.
NoteThird-party repositories are re-evaluated every year to identify if they are still useful and secure.
Operating system
Package manager
Third-party repos and packages
Ubuntu
APT
docker
Eclipse-Temurin (Adoptium)
Erlang
Firefox
git-lfs
git
Google Cloud CLI
Heroku
HHvm
MongoDB
Mono
MS Edge
PostgreSQL
R
pipx
ansible-core yamllint
Windows
Chocolatey
No third-party repos installed
macOS
Homebrew
aws-cli v2
azure/bicep
mongodb/brew
pipx
yamllint
Image Deprecation Policy
Images begin the deprecation process of the oldest image label once a new GA OS version has been released.
Deprecation process begins with an announcement that sets a date for deprecation
As it gets closer to the date, GitHub begins doing scheduled brownouts of the image
During this time there will be an Announcement pinned in the repo to remind users of the deprecation.
Finally GitHub will deprecate the image and it will no longer be available
Preinstallation Policy
In general, these are the guidelines we follow when deciding what to pre-install on our images:
Popularity: widely-used tools and ecosystems will be given priority.
Latest Technology: recent versions of tools will be given priority.
Deprecation: end-of-life tools and versions will not be added.
Licensing: MIT, Apache, or GNU licenses are allowed.
Time & Space on the Image: we will evaluate how much time is saved and how much space is used by having the tool pre-installed.
Support: If a tool requires the support of more than one version, we will consider the cost of this maintenance.
Default Version Update Policy
In general, once a new version is installed on the image, we announce the default version update 2 weeks prior to deploying it.
For potentially dangerous updates, we may extend the timeline up to 1 month between the announcement and deployment.
How to Interact with the Repo
Issues: To file a bug report, or request tools to be added/updated, please open an issue using the appropriate template
Discussions: If you want to share your thoughts about image configuration, installed software, or bring a new idea, please create a new topic in a discussion for a corresponding category. Before making a new discussion please make sure no similar topics were created earlier.
For general questions about using the runner images or writing your Actions workflow, please open requests in the GitHub Actions Community Forum.
FAQs
What images are available for GitHub Actions and Azure DevOps?
The availability of images for GitHub Actions and Azure DevOps is the same. However, deprecation policies may differ. See documentation for more details:
GitHub Actions
Azure DevOps
What image version is used in my build?
Usually, image deployment takes 2-3 days, and documentation in the main branch is only updated when deployment is finished. To find out which image version and what software versions are used in a specific build, see Set up job (GitHub Actions) or Initialize job (Azure DevOps) step log.
Looking for other Linux distributions?
We do not plan to offer other Linux distributions. We recommend using Docker if you'd like to build using other distributions with the hosted runner images. Alternatively, you can leverage self-hosted runners and fully customize your VM image to your needs.
How do I contribute to the macOS source?
macOS source lives in this repository and is available for everyone. However, macOS image-generation CI doesn't support external contributions yet so we are not able to accept pull-requests for now.
We are in the process of preparing macOS CI to accept contributions. Until then, we appreciate your patience and ask you to continue to make tool requests by filing issues.
How does GitHub determine what tools are installed on the images?
For some tools, we always install the latest at the time of the deployment; for others, we pin the tool to specific version(s). For more details please see the Preinstallation Policy
How do I request that a new tool be pre-installed on the image?
Please create an issue and get an approval from us to add this tool to the image before creating the pull request.
What branch should I use to build custom image?
We strongly encourage customers to build their own images using the main branch.
This repository contains multiple branches and releases that serve as document milestones to reflect what software is installed in the images at certain point of time. Current builds are not idempotent and if one tries to build a runner image using the specific tag it is not guaranteed that the build will succeed.
About
GitHub Actions runner images
Resources
Readme
License
MIT license
Code of conduct
Code of conduct
Contributing
Contributing
Security policy
Security policy
Uh oh!
There was an error while loading. Please reload this page.
Activity
Stars
0
stars
Watchers
0
watching
Forks
1
fork
Report repository
Releases
No releases published
Packages
0
No packages published
Languages
PowerShell
66.7%
Shell
19.1%
HCL
12.9%
Swift
0.5%
Ruby
0.4%
AppleScript
0.2%
Other
0.2%
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.