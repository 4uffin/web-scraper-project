GitHub - eslint/eslint: Find and fix problems in your JavaScript code.
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
eslint
/
eslint
Public
Uh oh!
There was an error while loading. Please reload this page.
Notifications
You must be signed in to change notification settings
Fork
4.8k
Star
26.4k
Find and fix problems in your JavaScript code.
eslint.org
License
MIT license
26.4k
stars
4.8k
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
99
Pull requests
36
Discussions
Actions
Projects
1
Models
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Issues
Pull requests
Discussions
Actions
Projects
Models
Security
Insights
eslint/eslint
mainBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit History10,379 Commits.github.github  .trunk.trunk  binbin  confconf  docsdocs  liblib  messagesmessages  packagespackages  templatestemplates  teststests  toolstools  .c8rc.c8rc  .codeclimate.yml.codeclimate.yml  .editorconfig.editorconfig  .eslintignore.eslintignore  .git-blame-ignore-revs.git-blame-ignore-revs  .gitattributes.gitattributes  .gitignore.gitignore  .markdownlint.yml.markdownlint.yml  .npmrc.npmrc  .pre-commit-hooks.yaml.pre-commit-hooks.yaml  .prettierignore.prettierignore  .prettierrc.json.prettierrc.json  CHANGELOG.mdCHANGELOG.md  CONTRIBUTING.mdCONTRIBUTING.md  LICENSELICENSE  Makefile.jsMakefile.js  README.mdREADME.md  SUPPORT.mdSUPPORT.md  cypress.config.jscypress.config.js  eslint.config.jseslint.config.js  knip.jsoncknip.jsonc  package.jsonpackage.json  webpack.config.jswebpack.config.js  View all filesRepository files navigationREADMECode of conductContributingMIT licenseSecurity
ESLint
Website |
Configure ESLint |
Rules |
Contribute to ESLint |
Report Bugs |
Code of Conduct |
Twitter |
Discord |
Mastodon |
Bluesky
ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:
ESLint uses Espree for JavaScript parsing.
ESLint uses an AST to evaluate patterns in code.
ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.
Table of Contents
Installation and Usage
Configuration
Version Support
Code of Conduct
Filing Issues
Frequently Asked Questions
Releases
Security Policy
Semantic Versioning Policy
License
Team
Sponsors
Technology Sponsors
Installation and Usage
Prerequisites: Node.js (^18.18.0, ^20.9.0, or >=21.1.0) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)
You can install and configure ESLint using this command:
npm init @eslint/config@latest
After that, you can run ESLint on any file or directory like this:
npx eslint yourfile.js
pnpm Installation
To use ESLint with pnpm, we recommend setting up a .npmrc file with at least the following settings:
auto-install-peers=true
node-linker=hoisted
This ensures that pnpm installs dependencies in a way that is more compatible with npm and is less likely to produce errors.
Configuration
You can configure rules in your eslint.config.js files as in this example:
import { defineConfig } from "eslint/config";
export default defineConfig([
{
files: ["**/*.js", "**/*.cjs", "**/*.mjs"],
rules: {
"prefer-const": "warn",
"no-constant-binary-expression": "error",
},
},
]);
The names "prefer-const" and "no-constant-binary-expression" are the names of rules in ESLint. The first value is the error level of the rule and can be one of these values:
"off" or 0 - turn the rule off
"warn" or 1 - turn the rule on as a warning (doesn't affect exit code)
"error" or 2 - turn the rule on as an error (exit code will be 1)
The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the configuration docs).
Version Support
The ESLint team provides ongoing support for the current version and six months of limited support for the previous version. Limited support includes critical bug fixes, security issues, and compatibility issues only.
ESLint offers commercial support for both current and previous versions through our partners, Tidelift and HeroDevs.
See Version Support for more details.
Code of Conduct
ESLint adheres to the OpenJS Foundation Code of Conduct.
Filing Issues
Before filing an issue, please be sure to read the guidelines for what you're reporting:
Bug Report
Propose a New Rule
Proposing a Rule Change
Request a Change
Frequently Asked Questions
Does ESLint support JSX?
Yes, ESLint natively supports parsing JSX syntax (this must be enabled in configuration). Please note that supporting JSX syntax is not the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using eslint-plugin-react if you are using React and want React semantics.
Does Prettier replace ESLint?
No, ESLint and Prettier have different jobs: ESLint is a linter (looking for problematic patterns) and Prettier is a code formatter. Using both tools is common, refer to Prettier's documentation to learn how to configure them to work well with each other.
What ECMAScript versions does ESLint support?
ESLint has full support for ECMAScript 3, 5, and every year from 2015 up until the most recent stage 4 specification (the default). You can set your desired ECMAScript syntax and other settings (like global variables) through configuration.
What about experimental features?
ESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.
In other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use @babel/eslint-parser and @babel/eslint-plugin to use any option available in Babel.
Once a language feature has been adopted into the ECMAScript standard (stage 4 according to the TC39 process), we will accept issues and pull requests related to the new feature, subject to our contributing guidelines. Until then, please use the appropriate parser and plugin(s) for your experimental feature.
Which Node.js versions does ESLint support?
ESLint updates the supported Node.js versions with each major release of ESLint. At that time, ESLint's supported Node.js versions are updated to be:
The most recent maintenance release of Node.js
The lowest minor version of the Node.js LTS release that includes the features the ESLint team wants to use.
The Node.js Current release
ESLint is also expected to work with Node.js versions released after the Node.js Current release.
Refer to the Quick Start Guide for the officially supported Node.js versions for a given ESLint release.
Where to ask for help?
Open a discussion or stop by our Discord server.
Why doesn't ESLint lock dependency versions?
Lock files like package-lock.json are helpful for deployed applications. They ensure that dependencies are consistent between environments and across deployments.
Packages like eslint that get published to the npm registry do not include lock files. npm install eslint as a user will respect version constraints in ESLint's package.json. ESLint and its dependencies will be included in the user's lock file if one exists, but ESLint's own lock file would not be used.
We intentionally don't lock dependency versions so that we have the latest compatible dependency versions in development and CI that our users get when installing ESLint in a project.
The Twilio blog has a deeper dive to learn more.
Releases
We have scheduled releases every two weeks on Friday or Saturday. You can follow a release issue for updates about the scheduling of any particular release.
Security Policy
ESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full security policy.
Semantic Versioning Policy
ESLint follows semantic versioning. However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:
Patch release (intended to not break your lint build)
A bug fix in a rule that results in ESLint reporting fewer linting errors.
A bug fix to the CLI or core (including formatters).
Improvements to documentation.
Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.
Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).
Minor release (might break your lint build)
A bug fix in a rule that results in ESLint reporting more linting errors.
A new rule is created.
A new option to an existing rule that does not result in ESLint reporting more linting errors by default.
A new addition to an existing rule to support a newly-added language feature (within the last 12 months) that will result in ESLint reporting more linting errors by default.
An existing rule is deprecated.
A new CLI capability is created.
New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).
A new formatter is created.
eslint:recommended is updated and will result in strictly fewer linting errors (e.g., rule removals).
Major release (likely to break your lint build)
eslint:recommended is updated and may result in new linting errors (e.g., rule additions, most rule option updates).
A new option to an existing rule that results in ESLint reporting more linting errors by default.
An existing formatter is removed.
Part of the public API is removed or changed in an incompatible way. The public API includes:
Rule schemas
Configuration schema
Command-line options
Node.js API
Rule, formatter, parser, plugin APIs
According to our policy, any minor update may report more linting errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (~) in package.json e.g. "eslint": "~3.1.0" to guarantee the results of your builds.
License
MIT License
Copyright OpenJS Foundation and other contributors, <www.openjsf.org>
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
Team
These folks keep the project moving and are resources for help.
Technical Steering Committee (TSC)
The people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.
Nicholas C. Zakas
Francesco Trotta
Milos Djermanovic
Reviewers
The people who review and implement new features.
唯然
Nitin Kumar
Committers
The people who review and fix bugs and help triage issues.
fnx
Josh Goldberg ✨
Tanuj Kanti
루밀LuMir
Website Team
Team members who focus specifically on eslint.org
Amaresh
S M
Harish
Percy Ma
Sponsors
The following companies, organizations, and individuals support ESLint's ongoing maintenance and development. Become a Sponsor
to get your logo on our READMEs and website.
Platinum Sponsors
Gold Sponsors
Silver Sponsors
Bronze Sponsors
Technology Sponsors
Technology sponsors allow us to use their products and services for free as part of a contribution to the open source ecosystem and our work.
About
Find and fix problems in your JavaScript code.
eslint.org
Topics
javascript
eslint
static-code-analysis
linter
ecmascript
Resources
Readme
License
MIT license
Code of conduct
Code of conduct
Contributing
Contributing
Security policy
Security policy
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
26.4k
stars
Watchers
318
watching
Forks
4.8k
forks
Report repository
Releases
360
v9.36.0
Latest
Sep 19, 2025
+ 359 releases
Sponsor this project
Uh oh!
There was an error while loading. Please reload this page.
opencollective.com/eslint
tidelift.com/funding/github/npm/eslint
Learn more about GitHub Sponsors
Packages
0
No packages published
Used by 27.3m
+ 27,282,849
Contributors
1,063
+ 1,049 contributors
Languages
JavaScript
99.5%
Other
0.5%
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.