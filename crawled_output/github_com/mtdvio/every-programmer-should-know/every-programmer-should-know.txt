GitHub - mtdvio/every-programmer-should-know: A collection of (mostly) technical things every software developer should know about
Skip to content
Navigation Menu
Toggle navigation
Sign in
Appearance settings
Platform
GitHub Copilot
Write better code with AI
GitHub Spark
New
Build and deploy intelligent apps
GitHub Models
New
Manage and compare prompts
GitHub Advanced Security
Find and fix vulnerabilities
Actions
Automate any workflow
Codespaces
Instant dev environments
Issues
Plan and track work
Code Review
Manage code changes
Discussions
Collaborate outside of code
Code Search
Find more, search less
Explore
Why GitHub
Documentation
GitHub Skills
Blog
Integrations
GitHub Marketplace
MCP Registry
View all features
Solutions
By company size
Enterprises
Small and medium teams
Startups
Nonprofits
By use case
App Modernization
DevSecOps
DevOps
CI/CD
View all use cases
By industry
Healthcare
Financial services
Manufacturing
Government
View all industries
View all solutions
Resources
Topics
AI
DevOps
Security
Software Development
View all
Explore
Learning Pathways
Events & Webinars
Ebooks & Whitepapers
Customer Stories
Partners
Executive Insights
Open Source
GitHub Sponsors
Fund open source developers
The ReadME Project
GitHub community articles
Repositories
Topics
Trending
Collections
Enterprise
Enterprise platform
AI-powered developer platform
Available add-ons
GitHub Advanced Security
Enterprise-grade security features
Copilot for business
Enterprise-grade AI features
Premium Support
Enterprise-grade 24/7 support
Pricing
Search or jump to...
Search code, repositories, users, issues, pull requests...
Search
Clear
Search syntax tips
Provide feedback
We read every piece of feedback, and take your input very seriously.
Include my email address so I can be contacted
Cancel
Submit feedback
Saved searches
Use saved searches to filter your results more quickly
Name
Query
To see all available qualifiers, see our documentation.
Cancel
Create saved search
Sign in
Sign up
Appearance settings
Resetting focus
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
mtdvio
/
every-programmer-should-know
Public
Notifications
You must be signed in to change notification settings
Fork
8.3k
Star
91.7k
A collection of (mostly) technical things every software developer should know about
License
CC-BY-4.0 license
91.7k
stars
8.3k
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
31
Pull requests
21
Actions
Projects
0
Security
Uh oh!
There was an error while loading. Please reload this page.
Insights
Additional navigation options
Code
Issues
Pull requests
Actions
Projects
Security
Insights
mtdvio/every-programmer-should-know
masterBranchesTagsGo to fileCodeOpen more actions menuFolders and filesNameNameLast commit messageLast commit dateLatest commit History300 CommitsCONTRIBUTING.mdCONTRIBUTING.md  LICENSELICENSE  README.mdREADME.md  View all filesRepository files navigationREADMEContributingCC-BY-4.0 license
Special thanks to:
Tuple, the premier screen sharing app for developers
Available for MacOS & Windows
Want to become a Senior Engineer sooner?
Join a waitlist for repo author's course
Every Programmer Should Know 🤔
A collection of (mostly) technical things every software developer should know.
☝️ These are resources I can recommend to every programmer regardless of their skill level or tech stack
Highly opinionated 💣. Not backed by science.
Comes in no particular order ♻️
U like it? ⭐ it and share with a friendly developer!
U don't like it? Watch the doggo 🐶
P.S. You don't need to know all of that by heart to be a programmer.
But knowing the stuff will help you become better! 💪
P.P.S. Contributions are welcome!
Introduction
🎥 Map of Computer Science
🎥 40 Key Computer Science Concepts Explained In Layman’s Terms
📄 Computer Science Roadmap
Falsehoods
Awesome Falsehoods
💊 Curated list of falsehoods programmers believe in.
Check for things you do not know about Strings, Addresses, Names, Numbers, Emails, Timezones and Dates and more.
Algorithms
Big O Cheatsheet
📖 Computer Science Distilled
📖 Grokking Algorithms
📖 Introduction to Algorithms
Algorithms Visualization
Algorithms for Competitive Programming
Data Structures
🎥 UC Berkeley, Data Structures Course
Foundations of Data Structures - EDX
Data Structures - Coursera
Mathematics for Computer Science - Eric Lehman
Numbers
📖 How to Count
📄 Floating Point Guide
📄 What Every Computer Scientist Should Know About Floating-Point Arithmetic
📄 Basic Number Theory Every Programmer Should Know...
Strings
📄 Unicode and Character Sets
Homoglyphs
Unicode Common Locale Data Repository
🎥 ASCII
🎥 UTF-8
Latency
Interactive Latency Infographics
📄 Latency Numbers Every Programmer Should Know
Time
📄 Some notes about time
🎥 The Problem with Timezones
Memory
📄 What every Programmer should know about memory
Distributed Systems
📖 Understanding Distributed Systems
📖 Designing Data-Intensive Applications
📜 Designs, Lessons and Advice from Building Large Distributed Systems
📜 Time, Clocks and the Ordering of Events in a Distributed System
📄 There is No Now
📄 Jepsen: how different databases behave under partition
📜 Fallacies of Distributed Computing Explained
RegExp
RegexHQ
Learn regex the easy way
Security
📖 Security Programming
📄 Rolling Your Own Crypto
📄 Cryptographic Right Answers
📄 An Open Letter to Developers Everywhere (About Cryptography)
📖 Foundations of Security: What Every Programmer Needs to Know
📄 OWASP Top 10 - The "gold standard" for web application vulnerabilities.
📄 Portswigger Academy - Practical Labs for learning about web application security.
📄 Web Application Exploits and Defenses
📄 Hashing, Encryption and Encoding
UX/Usability
📖 Don't Make Me Think: A Common Sense Approach to Web Usability
🎥 Inventing on Principle
SEO
📄 What Every Programmer Should Know About SEO
Architecture
📜 A Field Guide to Boxology
📜 Out of the Tar Pit
📜 No Silver Bullet — Essence and Accidents of Software Engineering
🎥 Growing a Language
🎥 CQRS and Event Sourcing
📖 Practical Object Oriented Design in Ruby
🎥 Evolutionary Software Architectures
System Design: A Primer
📄 How JavaScript works: part-1, 2, 3, 4
🎥 Entity-Component-System Architecture with Unity by example
Code Design
📄 Programming Principles Wiki
Engineering Philosophy
🎥 Category Theory in Life
🎥 Simple Made Easy
📄 Speed In Software Development
🎥 #NoEstimates
🎥 The Myth of the Genius Programmer
🎥 Making Badass Developers
📄 The Ten Rules of a Zen Programmer
📄 The mythical 10x programmer
📄 The Debugging Mindset
🎥 The Future of Programming
📄 The Good Software Development Manifesto
🎥 All the Little Things
📄 Teach Yourself Programming in Ten Years
Practices
📖 Working Effectively with Legacy Code
📖 The Art of Readable Code: Simple and Practical Techniques for Writing Better Code
📖 Code Complete
📖 Clean Code: A Handbook of Agile Software Craftsmanship
📖 Test Driven Development: By Example
✅ Going To Production Checklist
📖 Release It!
📖 Professor Frisby's Mostly Adequate Guide to Functional Programming
📖 SICP: Structure and Interpretation of Computer Programs
📄 Thirteen Ways of Looking at a Turtle
📜 Programming Paradigms for Dummies: What Every Programmer Should Know
Learn X in Y Minutes
Learn the basics of a language in a highly condensed way.
Hyperpolyglot
Compare commonly used features of more or less similar languages side-by-side. Helps you to jump Python<->Ruby, Ocaml<->Haskell, etc.
📄 Pomodoro for Programmers
📖 Site Reliability Engineering
Career
💰 Levels FYI
Salary stats for various tech companies. Better than Glassdoor.
📄 10 Things Every Programmer Should Know For Their First Job
📄 How Much Do Software Engineers Really Make in Each City?
📄 Software Engineers Tenure in San Francisco
Software Engineering 101
📖 The Passionate Programmer
📖 Soft Skills: The software developer's life manual
📖 The Complete Software Developer's Career Guide
📖 Programming Beyond Practices: Be More Than Just a Code Monkey
A list of European Investors
📄 Ten Rules for Negotiating a Job Offer
📄 How To Interview As a Developer Candidate
📄 How To Get a Tech Job Abroad Faster
📖 How To Be A STAR Engineer
📄 TL;DR; Stock Options
📄 Equity 101 for Startup Employees
📖 Cracking the Coding Interview: 189 Programming Questions and Solutions
🔥 Everything you need to know to get the job
📖 Tech Interview Handbook
📄 Teach Yourself Programming in Ten Years
📄 What you should know as a founder of a software company
🎥 Code Interview Prep & Programming Questions | Pramp
📖 97 things every programmer should know
🎥 A Philosophy of Software Design | John Ousterhout | Talks at Google
Fine-tune Your Resume
🔨 CV Compiler
Open Source
🌐 Learn how to use Git and GitHub
Remote Work
🌐 Remotive.io: Startups hiring remotely
🌐 Remote Work List for Developers
⚡ NomadList
📖 The Ultimate Guide to Remote Work
🏠 Awesome Remote Job
Problem Solving
📖 The Art and Craft of Problem Solving
📖 How to Solve It: A New Aspect of Mathematical Method
Soft Skills
📖 Difficult Conversations
📖 Crucial Conversations
📖 How to Win Friends and Influence People
Mental Health
Awesome Mental Health
A curated list of awesome articles, websites and resources about mental health in the software industry.
Papers on Programming
❤️ Papers We Love
📰 The Morning Paper
📜 What Every Programmer Should Know About Memory
📜 Go To Statement Considered Harmful
📰 Arxiv
📰 Sci-hub
Free Books on Programming
📚 Free Programming Books
Services ⚡
🤖 Abstract API's
Free For Dev
Public APIs
The Noun Project
Without Coding
Simpleicons
Learn Anything
repl.it
Licenses
Choose An Open Source License
Well-explained Software licenses in TLDR version
How open source licenses work and how to add them to your projects
Where To Look For Further Info
freeCodeCamp Guide
GeeksForGeeks
Dev.To
Stack Overflow
Dzone
Coding Practice Sites ⚡
🔗 CodeForces
🔗 CodeChef
🔗 Coderbyte
🔗 CodinGame
🔗 Cs Academy
🔗 HackerRank
🔗 Spoj
🔗 HackerEarth
🔗 TopCoder
🔗 Codewars
🔗 Exercism
🔗 CodeSignal
🔗 Project Euler
🔗 LeetCode
🔗 Firecode.io
🔗 InterviewBit
🔗 uCoder
🔗 LintCode
🔗 CodeCombat
🔗 InterviewCake
🔗 At Coder
🔗 Codility
🔗 ICPC Problem Archive
🔗 Codemia
🔗 LabEx
🔗 Codebattle
Platform Engineering
A modern discipline that evolved from DevOps and SRE principles, focused on improving developer experience and productivity by building and managing self-service tools and workflows, often through an Internal Developer Platform (IDP). The goal is to reduce cognitive load on developers and streamline the path to production.
What is Platform Engineering?
Microsoft Learn: What is platform engineering?
A comprehensive overview of the practice, its goals, and core capabilities.
Atlassian: What is Platform Engineering?
A great explanation of the roles and responsibilities of a platform team.
Internal Developer Platform (IDP)
internaldeveloperplatform.org: What is an IDP?
A foundational resource explaining the concept of an IDP as the core product of a platform team.
Atlassian: Internal Developer Platform Guide
A deep dive into the benefits and best practices for building an IDP.
Golden Paths (Paved Roads)
Spotify Engineering: How we use Golden Paths to solve fragmentation
The original concept from Spotify, explaining how they use "opinionated and supported paths" to guide developers.
Red Hat: What is a Golden Path for software development?
A clear article on how Golden Paths provide templates and standardized workflows to increase efficiency.
About
A collection of (mostly) technical things every software developer should know about
Topics
computer-science
collection
educational
novice
cc-by
Resources
Readme
License
CC-BY-4.0 license
Contributing
Contributing
Uh oh!
There was an error while loading. Please reload this page.
Activity
Custom properties
Stars
91.7k
stars
Watchers
2k
watching
Forks
8.3k
forks
Report repository
Uh oh!
There was an error while loading. Please reload this page.
Contributors
87
+ 73 contributors
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.