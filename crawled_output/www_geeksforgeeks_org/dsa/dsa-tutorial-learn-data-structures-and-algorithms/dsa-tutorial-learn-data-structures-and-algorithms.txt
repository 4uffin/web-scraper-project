DSA Tutorial - Learn Data Structures and Algorithms - GeeksforGeeks
Skip to content
TutorialsPythonJavaDSAML & Data ScienceInterview CornerProgramming LanguagesWeb DevelopmentCS SubjectsDevOpsSoftware and ToolsSchool LearningPractice Coding ProblemsCoursesDSA / PlacementsML & Data ScienceDevelopmentCloud / DevOpsProgramming LanguagesAll CoursesTracksLanguagesPythonCC++JavaAdvanced JavaSQLJavaScriptInterview PreparationGfG 160GfG 360System DesignCore SubjectsInterview QuestionsInterview PuzzlesAptitude and ReasoningData SciencePythonData AnalyticsComplete Data ScienceDev SkillsFull-Stack Web DevDevOpsSoftware TestingCyberSecurityToolsComputer FundamentalsAI ToolsMS Excel & Google SheetsMS Word & Google DocsMathsMaths For Computer ScienceEngineering Mathematics
DSA TutorialArrayStringsLinked ListStackQueueTreeGraphSearchingSortingRecursionDynamic ProgrammingBinary TreeBinary Search TreeHeapHashing
Sign In
â–²
Open In App
DSA Tutorial - Learn Data Structures and Algorithms
Last Updated :
06 Sep, 2025
Comments
Improve
Suggest changes
Like Article
Like
Report
Data structures manage how data is stored and accessed, while Algorithms focus on processing this data.
Examples of data structures are Array, Linked List, Tree and Heap, and examples of algorithms are Binary Search, Quick Sort and Merge Sort. Why to Learn DSA?Foundation for almost every software like GPS, Search Engines, AI ChatBots, Gaming Apps, Databases, Web Applications, etcTop Companies like Google, Microsoft, Amazon, Apple, Meta and many other heavily focus on DSA in interviews. Learning DSA boosts your problem-solving abilities and make you a stronger programmer.Try our free courses GfG 160 and DSA Skillup with daily topic coverage, notes, quizzes and most asked coding problems.How to learn DSA?Learn at-least one programming language (C++, Java, Python or JavaScript) and build your basic logic.Learn about Time and Space complexitiesLearn Data Structures (Arrays, Linked List, etc) and Algorithms (Searching, Sorting, etc).Once you learn main topics, it is important to solve coding problems against some predefined test cases,Solve problems daily using GfG Problem of the Day1. Logic BuildingOnce you have learned basics of a programming language, it is recommended that you learn basic logic buildingLogic Building Guide Quiz on Logic Building2. Learn about ComplexitiesTo analyze algorithms, we mainly measure order of growth of time or space taken in terms of input size.
We do this in the worst case scenario in most of the cases. Please refer the below links for a clear understanding of these concepts.Complexity Analysis Guide
Quiz on Complexity Analysis3. ArrayArray is a linear data structure where elements are allocated contiguous memory, allowing for constant-time access. Array GuideQuiz on Arrays4. Searching AlgorithmsSearching algorithms are used to locate specific data within a large set of data. It helps find a target value within the data. There are various types of searching algorithms, each with its own approach and efficiency.Searching Guide Quiz on Searching5. Sorting AlgorithmSorting algorithms are used to arrange the elements of a list in a specific order, such as numerical or alphabetical. It organizes the items in a systematic way, making it easier to search for and access specific elements.Sorting Guide Quiz on Sorting 6. HashingHashing is a technique that generates a fixed-size output (hash value) from an input of variable size using mathematical formulas called hash functions. Hashing is commonly used in data structures for efficient searching, insertion and deletion.Hashing Guide Quiz on Hashing7. Two Pointer TechniqueIn Two Pointer Technique, we typically use two index variables from two corners of an array. We use the two pointer technique for searching a required point or value in an array.Two Pointer TechniqueQuiz on Two Pointer Technique 8. Window Sliding TechniqueIn Window Sliding Technique, we use the result of previous subarray to quickly compute the result of current.Window Sliding TechniqueQuiz on Sliding Window 9. Prefix Sum TechniqueIn Prefix Sum Technique, we compute prefix sums of an array to quickly find results for a subarray.Prefix Sum Technique Quiz on Prefix Sum10. StringA sequence of characters, typically immutable and have limited set of elements (lower case or all English alphabets).Strings GuideQuiz on Strings11. RecursionA programming technique where a function calls itself within its own definition. It is usually used to solve problems that can be broken down into smaller instances of the same problem. Recursion GuideQuiz on Recursion12. Matrix/GridA two-dimensional array of elements, arranged in rows and columns. It is represented as a rectangular grid, with each element at the intersection of a row and column.Matrix GuideQuiz on Matrix/Grid.13. Linked ListA linear data structure that stores data in nodes, which are connected by pointers. Unlike arrays, nodes of linked lists are not stored in contiguous memory locations and can only be accessed sequentially, starting from the head of list.Linked List GuideQuiz on Linked List14. StackA linear data structure that follows the Last In, First Out (LIFO) principle. Stacks play an important role in managing function calls, memory, and are widely used in algorithms like stock span problem, next greater element and largest area in a histogram.Stack GuideQuiz on Stack15. QueueQueue is a linear data structure that follows the First In, First Out (FIFO) principle. Queues play an important role in managing tasks or data in order, scheduling and message handling systems.Queue GuideQuiz on Queue16. DequeA Deque or double-ended queue is a data structure that allows elements to be added or removed from both ends efficiently.
Deque Guide Quiz on Deque17. TreeA non-linear, hierarchical data structure consisting of nodes connected by edges, with a top node called the root and nodes having child nodes. It is widely used in file systems, databases, decision-making algorithms, etc.Tree GuideQuiz on Tree18. HeapA complete binary tree that satisfies the heap property. Heaps are usually used to implement priority queues, where the smallest or largest element is always at the root of the tree.Heap GuideQuiz on Heap19. GraphA non-linear data structure consisting of a finite set of vertices(or nodes) and a set of edges(or links)that connect a pair of nodes. Graphs are widely used to represent relationships between entities.Graph Guide Quiz on Graph20. Greedy AlgorithmGreedy Algorithm builds up the solution one piece at a time and chooses the next piece which gives the most obvious and immediate benefit i.e., which is the most optimal choice at that moment. So the problems where choosing locally optimal also leads to the global solutions are best fit for Greedy.Greedy Algorithms GuideQuiz on Greedy21. Dynamic ProgrammingDynamic Programming is a method used to solve complex problems by breaking them down into simpler subproblems. By solving each subproblem only once and storing the results, it avoids redundant computations, leading to more efficient solutions for a wide range of problems. Dynamic Programming GuideQuiz on DP22. Advanced Data Structure and AlgorithmsAdvanced Data Structures like Trie, Segment Tree, Red-Black Tree and Binary Indexed Tree offer significant performance improvements for specific problem domains. They provide efficient solutions for tasks like fast prefix searches, range queries, dynamic updates, and maintaining balanced data structures, which are crucial for handling large datasets and real-time processing.TrieSegment TreeRed-Black TreeBinary Indexed TreePractice Advanced Data Structures 23. Other AlgorithmsBitwise Algorithms: Operate on individual bits of numbers.Bitwise Algorithms Guide Quiz on Bit MagicBacktracking Algorithm : Follow Recursion
with the option to revert and traces back if the solution from current point is not feasible.Backtracking Guide Quiz on BacktrackingDivide and conquer:
A strategy to solve problems by dividing them into smaller subproblems, solving those subproblems, and combining the solutions to obtain the final solution.Divide and Conquer GuideQuiz on Divide and ConquerBranch and Bound : Used in combinatorial optimization problems to systematically search for the best solution. It works by dividing the problem into smaller subproblems, or branches, and then eliminating certain branches based on bounds on the optimal solution. This process continues until the best solution is found or all branches have been explored.Branch and Bound AlgorithmGeometric algorithms are a set of algorithms that solve problems related to shapes, points, lines and polygons.Geometric AlgorithmsPractice Geometric AlgorithmsRandomized algorithms are algorithms that use randomness to solve problems. They make use of random input to achieve their goals, often leading to simpler and more efficient solutions. These algorithms may not product same result but are particularly useful in situations when a probabilistic approach is acceptable.Randomized Algorithms
Roadmap to learn DSA
Visit Course
Comment
More info
R
RishabhPrabhu
Follow
Improve
Article Tags :
DSA
Tutorials
DSA Tutorials
Explore
DSA FundamentalsLogic Building Problems
2 min read
Analysis of Algorithms
1 min read
Data StructuresArray Data Structure
3 min read
String in Data Structure
2 min read
Hashing in Data Structure
2 min read
Linked List Data Structure
2 min read
Stack Data Structure
2 min read
Queue Data Structure
2 min read
Tree Data Structure
2 min read
Graph Data Structure
3 min read
Trie Data Structure
15+ min read
AlgorithmsSearching Algorithms
2 min read
Sorting Algorithms
3 min read
Introduction to Recursion
14 min read
Greedy Algorithms
3 min read
Graph
Algorithms
3 min read
Dynamic Programming or DP
3 min read
Bitwise Algorithms
4 min read
AdvancedSegment Tree
2 min read
Binary Indexed Tree or Fenwick Tree
15 min read
Square Root (Sqrt) Decomposition Algorithm
15+ min read
Binary Lifting
15+ min read
Geometry
2 min read
Interview PreparationInterview Corner
3 min read
GfG160
3 min read
Practice ProblemGeeksforGeeks Practice - Leading Online Coding Platform
6 min read
Problem of The Day - Develop the Habit of Coding
5 min read
Like
Corporate & Communications Address:
A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305)
Registered Address:
K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305
CompanyAbout UsLegalPrivacy PolicyContact UsAdvertise with usGFG Corporate SolutionCampus Training ProgramExplorePOTDJob-A-ThonCommunityBlogsNation Skill UpTutorialsProgramming LanguagesDSAWeb TechnologyAI, ML & Data ScienceDevOpsCS Core SubjectsInterview PreparationGATESoftware and ToolsCoursesIBM CertificationDSA and PlacementsWeb DevelopmentProgramming LanguagesDevOps & CloudGATETrending TechnologiesVideosDSAPythonJavaC++Web DevelopmentData ScienceCS SubjectsPreparation CornerAptitudePuzzlesGfG 160DSA 360System Design
@GeeksforGeeks, Sanchhaya Education Private Limited, All rights reserved
Improvement
Suggest changes
Suggest Changes
Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal.
Create Improvement
Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all.
Suggest Changes
min 4 words, max Words Limit:1000
Thank You!
Your suggestions are valuable to us.
What kind of Experience do you want to share?
Interview Experiences
Admission Experiences
Career Journeys
Work Experiences
Campus Experiences
Competitive Exam Experiences