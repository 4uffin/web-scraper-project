Steps to clear out the history of a git/github repository · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
stephenhardy/git-clearHistory
Created
April 26, 2013 22:14
Show Gist options
Download ZIP
Star
1,016
(1,016)
You must be signed in to star a gist
Fork
229
(229)
You must be signed in to fork a gist
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/stephenhardy/5470814.js&quot;&gt;&lt;/script&gt;
Save stephenhardy/5470814 to your computer and use it in GitHub Desktop.
Code
Revisions
1
Stars
1,014
Forks
229
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/stephenhardy/5470814.js&quot;&gt;&lt;/script&gt;
Save stephenhardy/5470814 to your computer and use it in GitHub Desktop.
Download ZIP
Steps to clear out the history of a git/github repository
Raw
git-clearHistory
-- Remove the history from
rm -rf .git
-- recreate the repos from the current content only
git init
git add .
git commit -m "Initial commit"
-- push to the github remote repos ensuring you overwrite history
git remote add origin git@github.com:<YOUR ACCOUNT>/<YOUR REPOS>.git
git push -u --force origin master
Load earlier comments...
Copy link
leoyala
commented
Mar 19, 2021
This might be problematic with repositories with git submodules.
I believe the recipe in this SO answer is a safer way: https://stackoverflow.com/a/13102849
git checkout --orphan newBranch
git add -A
# Add all files and commit them
git commit
git branch -D master
# Deletes the master branch
git branch -m master
# Rename the current branch to master
git push -f origin master
# Force push master branch to github
git gc --aggressive --prune=all
# remove the old files
This worked perfectly for me, thanks @adeluccar
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
pushkatel
commented
Mar 31, 2021
Any easy way to clear git history before a certain date? I just want to keep the relevant commits since my team started working on the project, rather than commits to a 'boilermaker' code we used
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
conschneider
commented
Apr 6, 2021
Worked for me. Thanks!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
ganeshh123
commented
Apr 7, 2021
Above didn't work but the following worked with more attributes during the push.
git init
git add .
git commit -m 'Initial commit'
git remote add origin [repo_address]
git push --mirror --force
Thanks @heshanlk , the --mirror option was what I needed!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
rileyrg
commented
Apr 7, 2021
Above didn't work but the following worked with more attributes during the push.
git init
git add .
git commit -m 'Initial commit'
git remote add origin [repo_address]
git push --mirror --force
Thanks @heshanlk , the --mirror option was what I needed!
See here, nice script which takes care of it all maintaining the original config which is what you want: resetting github repo
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
cole-wilson
commented
Apr 17, 2021
Thank you!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
ashubalike
commented
Apr 27, 2021
Great. Neat and clean. It's been very helpful.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
DavidLBrandt
commented
May 12, 2021
Thank you!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
aaxbas
commented
May 18, 2021
Thanks!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
AtomicNess123
commented
May 28, 2021
Is it possible to delete the history from within Github? Thanks.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
quanghuyle3
commented
Jun 4, 2021
THANK YOU SO MUCH. YOU HAVE SAVED MY LIFE!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
indieshack
commented
Jun 25, 2021
Is it possible to delete the history from within Github? Thanks.
Good question - GitHub is so conservative about supporting this kind of admin it sucks. There absolutely should be a way to do this within the browser - they won't to save developer resources
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
AtomicNess123
commented
Jun 25, 2021
Is it possible to delete the history from within Github? Thanks.
Good question - GitHub is so conservative about supporting this kind of admin it sucks. There absolutely should be a way to do this within the browser - they won't to save developer resources
Interesting. Do I understand however that running this git-clearHistory we will clear it?
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
jennerwein
commented
Jul 28, 2021
Thank you! Great coding, simple and yet extremely effective!!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Beyarz
commented
Sep 20, 2021
Gold
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
sharesourcecode
commented
Sep 29, 2021
This might be problematic with repositories with git submodules. I believe the recipe in this SO answer is a safer way: https://stackoverflow.com/a/13102849
git checkout --orphan newBranch
git add -A
# Add all files and commit them
git commit
git branch -D master
# Deletes the master branch
git branch -m master
# Rename the current branch to master
git push -f origin master
# Force push master branch to github
git gc --aggressive --prune=all
# remove the old files
Fantastic!
For automation it is better not to use the editor:
git commit -m 'Clear history'
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
t-pollington
commented
Oct 19, 2021
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
git commit
Will probably need to do git commit -m "some message" instead, to avoid an error.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
ayrokid
commented
Nov 13, 2021
thanks you so much
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
nolawnchairs
commented
Nov 13, 2021
Works fine for me. I had a customer who never finished paying me for work, so nuked the code in the remote repo and added my ransom to the README.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
mchapman87501
commented
Nov 16, 2021
...
git push --mirror --force
Thank you, @heshanlk.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
lzkill
commented
Dec 20, 2021
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
Adding a variable to capture the default branch name (it might be master or main):
#!/bin/bash
default_branch=`basename $(git symbolic-ref --short refs/remotes/origin/HEAD)`
git checkout --orphan tmp
git add -A				# Add all files and commit them
git commit
git branch -D $default_branch		# Deletes the default branch
git branch -m $default_branch		# Rename the current branch to default
git push -f origin $default_branch	# Force push default branch to github
git gc --aggressive --prune=all		# remove the old files
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
jrson83
commented
Dec 27, 2021
Thanks.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
graciofilipe
commented
Nov 14, 2022
❤️
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
FossPrime
commented
Nov 21, 2022
Save yourself a world of pain and use main as default branch... blame Github monopoly for causing this chaos.
In git 2.23 / replit's default / NixOS 22_05 default, use the following, as it has no concept of default branch:
git branch main
git checkout main
git branch -d master
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Code-Case
commented
Nov 22, 2022
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
Using just a branch isnt a good concept for branching.
Its always depends about how your workflow looks like and then learn how to branch.
Best regards
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
samih-sghier
commented
Dec 23, 2022
worked like charm
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
drstrangelooker
commented
Nov 20, 2024
Is it possible to delete the history from within Github? Thanks.
Yes. You need to contact GitHub support and they can run gc on the GitHub repo. Everything that is not reachable from a branch or tag will get cleaned up.
The instructions above are all around creating new branches that don't connect to the old history. So the old history will be eligible for gc (garbage collection). Keep in mind that aside from branches and tags, PRs and Issues might have links to old history and so they will prevent gc.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
gurvinder9824
commented
Jan 21, 2025
It worked for me-
git init
git add required files
git commit
git push
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
lfalanga
commented
Feb 14, 2025
Thank you
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Zorono
commented
Sep 1, 2025
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
This might be problematic with repositories with git submodules.
I believe the recipe in this SO answer is a safer way: https://stackoverflow.com/a/13102849
git checkout --orphan newBranch
git add -A
# Add all files and commit them
git commit
git branch -D master
# Deletes the master branch
git branch -m master
# Rename the current branch to master
git push -f origin master
# Force push master branch to github
git gc --aggressive --prune=all
# remove the old files
thanks bro @adeluccar
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.