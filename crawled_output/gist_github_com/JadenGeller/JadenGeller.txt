JadenGeller’s gists · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
Jaden Geller
JadenGeller
348
followers
·
56
following
San Francisco
https://mastodon.social/@jadengeller
https://www.threads.net/@jadengeller
Instagram
jadengeller
View GitHub Profile
All gists
340
Starred
25
Sort
Recently created
Least recently created
Recently updated
Least recently updated
Sort
Recently created
Least recently created
Recently updated
Least recently updated
1 file
0 forks
0 comments
0 stars
JadenGeller
/ CalendarDay.swift
Last active
July 29, 2025 07:59
represent a particular day on the calendar that's stable across time zones
import Foundation
/// Represents a specific day in the Gregorian calendar as an integer offset.
///
/// `CalendarDay` provides a timezone-stable way to identify calendar days.
/// When created, it captures which Gregorian calendar day a date falls on
/// according to the specified timezone, then stores this as an integer offset
/// from Apple's reference date (January 1, 2001).
///
/// This type is useful when you need to:
1 file
0 forks
0 comments
0 stars
JadenGeller
/ DateComponentsTimelineSchedule.swift
Created
July 27, 2025 18:19
update view daily at particular time, or any other date-based interval
import SwiftUI
struct DateComponentsTimelineSchedule: TimelineSchedule {
let components: DateComponents
let calendar: Calendar
let matchingPolicy: Calendar.MatchingPolicy
init(
components: DateComponents,
calendar: Calendar = .current,
1 file
0 forks
1 comment
0 stars
JadenGeller
/ OnChangeTask.swift
Last active
July 19, 2025 05:48
async onChange with cancelation
struct OnChangeTask<T: Equatable>: ViewModifier {
let value: T
let action: () async -> Void
@State private var updateCount = 0
func body(content: Content) -> some View {
content
.onChange(of: value) {
updateCount += 1
}
1 file
0 forks
1 comment
1 star
JadenGeller
/ ZoomNavigator.swift
Last active
September 17, 2025 05:12
Keep view state and identity while animating into it from a list
/// A view that displays a collection of items in a scrollable list that can "zoom" to focus on a single selected item.
///
/// `ZoomNavigator` provides a navigation pattern similar to the iOS lock screen wallpaper picker,
/// where items can be viewed together in a scrollable list or individually in full screen.
/// The same view instance is maintained during transitions, preserving state and identity.
///
/// When no item is selected (`selection` is `nil`), all items are displayed in a scrollable list.
/// When an item is selected, the view filters to show only that item, expanded to fill the available space.
struct ZoomNavigator<Data: RandomAccessCollection, ID: Hashable, Content: View, Background: View, Modifier: ViewModifier>: View {
var data: Data
1 file
0 forks
0 comments
0 stars
JadenGeller
/ ServiceLinkerPattern.md
Last active
July 6, 2025 19:05
Service Linker Pattern
The Service Linker Pattern
Build compositional service architectures where dependencies wire themselves, boundaries cost nothing, and testing happens at exactly the right level.
// Two services that both need users - automatically shared!
struct AppBundle: LinkOrder & LinkNotification {
let db = PostgreSQL()
let email = SendGrid()
}
2 files
0 forks
0 comments
0 stars
JadenGeller
/ $Parser.swift
Last active
September 12, 2024 04:50
parsing custom attributed text format
import SwiftUI
struct AttributedStringBuilder {
@Stack var attributes: RichTextAttributes = .init()
var string: AttributedString = ""
mutating func text(_ span: String) {
string += AttributedString(span, attributes: .init(attributes))
}
1 file
0 forks
2 comments
0 stars
JadenGeller
/ Stack.swift
Created
September 6, 2024 20:49
push/pop state property wrapper
@propertyWrapper
struct Stack<Value> {
private var history: [Value]
init(wrappedValue initialValue: Value) {
self.history = [initialValue]
}
var wrappedValue: Value {
get { history[history.endIndex - 1] }
1 file
0 forks
0 comments
0 stars
JadenGeller
/ markdown_extensions.md
Last active
September 4, 2024 07:34
Markdown Extensions
Component Directives
Component Directive: A code block that defines a custom component.
Info String: Starts with a $COMPONENT-NAME, which is @ followed by an $IDENTIFIER (e.g., @component-name).
Front Matter: Enclosed within --- delimiters, specifies component attributes.
Nesting: Use more backticks for the parent block than the child, respecting CommonMark.
Content: Valid markdown, which may nest component directives.
Examples
1 file
0 forks
1 comment
0 stars
JadenGeller
/ bfs.py
Last active
July 3, 2024 02:51
itertools bfs
from itertools import zip_longest, chain
from dataclasses import dataclass, field
@dataclass
class Tree:
value: any
children: list = field(default_factory=list)
def levels(self):
yield [self]
1 file
0 forks
0 comments
0 stars
JadenGeller
/ RangeSliceCollection.swift
Created
June 6, 2024 18:58
struct RangeSliceCollection<Base: Collection, Ranges: Collection>: Collection where Ranges.Element == Range<Base.Index> {
var base: Base
var ranges: Ranges
var startIndex: Ranges.Index { ranges.startIndex }
var endIndex: Ranges.Index { ranges.endIndex }
func index(after i: Ranges.Index) -> Ranges.Index {
ranges.index(after: i)
}
NewerOlder
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.