Installing LineageOS + microG with Working SMS/Geolocation and Passing SafetyNet Without Google Accounts ¬∑ GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign¬†in
Sign¬†up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
He-Is-HaZaRdOuS/lineageos_microg.md
Last active
September 25, 2025 00:16
Show Gist options
Download ZIP
Star
7
(7)
You must be signed in to star a gist
Fork
0
(0)
You must be signed in to fork a gist
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/He-Is-HaZaRdOuS/97691ea56de09357d291ed620c8ad86d.js&quot;&gt;&lt;/script&gt;
Save He-Is-HaZaRdOuS/97691ea56de09357d291ed620c8ad86d to your computer and use it in GitHub Desktop.
Code
Revisions
9
Stars
7
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/He-Is-HaZaRdOuS/97691ea56de09357d291ed620c8ad86d.js&quot;&gt;&lt;/script&gt;
Save He-Is-HaZaRdOuS/97691ea56de09357d291ed620c8ad86d to your computer and use it in GitHub Desktop.
Download ZIP
Installing LineageOS + microG with Working SMS/Geolocation and Passing SafetyNet Without Google Accounts
Raw
lineageos_microg.md
Installing LineageOS + microG with Working SMS/Geolocation and Passing PlayIntegrity Without Google Accounts
This guide documents the process of installing LineageOS with microG and passing PlayIntegrity without logging into any Google accounts. It also ensures SMS and GPS functionality while maintaining privacy.
Prerequisites
A device compatible with LineageOS.
Familiarity with unlocking bootloaders, flashing custom ROMs, and using terminal commands.
Backup your data before proceeding.
Installing LineageOS with microG
Install LineageOS for Your Device
Follow the official LineageOS installation guide for your device.
Ensure your device boots successfully into LineageOS.
Install F-Droid
Download and install F-Droid, the open-source app store for Android.
Add and Install microG Repositories and Apps
Add the microG repositories to F-Droid by following this guide.
Install the following microG components:
microG Services Core
microG Settings (companion app)
microG Services Framework Proxy (This might not install due to being outdated; we resolve this in step 5.)
Install Kitsune Magisk
Download and install Kitsune Magisk (fork) from 1q23lyc45's GitHub.
Enable all features in Kitsune Magisk, such as Zygisk and MagiskHide, except for "Enforcing Sulist" (this may cause issues).
Install microG Installer Revived
Install microG Installer Revived to obtain Google Services Framework (GSF), required for SMS functionality.
If the installer fails, either:
Wait for an update.
Modify the customize.sh script in the installer to bypass version checks manually.
Install Nominatim for GPS Functionality
Install Nominatim from F-Droid. This tool resolves GPS data for microG.
Enable Nominatim in the Location section of the microG settings.
In the same section, enable relevant options for:
Wi-Fi localization
Cellular localization
Adjust these settings based on your privacy preferences.
Modify the Kernel Name
Use the kr_offset.sh script to change your kernel name to something unique (e.g., "bushcat"):
./kr_offset.sh --auto --patch "bushcat"
Reboot your device after running the script.
Verify the kernel name change using a terminal emulator or ADB:
uname -r
The output should show the new kernel name.
Why Change the Kernel Name?
Google blacklists popular kernel names, causing PlayIntegrity to automatically fail on devices with these names. Changing the kernel name bypasses this blacklist.
Register Your Device in microG
Use MagiskHide to hide root access from the microG Services Core app.
Open the microG Settings app and register your device using the Device Registration feature.
Updating LineageOS with microG
Follow these steps to update your LineageOS installation while ensuring everything remains functional:
Download the new build and boot image
Obtain the latest LineageOS build and its respective boot image for your device.
Patch the boot image
Use Kitsune Magisk to patch the boot image.
Copy the patched boot image back to your computer.
Reboot to recovery and sideload the new build
Boot into recovery mode.
Sideload the new build using the following command:
adb -d sideload filename.zip
Switch to the updated slot
After sideloading, you will be prompted to reboot recovery to install additional zips.
Accept this option even if you don‚Äôt plan to install additional zips. This ensures your device switches to the updated slot.
Flash the patched boot image
Reboot to the bootloader (fastboot mode).
Flash the patched boot image with the following command:
fastboot flash boot magisk_patched_boot.img
Reboot to system and verify the update
Reboot your device into the system.
Ensure the update was installed correctly and the system is functioning as expected.
Update the kernel name if necessary
If required, change the kernel name as described in the earlier sections.
Reboot your device after making this change.
Verify microG functionality
Ensure microG is functioning correctly.
By following these steps, you can safely update your system while preserving your setup.
Strong Integrity setup
Install PlayIntegrityFork
Download and install PlayIntegrityFork.
Install ReZygisk
Download and install ReZygisk.
Install TrickyStore
Download and install TrickyStore.
Install TrickyAddon
Download and install TrickyAddon.
Install MMRL
Download and install MMRL.
Install WebUI-X
Download and install WebUI-X.
Reboot Device
Configure TrickyStore
Launch TrickyStore module from inside the MMRL app.
Enter the TrickyStore module configuration from inside the WebUI-X app.
Tap ‚ò∞ icon and select All from the menu.
Tap Set valid keybox.
Tap Set security patch and choose Set to auto.
Tap Save.
Generate a new PIF Config
Open a terminal session on your device and obtain sudo rights by typing su and granting permissions.
cd to the following directory /data/adb/modules/playintegrityfix.
Execute the following command sh autopif2.sh -s -p to crawl the Android Platform Preview builds for unrevoked pixel PIF configurations.
Profit?
Check if your device now passes all Play Integrity tests. If not, consult the PlayIntegrityFork github page for more advanced options to generate PIF configurations.
If you're still failing Strong Integrity, then it's likely that your keybox got invalidated, in this case you need to set a new one as per the previous step.
You generally need to generate a new PIF configuration every week or so as Google tends to invalidate older ones. This is the only true hassle of using this setup.
Credits go to 306bobby for his wonderful guide on bypassing PlayIntegrity checks!
FOSS Alternatives and App Recommendations
To maintain privacy and avoid Google accounts, consider using the following FOSS apps and services:
Browser: IronFox or Cromite
Email: Thunderbird
Messaging: Element
Navigation: Organic Maps or OsmAnd+
App Store: Aurora Store for downloading apps from the Play Store anonymously.
Feel free to explore F-Droid for more free and open-source applications.
Troubleshooting
If PlayIntegrity fails:
Ensure all modules and microG components are installed correctly.
Reboot your device and try the tests again.
Check for updates to any of the tools or scripts.
Verify that the kernel name has been changed successfully.
If all else fails, seek help on relevant forums or communities.
Screenshots:
Copy link
camlafit
commented
Jun 18, 2025
Hi
Some links looks death :
https://github.com/HuskyDG/magisk-files
https://github.com/chiteroman/PlayIntegrityFix
thanks
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
He-Is-HaZaRdOuS
commented
Jun 18, 2025
@camlafit Hello, thanks for pointing that out.
I believe the original PIF was discontinued and as for Kitsune Magisk I'm not so sure, might have went private.
The guide is due for an update anyways as Google now also started checking keyboxes and other device specific properties. I'll try updating it with the new instruction set within 48 hours :)
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
camlafit
commented
Jun 18, 2025
Hello
Don't worry :)
I was searching some complement to update my microg lineageOS FP4 and found your useful gist :)
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
He-Is-HaZaRdOuS
commented
Jun 19, 2025
@camlafit Updated!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
camlafit
commented
Jun 20, 2025
üëç
thanks a lot
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
sewnie
commented
Jul 13, 2025
‚Ä¢
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
doesn't work unfortunately. however, i observed that you're using normal Lineage.
have you tried los4microg?
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
He-Is-HaZaRdOuS
commented
Aug 22, 2025
@sewnie The PlayIntegrity part is hit and miss, practically luck, depending on the status of PIF and keyboxes, and on the banking apps' security mechanisms.
The MicroG part works fine to this day as I use it as my daily driver. I use normal LOS builds and I compiled custom LOS with my own MicroG setup and private keys and it works on there too. I haven't tried los4microg as I didn't see a need for it personally, however I took inspiration from their automation scripts to produce my own lineage builds.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Footer
¬© 2025 GitHub,¬†Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can‚Äôt perform that action at this time.