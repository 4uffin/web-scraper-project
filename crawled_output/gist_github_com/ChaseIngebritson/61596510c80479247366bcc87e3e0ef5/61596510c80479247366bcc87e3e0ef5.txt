Convert a .webp image to be readable by Jimp · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
ChaseIngebritson/webpToJimp.js
Last active
September 24, 2025 02:54
Show Gist options
Download ZIP
Star
6
(6)
You must be signed in to star a gist
Fork
1
(1)
You must be signed in to fork a gist
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/ChaseIngebritson/61596510c80479247366bcc87e3e0ef5.js&quot;&gt;&lt;/script&gt;
Save ChaseIngebritson/61596510c80479247366bcc87e3e0ef5 to your computer and use it in GitHub Desktop.
Code
Revisions
5
Stars
6
Forks
1
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/ChaseIngebritson/61596510c80479247366bcc87e3e0ef5.js&quot;&gt;&lt;/script&gt;
Save ChaseIngebritson/61596510c80479247366bcc87e3e0ef5 to your computer and use it in GitHub Desktop.
Download ZIP
Convert a .webp image to be readable by Jimp
Raw
webpToJimp.js
// This is a temporary fix until Jimp implements support for webp
// https://github.com/oliver-moran/jimp/issues/144
// const img = await webpToJimp('https://test.com/img.webp', './tmp')
import fs from 'fs'
import axios from 'axios'
import jimp from 'jimp'
import webp from 'webp-converter'
export default async function webpToJimp (url, tempDir) {
// Verify that the img is a webp
if (!url.match(/(\.webp)/gi)) return jimp.read(url)
// Get the webp image
const response = await axios.get(url, {
responseType: 'stream'
})
// Create the temporary directory if it doesn't exist
await fs.promises.mkdir(tempDir, { recursive: true })
// Create a stream at the temporary directory and load the data into it
const file = fs.createWriteStream(`${tempDir}/tmp.webp`)
await response.data.pipe(file)
// Convert the webp image to a readable format
await webp.dwebp(`${tempDir}/tmp.webp`, `${tempDir}/tmp.png`, '-o')
// Read the newly created image
const img = await jimp.read(`${tempDir}/tmp.png`)
// Delete the temporary files
fs.unlink(`${tempDir}/tmp.webp`, () => {})
fs.unlink(`${tempDir}/tmp.png`, () => {})
return img
}
Copy link
alextoul
commented
Jan 23, 2023
That script made my day, thanks!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
timothyhsu8
commented
Nov 27, 2024
Worked like a charm, thank you!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.