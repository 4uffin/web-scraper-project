LayZeeDKâ€™s gists Â· GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
SignÂ in
SignÂ up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
ðŸ‡©ðŸ‡°
Denmark
Lars Gyrup Brink Nielsen
LayZeeDK
ðŸ‡©ðŸ‡°
Denmark
Microsoft MVP, Nx Champion, Co-Founder of This is Learning, Organizer of AarhusJS, Author, Writer, Speaker, Open-Source Maintainer.
537
followers
Â·
186
following
@this-is-learning
Holstebro, Denmark
03:38
(UTC +02:00)
https://dev.to/layzee
LinkedIn
in/larsgbn
Mastodon
@LayZee@mastodon.nu
YouTube
@LarsGyrupBrinkNielsen
Twitch
LayZeeDK
View GitHub Profile
All gists
161
Forked
10
Starred
22
Sort
Recently created
Least recently created
Recently updated
Least recently updated
Sort
Recently created
Least recently created
Recently updated
Least recently updated
1 file
0 forks
0 comments
0 stars
LayZeeDK
/ mock-module-with-default-export.ts
Created
August 21, 2025 13:23
Resolve "TypeError: Cannot redefine property: <spyOnMethodName>" in Jest
/// <reference types="jest" />
/**
* Mock ESModule with `default` export to support {@link jest.spyOn}.
*
* Resolve "TypeError: Cannot redefine property: <spyOnMethodName>".
*
* @remarks Should be called before other import statements.
* @see https://jestjs.io/docs/29.7/jest-object#jestmockmodulename-factory-options
*/
1 file
0 forks
0 comments
0 stars
LayZeeDK
/ test-setup.ts
Last active
August 11, 2025 09:08
Resolve Nx generator unit test issues in Nx 19 + Jest 29.
/// <reference types="jest" />
import type { getFileInfo, resolveConfig } from 'prettier';
/**
* Resolve `TypeError: performance.mark is not a function`.
*
* @see https://github.com/nrwl/nx/issues/23435#issuecomment-2127183725
*/
const performanceMock: Performance = {
...performance,
1 file
0 forks
0 comments
0 stars
LayZeeDK
/ with-injector-prop.storybook-decorator.ts
Created
March 26, 2025 10:26
Storybook 7+ decorator to access Angular Injector as `injector` prop
import {
APP_INITIALIZER,
EnvironmentProviders,
FactoryProvider,
Injector,
makeEnvironmentProviders,
} from '@angular/core';
import { AngularRenderer } from '@storybook/angular';
import { DecoratorFunction } from '@storybook/types';
3 files
0 forks
0 comments
0 stars
LayZeeDK
/ get-storybook-injector.ts
Created
March 26, 2025 10:24
Get Angular Injector in Storybook 7+ `play` function
import { Injector } from '@angular/core';
import { getStorybookNg } from './get-storybook-ng';
/**
* Get root-level injector for a component story.
*
* @example
* play: ({ canvasElement }) = {
* const injector = getStorybookInjector(canvasElement);
*
1 file
0 forks
0 comments
0 stars
LayZeeDK
/ test-setup.ts
Last active
August 11, 2025 09:25
Resolve Nx generator unit test issues in Nx 18 + Jest 29.
/// <reference types="jest" />
import type { createProjectGraphAsync } from '@nx/devkit';
/**
* Resolve `TypeError: performance.mark is not a function`.
*
* @see https://github.com/nrwl/nx/issues/23435#issuecomment-2127183725
*/
const performanceMock: Performance = {
...performance,
2 files
0 forks
0 comments
0 stars
LayZeeDK
/ error-handler-with-plugins.syntax-error.ts
Created
December 3, 2024 08:13
Angular ErrorHandler with plugins
@Injectable()
export class ErrorHandlerWithPlugins extends ErrorHandler {
readonly #plugins = inject(errorHandlerPluginToken, { optional: true }) ?? [];
override handleError(originalError: unknown): void {
super.handleError(originalError);
this.#plugins.forEach((plugin) => {
try {
plugin.handleError(originalError);
9 files
0 forks
0 comments
0 stars
LayZeeDK
/ README.md
Last active
November 3, 2023 04:14
Nx generator wrapping jscodeshift transform: TypeScript private properties to ECMAScript private fields
Nx generator wrapping jscodeshift transform: TypeScript private properties to ECMAScript private fields
This library contains local Nx migration generators. To use them, run
nx generate @myorg/typescript-migrations:<migration-name> <project-name>
For example
1 file
0 forks
0 comments
0 stars
LayZeeDK
/ a-router-history-service-in-angular.md
Last active
May 22, 2023 23:47
A Router History Service in Angular by Zach Tindall
A Router History Service in Angular
By Zach Tindall
Resources
A Router History Service in Angular (Wayback Machine)
semanticbits/previous-url-example (GitHub)
6 files
0 forks
0 comments
0 stars
LayZeeDK
/ angular-testing-library-with-spectacular-0_5.ts
Last active
July 17, 2023 12:13
Spectacular 15 Feature testing API design
// Angular Testing Library + Spectacular 0.5
const {
fixture: {
debugElement: { injector },
},
} = await render(SpectacularAppComponent, {
excludeComponentDeclaration: true,
imports: [
SpectacularFeatureTestingModule.withFeature({
featureModule: HeroesModule,
3 files
0 forks
0 comments
0 stars
LayZeeDK
/ input.scss
Created
April 11, 2023 00:04
Generated by SassMeister.com.
/// Scales a color to be darker if it's light, or lighter if it's dark. Use this function to tint a color appropriate to its lightness.
///
/// @param {Color} $color - Color to scale.
/// @param {Percentage} $scale [5%] - Amount to scale up or down.
/// @param {Percentage} $threshold [40%] - Threshold of lightness to check against.
///
/// @returns {Color} A scaled color.
@function smart-scale($color, $scale: 5%, $threshold: 40%) {
@if lightness($color) > $threshold {
$scale: -$scale;
NewerOlder
Footer
Â© 2025 GitHub,Â Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You canâ€™t perform that action at this time.