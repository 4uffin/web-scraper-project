Active StarUml version 6 for Window | MacOS | Linux · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
K1ethoang/Active StarUml version 6 for Window | MacOS | Linux.md
Last active
September 21, 2025 12:14
Show Gist options
Download ZIP
Star
555
(555)
You must be signed in to star a gist
Fork
27
(27)
You must be signed in to fork a gist
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/K1ethoang/83267585235bbb6a55e5479ae969d7a3.js&quot;&gt;&lt;/script&gt;
Save K1ethoang/83267585235bbb6a55e5479ae969d7a3 to your computer and use it in GitHub Desktop.
Code
Revisions
10
Stars
554
Forks
27
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/K1ethoang/83267585235bbb6a55e5479ae969d7a3.js&quot;&gt;&lt;/script&gt;
Save K1ethoang/83267585235bbb6a55e5479ae969d7a3 to your computer and use it in GitHub Desktop.
Download ZIP
Active StarUml version 6 for Window | MacOS | Linux
Raw
Active StarUml version 6 for Window | MacOS | Linux.md
Active StarUML on Window/MacOS/Linux
Step 1: Download and install StarUML Version 6 from main website https://staruml.io
Step 2: Download app.asar file from https://drive.google.com/file/d/1_sKvHVL6SebnYF73iZxSWD9l48Pddzvj/view?usp=sharing
Step 3: Copy app.asar file download in step 2 (Override app.asar file)
Window: C:\Program Files\StarUML\resources
MacOS: /Applications/StarUML.app/Contents/Resources/
Linux: /opt/StartUML/resources
Step 4: Open StarUML app to use
Do not forget to give me⭐
Support version: v6.3.1
Update
[2025-01-30]:
Update app.asar to v6.3.1
Block auto update new version
[2024-12-11]: Supports Linux from comment
[2024-11-19]: Supports MacOS from comment
[2024-11-12]:
Block auto update (Beta)
Update app.asar file for V6.3.0
Have done!
Support:
Load earlier comments...
Copy link
adminroan24
commented
Apr 28, 2025
Thanks!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
zapsys
commented
May 1, 2025
Still working nicely on Linux (Arch Linux). Thank you!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
SavvyShark
commented
May 6, 2025
Thanks! Working on 6.3.1 / macOS Sequoia 15.3.1, Apple M4
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Gustavo-Harnisch
commented
May 7, 2025
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
Thanks!!! May 2025 is still in operation.
Linux Mint 22.1 x86_64
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
IgnacioR-Dev
commented
May 9, 2025
Funcionando con la última versión de Star UML en Windows, próximamente lo probaré en Linux Mint.
Muchas gracias por tu gran aporte amigo.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
FiciorAndrei30323
commented
May 12, 2025
Thanks, it works!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
nazho248
commented
May 14, 2025
it works in mac, thanks!!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
katatunix
commented
May 17, 2025
Works on 6.3.2
Just a small concern: It changes the version number in About dialog to 6.3.1
Hope you can fix it.
Thanks a lot.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
bilalop
commented
May 20, 2025
fix it for
6.3.2 PLZ !!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
sagarchaulagai
commented
May 22, 2025
fix it for 6.3.2 PLZ !!
it works on 6.3.2
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
VictorAissa
commented
May 25, 2025
thanks bro
works perfectly on Ubuntu 24.04.2
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Lona-arnoa
commented
May 26, 2025
thanks it works!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
TranNhan2004
commented
May 28, 2025
It works in v6.3.2 (Linux Mint 22.1). Thanks bro very much!!!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
kayes351
commented
May 31, 2025
thanks dude...it works
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
MalikHoubbi
commented
Jun 4, 2025
It works thanks you !!!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
EPALENWENYOH
commented
Jun 7, 2025
thanks a lot. peace
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
shaimaHamila
commented
Jun 14, 2025
It work well thanks
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
angelli1210
commented
Jun 18, 2025
It works! thanks
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
KeitlynLilimp
commented
Jun 25, 2025
don't work on 6.3.3
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
KeitlynLilimp
commented
Jun 25, 2025
Alguien tiene el archivo 6.3.2 para linux?
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
zapsys
commented
Jun 25, 2025
I updated StarUML to version 6.3.3 on Arch Linux and using this app.asar (version 6.3.1) it works! Thanks!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
HoaiTuyen
commented
Jul 11, 2025
wow, thanks
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
mrwilllordwill
commented
Aug 5, 2025
thank u
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
leobossa10
commented
Aug 10, 2025
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
Hi! Working on 7.0.0 version. Thank you!
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
crepin7
commented
Aug 19, 2025
thanks bro! Working in 7.0.0 version.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
jaime-dz
commented
Aug 20, 2025
Working on Linux mint 7.0.0 version
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
kemuriz
commented
Sep 4, 2025
Goat
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
MOHAMED-AMINE11
commented
Sep 6, 2025
2025, still working
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
alexandevcwa
commented
Sep 11, 2025
Download Linux Deb, v6.3.1
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
kamanrique
commented
Sep 11, 2025
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
Funciona en la versión 7, ahora el archivo que se modifica está alojado en: app.asar\src\engine\license-store.js
const { ipcRenderer } = require("electron");
const { EventEmitter } = require("events");
const LicenseActivationDialog = require("../dialogs/license-activation-dialog");
class LicenseStore extends EventEmitter {
constructor() {
super();
this.licenseStatus = {
activated: false,
name: null,
product: null,
edition: null,
productDisplayName: null,
deviceId: null,
licenseKey: null,
activationCode: null,
trial: false,
trialDaysLeft: 0,
};
// Configuración de validación local
this.localValidation = true; // Flag para activar validación local por defecto
// Inicializar con validación local si está habilitada
if (this.localValidation) {
this.initializeLocalLicense();
}
}
// Inicializar con datos de licencia local
initializeLocalLicense() {
const localResult = this.validateLocal();
this.licenseStatus = {
...this.licenseStatus,
activated: true,
name: localResult.name,
product: localResult.product,
edition: "Professional",
productDisplayName: localResult.product,
deviceId: "local-device-id",
licenseKey: localResult.licenseKey,
trial: false,
trialDaysLeft: 0,
};
}
// Método de validación local (adaptado del código original que querías integrar)
validateLocal(PK = null, name = null, product = null, licenseKey = null) {
// Simulación de la validación con NodeRSA (puedes descomentar si tienes node-rsa instalado)
// const NodeRSA = require('node-rsa');
return {
success: true,
name: "FullActivated",
product: "StarUML",
licenseType: "vip",
quantity: "unlimited",
licenseKey: licenseKey || "no, thanks!",
activated: true,
trial: false,
trialDaysLeft: 0
};
}
// Método para registrar el dominio (si necesitas compatibilidad con domain manager)
initDomainManager(domainManager) {
if (!domainManager) return;
if (!domainManager.hasDomain("LicenseManager")) {
domainManager.registerDomain("LicenseManager", {major: 0, minor: 1});
}
domainManager.registerCommand(
"LicenseManager", // domain name
"validate",
// command name
this.validateLocal.bind(this), // command handler function
false,
// this command is synchronous in Node
"Validate License",
[
{
name: "PK",
type: "string",
description: "PK"
},
{
name: "name",
type: "string",
description: "name of license owner"
},
{
name: "product",
type: "string",
description: "product name"
},
{
name: "licenseKey",
type: "string",
description: "license key"
}
],
[
{
name: "result",
type: "object",
description: "result"
}
]
);
}
async fetch() {
if (this.localValidation) {
// Usar validación local en lugar de IPC
const localResult = this.validateLocal();
this.licenseStatus = {
...this.licenseStatus,
activated: true,
name: localResult.name,
product: localResult.product,
licenseKey: localResult.licenseKey,
trial: false,
trialDaysLeft: 0
};
} else {
// Lógica original con IPC
const licenseStatus = await ipcRenderer.invoke(
"license.get-license-status",
);
this.licenseStatus = licenseStatus;
}
this.emit("statusChanged", this.licenseStatus);
}
async getDeviceId() {
if (this.localValidation) {
return "local-device-id-" + Date.now(); // ID único para validación local
}
try {
const deviceId = await ipcRenderer.invoke("license.get-device-id");
return deviceId;
} catch (err) {
console.error(err);
return null;
}
}
async activate(licenseKey) {
if (this.localValidation) {
// Activación local siempre exitosa
const result = this.validateLocal(null, null, null, licenseKey);
this.licenseStatus = {
...this.licenseStatus,
activated: true,
licenseKey: licenseKey,
name: result.name,
product: result.product,
trial: false,
trialDaysLeft: 0
};
this.emit("statusChanged", this.licenseStatus);
console.log("License activated locally with key:", licenseKey);
return { success: true, message: "License activated successfully" };
}
// Lógica original con IPC
try {
const result = await ipcRenderer.invoke("license.activate", licenseKey);
if (!result.success) {
this.emit("error", result.message || "Activation failed");
}
} catch (err) {
console.error(err);
this.emit("error", "Activation failed");
}
await this.fetch();
}
async deactivate() {
if (this.localValidation) {
// Para validación local, mantener siempre activado
console.log("Deactivation ignored in local validation mode");
this.licenseStatus.activated = true;
this.emit("statusChanged", this.licenseStatus);
return { success: true, message: "License remains active in local mode" };
}
// Lógica original con IPC
try {
const result = await ipcRenderer.invoke("license.deactivate");
if (!result.success) {
this.emit("error", result.message || "Deactivation failed");
}
} catch (err) {
console.error(err);
this.emit("error", "Deactivation failed");
}
await this.fetch();
}
async validate() {
if (this.localValidation) {
// Usar validación local
const result = this.validateLocal();
// Actualizar status con los datos de validación local
this.licenseStatus = {
...this.licenseStatus,
activated: result.activated,
name: result.name,
product: result.product,
licenseKey: result.licenseKey,
trial: result.trial,
trialDaysLeft: result.trialDaysLeft
};
this.emit("statusChanged", this.licenseStatus);
return result;
}
// Lógica original con IPC
const result = await ipcRenderer.invoke("license.validate");
const licenseStatus = await ipcRenderer.invoke(
"license.get-license-status",
);
this.licenseStatus = licenseStatus;
this.emit("statusChanged", this.licenseStatus);
return result;
}
getLicenseStatus() {
return this.licenseStatus;
}
async checkTrialMode() {
if (this.localValidation) {
// En modo local, nunca mostrar diálogo de activación ya que siempre está activado
console.log("Trial mode check skipped - local validation active");
return;
}
// Lógica original
const licenseStatus = await ipcRenderer.invoke(
"license.get-license-status",
);
if (licenseStatus.trial) {
LicenseActivationDialog.showDialog();
}
}
async htmlReady() {
try {
const result = await this.validate();
if (this.localValidation) {
// En modo local, siempre activado con datos del validador local
this.licenseStatus.activated = true;
this.licenseStatus.name = result.name;
this.licenseStatus.product = result.product;
this.licenseStatus.licenseKey = result.licenseKey;
this.licenseStatus.trial = false;
this.licenseStatus.trialDaysLeft = 0;
console.log("License initialized with local validation");
} else {
// Lógica original que siempre pone true
this.licenseStatus.activated = true;
}
this.emit("statusChanged", this.licenseStatus);
await this.checkTrialMode();
} catch (err) {
console.error(err);
console.log("License validation failed");
// Mantener la lógica original que fuerza true incluso en error
this.licenseStatus.activated = true;
if (this.localValidation) {
// En caso de error en modo local, usar valores por defecto
const defaultResult = this.validateLocal();
this.licenseStatus.name = defaultResult.name;
this.licenseStatus.product = defaultResult.product;
this.licenseStatus.licenseKey = defaultResult.licenseKey;
console.log("Using default local license due to validation error");
}
this.emit("statusChanged", this.licenseStatus);
}
}
// Método adicional para equivaler exactamente al código viejo
async checkLicenseValidity() {
try {
const result = await this.validate();
// Equivalente a setStatus(this, true) - siempre true como en código original
this.licenseStatus.activated = true;
if (this.localValidation && result) {
this.licenseStatus.name = result.name;
this.licenseStatus.product = result.product;
this.licenseStatus.licenseKey = result.licenseKey;
this.licenseStatus.trial = result.trial;
this.licenseStatus.trialDaysLeft = result.trialDaysLeft;
}
this.emit("statusChanged", this.licenseStatus);
} catch (err) {
console.error("License validation error:", err);
// Equivalente al catch que fuerza setStatus(this, true)
this.licenseStatus.activated = true;
if (this.localValidation) {
// En modo local, usar valores por defecto incluso en error
const defaultResult = this.validateLocal();
this.licenseStatus.name = defaultResult.name;
this.licenseStatus.product = defaultResult.product;
this.licenseStatus.licenseKey = defaultResult.licenseKey;
}
this.emit("statusChanged", this.licenseStatus);
}
}
// Método para cambiar entre validación local e IPC
setLocalValidation(enabled) {
const wasEnabled = this.localValidation;
this.localValidation = enabled;
if (enabled && !wasEnabled) {
// Cambió de IPC a local - inicializar con datos locales
this.initializeLocalLicense();
this.emit("statusChanged", this.licenseStatus);
console.log("Switched to local validation mode");
} else if (!enabled && wasEnabled) {
// Cambió de local a IPC - limpiar datos y usar IPC
console.log("Switched to IPC validation mode");
this.fetch(); // Recargar desde IPC
}
}
// Método para obtener información sobre el modo actual
getValidationMode() {
return {
localValidation: this.localValidation,
mode: this.localValidation ? "local" : "ipc"
};
}
// Método para forzar recarga del estado de licencia
async refresh() {
await this.fetch();
}
// Método de utilidad para debug
debugInfo() {
console.log("LicenseStore Debug Info:");
console.log("- Validation Mode:", this.localValidation ? "Local" : "IPC");
console.log("- License Status:", this.licenseStatus);
console.log("- Activated:", this.licenseStatus.activated);
console.log("- Product:", this.licenseStatus.product);
console.log("- Name:", this.licenseStatus.name);
}
}
module.exports = LicenseStore;
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.