jlyonsmith’s gists · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
John Lyon-Smith
jlyonsmith
31
followers
·
2
following
View GitHub Profile
All gists
34
Forked
15
Starred
8
Sort
Recently created
Least recently created
Recently updated
Least recently updated
Sort
Recently created
Least recently created
Recently updated
Least recently updated
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ readme.md
Created
July 17, 2022 16:53
decadent-sparkle-6861
decadent-sparkle-6861
Created with <3 with dartpad.dev.
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ firetv-jobs.md
Last active
April 7, 2021 17:15
A list of open positions on my my team at Amazon
FireTV Jobs
The FireTV team at Amazon is hiring! Come and help us build the next generation FireTV devices.
Open Roles
Software Development Engineer in Test
Quality Assurance Engineer III
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ couchdb.conf
Created
November 16, 2020 05:28
— forked from robbiet480/couchdb.conf
CouchDB + Let's Encrypt + nginx reverse proxy configuration. Use https://www.digitalocean.com/community/tutorials/how-to-configure-nginx-as-a-web-server-and-reverse-proxy-for-apache-on-one-ubuntu-14-04-droplet to setup Let's Encrypt
server {
listen 80;
server_name yournamehere.com;
return 301 https://$host$request_uri;
}
server {
listen 443 ssl;
server_name yournamehere.com;
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ System Design.md
Created
April 30, 2020 16:36
— forked from vasanthk/System Design.md
System Design Cheatsheet
System Design Cheatsheet
Picking the right architecture = Picking the right battles + Managing trade-offs
Basic Steps
Clarify and agree on the scope of the system
User cases (description of sequences of events that, taken together, lead to a system doing something useful)
Who is going to use it?
How are they going to use it?
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ debian-install-megacli.md
Created
November 7, 2019 05:11
— forked from MohamedMohsenX2/debian-install-megacli.md
Install LSI MegaCli .deb package on Debian/Ubuntu
download
wget https://docs.broadcom.com/docs-and-downloads/raid-controllers/raid-controllers-common-files/8-07-14_MegaCLI.zip
unzip
unzip 8-07-14_MegaCLI.zip
1 file
3 forks
5 comments
48 stars
jlyonsmith
/ Mac Keyboard Symbols.md
Last active
September 20, 2025 11:46
— forked from Zenexer/Mac Keyboard Symbols.md
List of Mac/Apple keyboard symbols
Common symbols
Modifiers
When a key combination is displayed, the modifiers are written in the order presented here.
For example, Control + Option + Shift + Command + Q would be written as ⌃⌥⇧⌘Q.
Sym
Key
Alt
⌃
Control
⌥
Option
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ ansible-summary.md
Created
August 8, 2018 19:36
— forked from andreicristianpetcu/ansible-summary.md
This is an ANSIBLE Cheat Sheet from Jon Warbrick
An Ansible summary
Jon Warbrick, July 2014, V3.2 (for Ansible 1.7)
Configuration file
intro_configuration.html
First one found from of
1 file
0 forks
0 comments
1 star
jlyonsmith
/ ansible-bootstrap-ubuntu-16.04.yml
Created
August 7, 2018 18:03
— forked from gwillem/ansible-bootstrap-ubuntu-16.04.yml
Get Ansible to work on bare Ubuntu 16.04 without python 2.7
# Add this snippet to the top of your playbook.
# It will install python2 if missing (but checks first so no expensive repeated apt updates)
# gwillem@gmail.com
- hosts: all
gather_facts: False
tasks:
- name: install python 2
raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
2 files
0 forks
0 comments
0 stars
jlyonsmith
/ latency.markdown
Created
June 21, 2018 17:07
— forked from hellerbarde/latency.markdown
Latency numbers every programmer should know
Latency numbers every programmer should know
L1 cache reference ......................... 0.5 ns
Branch mispredict ............................ 5 ns
L2 cache reference ........................... 7 ns
Mutex lock/unlock ........................... 25 ns
Main memory reference ...................... 100 ns
Compress 1K bytes with Zippy ............. 3,000 ns
=
3 µs
Send 2K bytes over 1 Gbps network ....... 20,000 ns
=
20 µs
SSD random read ........................ 150,000 ns
= 150 µs
Read 1 MB sequentially from memory ..... 250,000 ns = 250 µs
1 file
0 forks
0 comments
0 stars
jlyonsmith
/ latency.txt
Created
June 21, 2018 17:07
— forked from jboner/latency.txt
Latency Numbers Every Programmer Should Know
Latency Comparison Numbers (~2012)
----------------------------------
L1 cache reference
0.5 ns
Branch mispredict
5
ns
L2 cache reference
7
ns
14x L1 cache
Mutex lock/unlock
25
ns
Main memory reference
100
ns
20x L2 cache, 200x L1 cache
Compress 1K bytes with Zippy
3,000
ns
3 us
Send 1K bytes over 1 Gbps network
10,000
ns
10 us
Read 4K randomly from SSD*
150,000
ns
150 us
~1GB/sec SSD
NewerOlder
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.