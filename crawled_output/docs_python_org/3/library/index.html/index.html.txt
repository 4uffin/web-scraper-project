The Python Standard Library — Python 3.13.7 documentation
Theme
Auto
Light
Dark
Previous topic
10. Full Grammar specification
Next topic
Introduction
This page
Report a bug
Show source
Navigation
index
modules |
next |
previous |
Python »
3.13.7 Documentation »
The Python Standard Library
|
Theme
Auto
Light
Dark
|
The Python Standard LibraryÂ¶
While The Python Language Reference describes the exact syntax and
semantics of the Python language, this library reference manual
describes the standard library that is distributed with Python. It also
describes some of the optional components that are commonly included
in Python distributions.
Pythonâs standard library is very extensive, offering a wide range of
facilities as indicated by the long table of contents listed below. The
library contains built-in modules (written in C) that provide access to
system functionality such as file I/O that would otherwise be
inaccessible to Python programmers, as well as modules written in Python
that provide standardized solutions for many problems that occur in
everyday programming. Some of these modules are explicitly designed to
encourage and enhance the portability of Python programs by abstracting
away platform-specifics into platform-neutral APIs.
The Python installers for the Windows platform usually include
the entire standard library and often also include many additional
components. For Unix-like operating systems Python is normally provided
as a collection of packages, so it may be necessary to use the packaging
tools provided with the operating system to obtain some or all of the
optional components.
In addition to the standard library, there is an active collection of
hundreds of thousands of components (from individual programs and modules to
packages and entire application development frameworks), available from
the Python Package Index.
Introduction
Notes on availability
Built-in Functions
Built-in Constants
Constants added by the site module
Built-in Types
Truth Value Testing
Boolean Operations â and, or, not
Comparisons
Numeric Types â int, float, complex
Boolean Type - bool
Iterator Types
Sequence Types â list, tuple, range
Text Sequence Type â str
Binary Sequence Types â bytes, bytearray, memoryview
Set Types â set, frozenset
Mapping Types â dict
Context Manager Types
Type Annotation Types â Generic Alias, Union
Other Built-in Types
Special Attributes
Integer string conversion length limitation
Built-in Exceptions
Exception context
Inheriting from built-in exceptions
Base classes
Concrete exceptions
Warnings
Exception groups
Exception hierarchy
Text Processing Services
string â Common string operations
re â Regular expression operations
difflib â Helpers for computing deltas
textwrap â Text wrapping and filling
unicodedata â Unicode Database
stringprep â Internet String Preparation
readline â GNU readline interface
rlcompleter â Completion function for GNU readline
Binary Data Services
struct â Interpret bytes as packed binary data
codecs â Codec registry and base classes
Data Types
datetime â Basic date and time types
zoneinfo â IANA time zone support
calendar â General calendar-related functions
collections â Container datatypes
collections.abc â Abstract Base Classes for Containers
heapq â Heap queue algorithm
bisect â Array bisection algorithm
array â Efficient arrays of numeric values
weakref â Weak references
types â Dynamic type creation and names for built-in types
copy â Shallow and deep copy operations
pprint â Data pretty printer
reprlib â Alternate repr() implementation
enum â Support for enumerations
graphlib â Functionality to operate with graph-like structures
Numeric and Mathematical Modules
numbers â Numeric abstract base classes
math â Mathematical functions
cmath â Mathematical functions for complex numbers
decimal â Decimal fixed-point and floating-point arithmetic
fractions â Rational numbers
random â Generate pseudo-random numbers
statistics â Mathematical statistics functions
Functional Programming Modules
itertools â Functions creating iterators for efficient looping
functools â Higher-order functions and operations on callable objects
operator â Standard operators as functions
File and Directory Access
pathlib â Object-oriented filesystem paths
os.path â Common pathname manipulations
stat â Interpreting stat() results
filecmp â File and Directory Comparisons
tempfile â Generate temporary files and directories
glob â Unix style pathname pattern expansion
fnmatch â Unix filename pattern matching
linecache â Random access to text lines
shutil â High-level file operations
Data Persistence
pickle â Python object serialization
copyreg â Register pickle support functions
shelve â Python object persistence
marshal â Internal Python object serialization
dbm â Interfaces to Unix âdatabasesâ
sqlite3 â DB-API 2.0 interface for SQLite databases
Data Compression and Archiving
zlib â Compression compatible with gzip
gzip â Support for gzip files
bz2 â Support for bzip2 compression
lzma â Compression using the LZMA algorithm
zipfile â Work with ZIP archives
tarfile â Read and write tar archive files
File Formats
csv â CSV File Reading and Writing
configparser â Configuration file parser
tomllib â Parse TOML files
netrc â netrc file processing
plistlib â Generate and parse Apple .plist files
Cryptographic Services
hashlib â Secure hashes and message digests
hmac â Keyed-Hashing for Message Authentication
secrets â Generate secure random numbers for managing secrets
Generic Operating System Services
os â Miscellaneous operating system interfaces
io â Core tools for working with streams
time â Time access and conversions
logging â Logging facility for Python
logging.config â Logging configuration
logging.handlers â Logging handlers
platform â
Access to underlying platformâs identifying data
errno â Standard errno system symbols
ctypes â A foreign function library for Python
Command-line interface libraries
argparse â Parser for command-line options, arguments and subcommands
optparse â Parser for command line options
getpass â Portable password input
fileinput â Iterate over lines from multiple input streams
curses â Terminal handling for character-cell displays
curses.textpad â Text input widget for curses programs
curses.ascii â Utilities for ASCII characters
curses.panel â A panel stack extension for curses
cmd â Support for line-oriented command interpreters
Concurrent Execution
threading â Thread-based parallelism
multiprocessing â Process-based parallelism
multiprocessing.shared_memory â Shared memory for direct access across processes
The concurrent package
concurrent.futures â Launching parallel tasks
subprocess â Subprocess management
sched â Event scheduler
queue â A synchronized queue class
contextvars â Context Variables
_thread â Low-level threading API
Networking and Interprocess Communication
asyncio â Asynchronous I/O
socket â Low-level networking interface
ssl â TLS/SSL wrapper for socket objects
select â Waiting for I/O completion
selectors â High-level I/O multiplexing
signal â Set handlers for asynchronous events
mmap â Memory-mapped file support
Internet Data Handling
email â An email and MIME handling package
json â JSON encoder and decoder
mailbox â Manipulate mailboxes in various formats
mimetypes â Map filenames to MIME types
base64 â Base16, Base32, Base64, Base85 Data Encodings
binascii â Convert between binary and ASCII
quopri â Encode and decode MIME quoted-printable data
Structured Markup Processing Tools
html â HyperText Markup Language support
html.parser â Simple HTML and XHTML parser
html.entities â Definitions of HTML general entities
XML Processing Modules
xml.etree.ElementTree â The ElementTree XML API
xml.dom â The Document Object Model API
xml.dom.minidom â Minimal DOM implementation
xml.dom.pulldom â Support for building partial DOM trees
xml.sax â Support for SAX2 parsers
xml.sax.handler â Base classes for SAX handlers
xml.sax.saxutils â SAX Utilities
xml.sax.xmlreader â Interface for XML parsers
xml.parsers.expat â Fast XML parsing using Expat
Internet Protocols and Support
webbrowser â Convenient web-browser controller
wsgiref â WSGI Utilities and Reference Implementation
urllib â URL handling modules
urllib.request â Extensible library for opening URLs
urllib.response â Response classes used by urllib
urllib.parse â Parse URLs into components
urllib.error â Exception classes raised by urllib.request
urllib.robotparser â
Parser for robots.txt
http â HTTP modules
http.client â HTTP protocol client
ftplib â FTP protocol client
poplib â POP3 protocol client
imaplib â IMAP4 protocol client
smtplib â SMTP protocol client
uuid â UUID objects according to RFC 4122
socketserver â A framework for network servers
http.server â HTTP servers
http.cookies â HTTP state management
http.cookiejar â Cookie handling for HTTP clients
xmlrpc â XMLRPC server and client modules
xmlrpc.client â XML-RPC client access
xmlrpc.server â Basic XML-RPC servers
ipaddress â IPv4/IPv6 manipulation library
Multimedia Services
wave â Read and write WAV files
colorsys â Conversions between color systems
Internationalization
gettext â Multilingual internationalization services
locale â Internationalization services
Graphical user interfaces with Tk
tkinter â Python interface to Tcl/Tk
tkinter.colorchooser â Color choosing dialog
tkinter.font â Tkinter font wrapper
Tkinter Dialogs
tkinter.messagebox â Tkinter message prompts
tkinter.scrolledtext â Scrolled Text Widget
tkinter.dnd â Drag and drop support
tkinter.ttk â Tk themed widgets
IDLE â Python editor and shell
turtle â Turtle graphics
Development Tools
typing â Support for type hints
pydoc â Documentation generator and online help system
Python Development Mode
doctest â Test interactive Python examples
unittest â Unit testing framework
unittest.mock â mock object library
unittest.mock â getting started
test â Regression tests package for Python
test.support â Utilities for the Python test suite
test.support.socket_helper â Utilities for socket tests
test.support.script_helper â Utilities for the Python execution tests
test.support.bytecode_helper â Support tools for testing correct bytecode generation
test.support.threading_helper â Utilities for threading tests
test.support.os_helper â Utilities for os tests
test.support.import_helper â Utilities for import tests
test.support.warnings_helper â Utilities for warnings tests
Debugging and Profiling
Audit events table
bdb â Debugger framework
faulthandler â Dump the Python traceback
pdb â The Python Debugger
The Python Profilers
timeit â Measure execution time of small code snippets
trace â Trace or track Python statement execution
tracemalloc â Trace memory allocations
Software Packaging and Distribution
ensurepip â Bootstrapping the pip installer
venv â Creation of virtual environments
zipapp â Manage executable Python zip archives
Python Runtime Services
sys â System-specific parameters and functions
sys.monitoring â Execution event monitoring
sysconfig â Provide access to Pythonâs configuration information
builtins â Built-in objects
__main__ â Top-level code environment
warnings â Warning control
dataclasses â Data Classes
contextlib â Utilities for with-statement contexts
abc â Abstract Base Classes
atexit â Exit handlers
traceback â Print or retrieve a stack traceback
__future__ â Future statement definitions
gc â Garbage Collector interface
inspect â Inspect live objects
site â Site-specific configuration hook
Custom Python Interpreters
code â Interpreter base classes
codeop â Compile Python code
Importing Modules
zipimport â Import modules from Zip archives
pkgutil â Package extension utility
modulefinder â Find modules used by a script
runpy â Locating and executing Python modules
importlib â The implementation of import
importlib.resources â Package resource reading, opening and access
importlib.resources.abc â Abstract base classes for resources
importlib.metadata â Accessing package metadata
The initialization of the sys.path module search path
Python Language Services
ast â Abstract Syntax Trees
symtable â Access to the compilerâs symbol tables
token â Constants used with Python parse trees
keyword â Testing for Python keywords
tokenize â Tokenizer for Python source
tabnanny â Detection of ambiguous indentation
pyclbr â Python module browser support
py_compile â Compile Python source files
compileall â Byte-compile Python libraries
dis â Disassembler for Python bytecode
pickletools â Tools for pickle developers
MS Windows Specific Services
msvcrt â Useful routines from the MS VC++ runtime
winreg â Windows registry access
winsound â Sound-playing interface for Windows
Unix-specific services
shlex â Simple lexical analysis
posix â The most common POSIX system calls
pwd â The password database
grp â The group database
termios â POSIX style tty control
tty â Terminal control functions
pty â Pseudo-terminal utilities
fcntl â The fcntl and ioctl system calls
resource â Resource usage information
syslog â Unix syslog library routines
Modules command-line interface (CLI)
Superseded Modules
getopt â C-style parser for command line options
Removed Modules
Security Considerations
Previous topic
10. Full Grammar specification
Next topic
Introduction
This page
Report a bug
Show source
Â«
Navigation
index
modules |
next |
previous |
Python »
3.13.7 Documentation »
The Python Standard Library
|
Theme
Auto
Light
Dark
|
© Copyright 2001-2025, Python Software Foundation.
This page is licensed under the Python Software Foundation License Version 2.
Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.
See History and License for more information.
The Python Software Foundation is a non-profit corporation.
Please donate.
Last updated on Sep 25, 2025 (18:06 UTC).
Found a bug?
Created using Sphinx 8.2.3.