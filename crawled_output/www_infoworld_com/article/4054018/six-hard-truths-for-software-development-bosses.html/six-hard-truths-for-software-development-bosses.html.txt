Six hard truths for software development bosses | InfoWorld
Topics
Spotlight: IT CareersVideosNewslettersResources
AboutAbout UsAdvertiseContact UsEditorial Ethics PolicyFoundry CareersNewslettersContribute to InfoWorldReprintsPoliciesTerms of ServicePrivacy PolicyCookie PolicyCopyright NoticeMember PreferencesAbout AdChoicesYour California Privacy RightsOur NetworkCIOComputerworldCSONetwork WorldMoreNewsFeaturesBlogsBrandPostsEventsVideosEnterprise Buyer’s Guides
Close
AnalyticsArtificial IntelligenceGenerative AICareersCloud ComputingData ManagementDatabasesEmerging TechnologyTechnology IndustrySecuritySoftware Development Microsoft .NETDevelopment ToolsDevopsOpen SourceProgramming LanguagesJavaJavaScriptPythonIT LeadershipEnterprise Buyer’s Guides
Back
Close
Back
Close
Popular Topics
Artificial IntelligenceCloud ComputingData ManagementSoftware Development
Search
Topics
Spotlight: IT CareersVideosNewslettersResourcesAboutPoliciesOur NetworkMore
Back
Topics
AnalyticsArtificial IntelligenceGenerative AICareersCloud ComputingData ManagementDatabasesEmerging TechnologyTechnology IndustrySecuritySoftware DevelopmentMicrosoft .NETDevelopment ToolsDevopsOpen SourceProgramming LanguagesJavaJavaScriptPythonIT LeadershipEnterprise Buyer’s Guides
Back
AboutAbout UsAdvertiseContact UsEditorial Ethics PolicyFoundry CareersNewslettersContribute to InfoWorldReprints
Back
PoliciesTerms of ServicePrivacy PolicyCookie PolicyCopyright NoticeMember PreferencesAbout AdChoicesYour California Privacy Rights
Back
Our NetworkCIOComputerworldCSONetwork World
Back
MoreNewsFeaturesBlogsBrandPostsEventsVideosEnterprise Buyer’s Guides
Home
Blogs
Rubber Duck Reflections
Six hard truths for software development bosses
by									Nick Hodges
Six hard truths for software development bosses
opinion
Sep 10, 20255 minsCareersDeveloperIT Leadership
In the end, managing developers isn’t about code or process. It’s about understanding the invisible weight of your presence, your words, and your silence.
Credit: 															Andrii Yalanskyi / Shutterstock
It’s tough out there for software development managers. The job is not easy. Managing people is hard enough, but managing people with technical skills who do work that is very difficult to measure is truly challenging.
I’ve done it. And while I can’t claim to be some kind of super-manager, I can claim to have learned a few difficult truths along the way. Some of them are about managing people in general, and some are about managing developers in particular.
Here are six hard-won insights that might prove useful to you if you find yourself the boss of a development team.
Your presence changes everything
This is often difficult for managers to comprehend. The fact that you are in the room or on a Zoom call with your subordinates has a significant impact on everyone present. Everyone behaves differently when the boss is around. Everyone. And you, as a boss, need to realize this. There are two things to realize here. Firstly, when you are present, people will change who they are and what they say. Secondly, you should consider that fact when deciding whether to be in the room.
It might just be that your presence will suppress the free flow of ideas. Maybe a good idea that needs refining without you there will never be voiced. Maybe people will be hesitant to disagree with your bad idea. You need to be aware of all the subtleties that may or may not happen because you are there.
People will take what you say seriously
Bosses need to realize that what they say, even comments that you might think are flippant and not meant to be taken seriously, will be taken seriously. I have seen entire projects started and completed based on an offhand comment the boss made in a meeting. She was shocked to discover that what she thought was a crazy, casual idea was taken seriously. I’ve seen policies written and followed based on similar situations.
Small compliments can make someone’s day or week. Small negative comments can ruin a day or even send someone into a tailspin. Be careful what you say around your subordinates—they just might believe you.
Your silence will speak volumes
The other side of that coin is that your silence and non-action can have profound effects. Maybe you space out in a meeting and miss a question. The team might think you blew them off and left the great idea hanging. Maybe you forgot to answer an email. Maybe you had bigger fish to fry and you were a bit short and dismissive of an approach by a direct report. Small lapses can be easily misconstrued by your team.
Failing to praise good work can be discouraging. Failing to comment on sub-par work can perpetuate it. Your words, and your lack of words, have power. Be careful about what you don’t say around your team—they just might fill the void with wild conclusions.
Everyone will be a little afraid of you
You are the boss. You have the power to promote, demote, and award raises and bonuses. These powers are important, and people will see you in that light. Even your best attempts at being cordial, friendly, and collegial will not overcome the slight apprehension your authority will engender. Your mood on any given day will be noticed and tracked.
Your technical skills don’t matter as much as you’d like
Sure, you are a manager because you were a great programmer and you wanted more responsibility. But you aren’t being paid to code anymore. That’s what your team is paid to do, so you should let them do it.
You can and should have input into technical decisions and design decisions, but your team will want to be the ones driving what direction things take and how things get done. If you constantly make all the decisions, you will suck all the oxygen out of the room. Your job is no longer to write the best code and design the perfect system; it’s to create the environment where your people can do that.
Your people will want to feel empowered to do the work and set the direction. Let them.
There is nothing you can do about all this
Perhaps the hardest thing to accept here is that you can’t do anything about any of this—that all these truths will impact you despite your best efforts. You can’t be in the room and not be in the room. You can’t say things without your words having some meaning that you might not intend. You can no longer be the technical lead. No matter how hard you might try to be liked and respected and collegial, the team will still view you with a modicum of fear and apprehension.
Try as you might, you can’t stop being a manager. In the end, managing developers isn’t about code or process. It’s about understanding the invisible weight of your presence, your words, and your silence.
Related content
opinion
How immutability tamed the Wild West By Nick Hodges
Sep 24, 2025 5 mins
Careers
Developer
Software Development
news
Replit update sparks developers’ dissatisfaction over pricing By Anirban Ghoshal
Sep 19, 2025 4 mins
Artificial Intelligence
Developer
opinion
Software developers aren’t buying it By Nick Hodges
Sep 17, 2025 5 mins
Careers
Developer
Development Tools
opinion
More hardware won’t fix bad engineering By Matt Asay
Sep 15, 2025 6 mins
Developer
Engineer
Technology Industry
Other Sections
Resources
Videos
Spotlight: IT Careers
by
Nick Hodges
Follow Nick Hodges on X
Follow Nick Hodges on LinkedIn
Nick has a BA in classical languages from Carleton College and an MS in information technology management from the Naval Postgraduate School. In his career, he has been a busboy, a cook, a caddie, a telemarketer (for which he apologizes), an office manager, a high school teacher, a naval intelligence officer, a software developer, a product manager, and a software development manager. In addition, he is a former Delphi Product Manager and Delphi R&D Team Manager and the author of Coding in Delphi. He is a passionate Minnesota sports fan—especially the Timberwolves—as he grew up and went to college in the Land of 10,000 Lakes. He currently lives in West Chester, PA.
More from this author
opinionSeven little habits for writing better code Sep 3, 2025 7 minsopinionThe discipline of great code Aug 27, 2025 4 minsopinionYour code is more strongly coupled than you think Aug 20, 2025 7 minsopinionFive ways your code is coupled, for better or worse Aug 13, 2025 8 minsopinionHow to measure coupled code Aug 6, 2025 4 minsopinionHow to write a good bug report Jul 30, 2025 6 minsopinionAre coding interviews necessary? Jul 23, 2025 5 minsopinionDatabase design tips for developers Jul 16, 2025 12 mins
Show me morePopularArticlesVideos
news
Microsoft Marketplace opens for AI apps, agents By Paul KrillSep 25, 20252 mins
Generative AIMicrosoft .NETMicrosoft Azure
news
GitHub Copilot-backed app modernization available for Java, .NET By Paul KrillSep 25, 20251 min
Generative AIGitHubJava
how-to
Introduction to Java records: Simplified data-centric programming in Java By Rafael del NeroSep 25, 202510 mins
JavaProgramming LanguagesSoftware Development
video
Python 3.14's live debugging interface Sep 23, 20254 mins
Python
video
Easier Chrome browser automation with PyDoll Sep 16, 20254 mins
Python
video
How to use Rust workspaces to speed up compile times Sep 9, 20253 mins
Python
Sponsored Links
Secure AI by Design: Unleash the power of AI and keep applications, usage and data secure.
Solve your most complex IT challenges with solutions that simplify your modernization journey.
Empower your cybersecurity team with expert insights from Palo Alto Networks.
About
About Us
Advertise
Contact Us
Editorial Ethics Policy
Foundry Careers
Reprints
Newsletters
BrandPosts
Policies
Terms of Service
Privacy Policy
Cookie Policy
Copyright Notice
Member Preferences
About AdChoices
Your California Privacy Rights
Privacy Settings
Our Network
CIO
Computerworld
CSO
Network World
FacebookXYouTubeGoogle NewsLinkedIn
© 2025
FoundryCo, Inc. All Rights Reserved.