C++ Commitee Prefers Bjarne Profiles Over Baxter Rustification - Slashdot
Slashdot
Stories
Firehose
All
Popular
Polls
Software
Thought Leadership
Submit
Search Slashdot
Login
or
Sign up
Topics:
Devices
Build
Entertainment
Technology
Open Source
Science
YRO
Follow us:
RSS
Facebook
LinkedIn
Twitter
Youtube
Mastodon
BlueskyBluesky
Please create an account to participate in the Slashdot moderation system
Nickname:
Password:
Public Terminal
Forgot your password?
Close
binspamdupenotthebestofftopicslownewsdaystalestupid
freshfunnyinsightfulinterestingmaybe
offtopicflamebaittrollredundantoverrated
insightfulinterestinginformativefunnyunderrated
descriptive
typodupeerror
MongoDB Atlas: Multi-cloud, modern database on AWS, Azure, and Google Cloud. Get access to our most high performance version ever, with faster and easier scaling at lower cost.
×
179341278
submission
Submission
+
-
C++ Commitee Prefers Bjarne Profiles Over Baxter Rustification
Submitted
by
robinsrowe
on Thursday September 18, 2025 @03:14AM
robinsrowe writes: No surprise, the C++ Committee is still trending toward C++ Profiles. It would have been a huge change had the Committee embraced Baxter's Rustification memory safety proposal. Would mean banning pointers. Making the C++ language much like Rust would deeply break every C++ program in the world.
Article at TheRegister: “Rust-style safety model for C++ 'rejected' as profiles take priority” https://www.theregister.com/20...The C++ standards committee abandoned a detailed proposal to create a rigorously safe subset of the language, according to the proposal's co-author, despite continuing anxiety about memory safety.
Article at Le Monde (in French): “The C++ standards committee rejected a proposal to create a secure subset of the language. Members prefer to focus on the Profiles framework pushed by C++ creator Bjarne Stroustrup.” https://www.lemondeinformatiqu..."If you mark your code to apply a Profile, some features of the C/C++ language will stop working," he says. There is also a small problem, these guidelines were not integrated into version 26 of C++, but simply into a white paper.
The controversy surrounding the security of C++ opens the door to another solution with the use of another language. The first advocated by several American authorities is Rust, but there is also Google's experimental Carbon project. Unveiled in 2022, it also aims to modernize C++.
If Profiles are eventually adopted, it may Balkanize C++ by dividing C++ into safe and unsafe subsets. C++ Profiles won't fix the issue of making C pointers memory safe. A proposal to implement pointer memory safety is TrapC, but for the C language, not C++. Some say make the switch to Rust, but that doesn't solve the safety problems lurking in billions of lines of existing C/C++ code.
This discussion was created for logged-in users only, but now has been archived.
No new comments can be posted.
C++ Commitee Prefers Bjarne Profiles Over Baxter Rustification
More
Login
C++ Commitee Prefers Bjarne Profiles Over Baxter Rustification
Archived Discussion
Load All Comments
Full
Abbreviated
Hidden
/Sea
Score:
5
4
3
2
1
0
-1
More
Login
Nickname:
Password:
Public Terminal
Forgot your password?
Close
Close
Search 0 Comments
Log In/Create an Account
Comments Filter:
All
Insightful
Informative
Interesting
Funny
The Fine Print: The following comments are owned by whoever posted them.
We are not responsible for them in any way.
There may be more comments in this discussion. Without JavaScript enabled, you might want to turn on Classic Discussion System in your preferences instead.
Slashdot Top Deals
Slashdot
Archived Discussion
Moderate
Moderator Help
Delete
Get more comments
Submit Story
"The eleventh commandment was `Thou Shalt Compute' or `Thou Shalt Not
Compute' -- I forget which."
-- Epigrams in Programming, ACM SIGPLAN Sept. 1982
FAQ
Story Archive
Hall of Fame
Advertising
Terms
Privacy Statement
About
Feedback
Mobile View
Blog
Do Not Sell or Share My Personal Information
Copyright © 2025 Slashdot Media. All Rights Reserved.
×
Close
Close
Slashdot
Working...