Deploy modern JVM apps - Java, Scala, Clojure | Heroku
Search overlay panel for performing site-wide searches
Search For:
Close
Salesforce (Heroku) Recognized as a Leader. Learn More!
Search
Open Search Popup
Account menu
DashboardDatabasesDataclipsElementsDocumentationSupport
Login
Sign Up
Products
Products
Discover Heroku’s AI PaaS (Platform as a Service), designed for effortless app deployment and scaling. Explore our cloud application platform features, reliable managed data services, and a robust ecosystem to power your modern applications.
Heroku PlatformDeploy, manage, and scale apps on Heroku, an AI PaaS based on a managed container system.Heroku AIBuild intelligent applications with managed inference and agents, MCP, and more.Heroku Data ServicesSimplify your data management with Heroku’s fully managed cloud databases and data services.Heroku EnterpriseThe Heroku experience developers love, with the enterprise features large companies need.Heroku SuccessExplore Heroku’s support options from Standard to Signature, with resources for developers and partners.Heroku Elements MarketplaceAccelerate your app development with our ecosystem of add-ons, integrations, and buildpacks.
Custom Agentforce Actions with Heroku AppLink
Join us for a deep dive into custom Agentforce actions with Heroku AppLink, a new integration solution that bridges the gap between powerful custom Heroku apps and your Salesforce ecosystem.
Developers
Developers
With Heroku's flexible app platform, you can focus on building apps, not infrastructure. Benefit from a meticulously designed developer experience, a polyglot platform supporting your favorite languages, and innovative AI PaaS features to enhance your development workflow.
Dev CenterDive into our comprehensive documentation and guides. Learn about building, deploying, managing, and scaling your apps.Languages
Python.NETJavaNode.jsGoPHPRubyScalaClojure
Custom Agentforce Actions with Heroku AppLink
Join us for a deep dive into custom Agentforce actions with Heroku AppLink, a new integration solution that bridges the gap between powerful custom Heroku apps and your Salesforce ecosystem.
Customers
Customers
Discover how companies in diverse industries like Healthcare, Entertainment, Automotive, Retail, FinTech, and more achieve growth and foster innovation with our powerful cloud application platform. Learn how they leverage Heroku’s AI PaaS for cutting-edge solutions.
Customer StoriesHeroku in action: See how organizations of all sizes and industries are succeeding with Heroku.Community StoriesExplore real-world experiences and perspectives on Heroku from developers and communities online.
Customer Story: Watch Duty
Discover how Watch Duty used Heroku to provide real-time wildfire alerts, achieving 100% uptime and scaling effortlessly during crises.
PricingResources
ResourcesLearn more about Heroku's AI PaaS and stay up to date on all Heroku announcements. Gain insights from our team through insightful content and discover how to leverage our platform effectively.
BlogStay up-to-date on Heroku news, important product releases, and valuable insights from the Heroku team.What is Heroku?Learn how Heroku’s AI PaaS simplifies app development, deployment, and scaling.EventsFind Heroku at an event near you! Explore our calendar of tech conferences and meetups.PartnersFor Consultants, ISVs, and technical solution providers looking to grow their business with pro-code solutions.Compliance CenterHeroku is a platform you can trust. Explore our compliance certifications and security measures.Help CenterFind answers to your questions in the Help Center. Browse FAQs, articles, and get support.
Latest News from the Heroku Blog
Securing Salesforce Integrations with Heroku AppLink
Sept 10 - by David Baliles
Improve your security model with Heroku AppLink, a managed bridge between Salesforce and Heroku that improves risk and governance.
Deploy modern JVM-based apps
Polyglot JVM Platform for modern apps
DeployDeploy using Git, GitHub or directly from your CI system using precompiled builds with tools like SBT or Maven. Regardless of how your source is delivered, Heroku runs it in a dyno – a smart, secure, curated container with your choice of JVM version.
ManageManage your portfolio of apps in a single view using a straightforward Dashboard. Instantly see what version of your app is deployed and rollback to a stable version without recompiling. Manage your app’s environment specific configurations with external config vars.
ScaleHeroku’s horizontally scalable, share-nothing architecture is perfect for apps built with modern frameworks like Play, that are async, stateless and non-blocking. Heroku makes scaling out or up as simple as dragging a slider in the Dashboard or using a single CLI command.
MonitorView detailed memory and garbage collection metrics in your Dashboard with JVM runtime metrics. Connect remote debuggers and inspection tools like VisualVM, or generate heap and thread dumps on demand to help track down even the most elusive bugs.
Get started now with Java on Heroku
Sign Up
Java/SpringDeploying Java apps with HerokuInitialize the local Git repositoryspring init initializes the Java projectSpecify the Java versionCreate a Controller to respond to requests with “Hello Heroku!”Create and deploy the app to HerokuWe’re live! curl https://morning-earth-85743-7d592a8d2dd3.herokuapp.comView Java Docs
Scala/PlayDeploying Scala apps with HerokuInitialize the local Git repositorysbt new initializes the Scala projectSpecify the Java versionGenerate a Play! application secretConfigure Play! allowed hosts filterCreate and deploy the app to HerokuWe’re live! curl https://radiant-shelf-38588-bdcb08e1f9ef.herokuapp.comView Scala Docs
ClojureDeploying Clojure apps with HerokuInitialize the local Git repositorylein new initializes the Clojure projectSpecify the Java versionCreate and deploy the app to HerokuWe’re live! curl https://aqueous-beyond-75547-a50d4a181c24.herokuapp.comView Clojure Docs
Why JVM Languages on Heroku?
Choice of language and frameworkBuild microservices with Groovy and Ratpack, reactive APIs using Scala and Play, web apps with minimal fuss using Spark and high performance web apps with Spring Boot/Spring Cloud. Heroku provides buildpacks for Java, Scala, Play, Clojure, Gradle and Grails.Java on Heroku
Curated language stacks, intelligent defaultsGet early access to the latest JDK as soon as it’s available. Heroku runs your app on the latest stable version, Java 8, by default. Heroku sets intelligent defaults for your max heap size and stack size based on the size of the dyno smart container your app is running in.Heroku’s Java support docs
Extend your apps with 200+ Add-onsHeroku add-ons like CloudAMQP, Postgres, Redis, Treasure Data (Hadoop as a service) and GrapheneDB (Neo4J as a service) allow you to extend, manage and deploy modern JVM-based applications without operational overhead.All Heroku Add-ons
Built-in debugging and inspection toolsHeroku’s Metrics dashboard helps you identify many kinds of performance problems, while key language specific metrics, like garbage collection activity and memory usage, are included in Heroku’s Language runtime metrics dashboard. After you’ve identified an issue, you can use Heroku Exec to connect to a running dyno via SSH.Language runtime metrics docs
Java on Heroku
“Whether you are a business or a hobby developer, the JVM offers a mature and reliable platform to power your apps. You can choose the programming language that works best for the task at hand because of the ployglot nature of the JVM. Heroku offers extensive support for this ecosystem, enabling you to operate your business or side-project with confidence.”
Manuel Fuchs
JVM Languages Owner
@Malax
DocumentationWAR DeploymentDeploying Java Applications with the Heroku Maven PluginDeploying Scala and Play Applications with the Heroku sbt PluginDeploying Gradle Apps on HerokuDeploying Kotlin Apps on HerokuTroubleshooting Memory Issues in Java ApplicationsHeroku ExecLanguage Runtime Metrics
Tutorials & HelpGetting Started with Clojure on HerokuGetting Started with Java on HerokuGetting Started with Scala/Play on HerokuGetting Started with Kotlin on Heroku
Popular Add-onsAdd-ons are fully-managed services, integrated for use with Heroku, which provide services for logging, caching, monitoring, persistence and more. View All Add-ons
Heroku KafkaData Stores
Heroku PostgresData Stores
New Relic APMMonitoring
SnykSecurity
RollbarErrors and Exceptions
Heroku Java Support FAQ
How does Heroku manage Java dependencies?
Heroku automates Java dependency management by using your project’s build tool. While the default build system is Maven, Heroku also provides full support for Gradle. During deployment, the buildpack detects your build file (pom.xml for Maven or build.gradle for Gradle) and automatically runs a build. This process downloads all the required dependencies from their respective repositories (like Maven Central) before compiling your code, ensuring a reliable and repeatable build.
What is the fastest way to deploy a sample Java application to Heroku?
The fastest way to get started is by following the official Getting Started on Heroku with Java guide in the Heroku Dev Center. This tutorial provides a sample application and walks you through the steps of cloning the repository, provisioning a Heroku app, and deploying your code with a simple git push heroku main command.
Which Java versions are supported on Heroku?
Heroku’s policy is to support all Java versions that are not End-of-Life (EOL), including all current non-EOL Long-Term Support (LTS) releases of the OpenJDK.You can specify your desired Java version by creating a system.properties file in the root of your application and setting the java.runtime.version property. For example, to use Java 21, your file would contain: java.runtime.version=21.It is strongly recommended to always explicitly configure the required version for your application. If you don’t, the default version will be used, which can change over time and may cause future builds of your application to fail.
What are the most popular Java frameworks to deploy on Heroku?
Heroku supports a wide variety of frameworks from the Java ecosystem, from established leaders to modern, cloud-native options. The most popular choice is Spring Boot, which is excellent for building everything from monolithic applications to microservices. Additionally, cloud-native frameworks like Quarkus and Micronaut are increasingly popular on the platform due to their fast startup times and low memory footprints.
Does Heroku support both Maven and Gradle for building Java applications?
Yes. Heroku provides full support for both Maven and Gradle, with Maven being the default build tool for Java applications. During deployment, the buildpack automatically detects which build tool your project is using by looking for either a pom.xml file (for Maven) or a build.gradle file (for Gradle) in your project’s root directory. This auto-detection means you don’t need any special configuration to use your preferred build tool.
Do I need to compile my Java code and build a JAR file before deploying to Heroku?
No. For a standard deployment, you should push your Java source code directly to Heroku. The platform is designed to handle the entire build process for you. When you deploy, the Java buildpack runs your build tool (Maven or Gradle) to compile your code and create a runnable application. This source-based workflow ensures a clean and repeatable build every time and means you don’t need to commit compiled artifacts to your Git repository.For workflows that require building on your own infrastructure, Heroku also provides tools to deploy pre-built JAR or WAR files directly.
Q: Can I deploy applications written in other JVM languages like Scala, Kotlin, or Clojure on Heroku?
Yes. Heroku’s Java support is fundamentally support for the Java Virtual Machine (JVM). This means that any language that compiles to JVM bytecode and uses a standard build tool like Maven, Gradle, sbt, or Leiningen can be deployed on the platform. This includes popular JVM languages like Scala, Clojure, and Kotlin. You can manage your project with a pom.xml or build.gradle file just as you would with a standard Java application, and Heroku’s buildpack will handle the rest.
Ready to Get Started?Stay focused on building great data-driven applications and let Heroku tackle the rest.Sign Up Now
Products
Heroku Platform
Heroku AI
Heroku Managed Inference and Agents
pgvector for Heroku Postgres
MCP on Heroku
Heroku Data Services
Heroku Postgres
Heroku Key-Value Store
Apache Kafka on Heroku
Heroku Enterprise
Heroku Private Spaces
Heroku Connect
Heroku Shield
Heroku Success
Heroku Teams
Elements Marketplace
Languages
Python
.NET
Java
Node.js
Go
PHP
Ruby
Scala
Clojure
Resources
Dev Center
Training & Education
Get Started
Pricing
Blog
Customers
Partners
Compliance Center
Solutions
Podcasts
About Us
What is Heroku?
Heroku & Salesforce
Careers
Help Center
Status
Contact
Rss
X-twitter-square
Github
Linkedin
日本語
Legal
Terms of Service
Privacy Information
Responsible Disclosure
Trust
Contact
Cookie Preferences
Your Privacy Choices
Sitemap
Legal
Terms of Service
Privacy Information
Responsible Disclosure
Trust
Contact
Cookie Preferences
Your Privacy Choices
Sitemap
© Copyright 2025 Salesforce, Inc. All rights reserved. Various trademarks held by their respective owners. Salesforce Tower, 415 Mission Street, 3rd Floor, San Francisco, CA 94105, United States