Deploy and Scale Python & Django in the Cloud | Heroku
Search overlay panel for performing site-wide searches
Search For:
Close
Salesforce (Heroku) Recognized as a Leader. Learn More!
Search
Open Search Popup
Account menu
DashboardDatabasesDataclipsElementsDocumentationSupport
Login
Sign Up
Products
Products
Discover Heroku’s AI PaaS (Platform as a Service), designed for effortless app deployment and scaling. Explore our cloud application platform features, reliable managed data services, and a robust ecosystem to power your modern applications.
Heroku PlatformDeploy, manage, and scale apps on Heroku, an AI PaaS based on a managed container system.Heroku AIBuild intelligent applications with managed inference and agents, MCP, and more.Heroku Data ServicesSimplify your data management with Heroku’s fully managed cloud databases and data services.Heroku EnterpriseThe Heroku experience developers love, with the enterprise features large companies need.Heroku SuccessExplore Heroku’s support options from Standard to Signature, with resources for developers and partners.Heroku Elements MarketplaceAccelerate your app development with our ecosystem of add-ons, integrations, and buildpacks.
Custom Agentforce Actions with Heroku AppLink
Join us for a deep dive into custom Agentforce actions with Heroku AppLink, a new integration solution that bridges the gap between powerful custom Heroku apps and your Salesforce ecosystem.
Developers
Developers
With Heroku's flexible app platform, you can focus on building apps, not infrastructure. Benefit from a meticulously designed developer experience, a polyglot platform supporting your favorite languages, and innovative AI PaaS features to enhance your development workflow.
Dev CenterDive into our comprehensive documentation and guides. Learn about building, deploying, managing, and scaling your apps.Languages
Python.NETJavaNode.jsGoPHPRubyScalaClojure
Custom Agentforce Actions with Heroku AppLink
Join us for a deep dive into custom Agentforce actions with Heroku AppLink, a new integration solution that bridges the gap between powerful custom Heroku apps and your Salesforce ecosystem.
Customers
Customers
Discover how companies in diverse industries like Healthcare, Entertainment, Automotive, Retail, FinTech, and more achieve growth and foster innovation with our powerful cloud application platform. Learn how they leverage Heroku’s AI PaaS for cutting-edge solutions.
Customer StoriesHeroku in action: See how organizations of all sizes and industries are succeeding with Heroku.Community StoriesExplore real-world experiences and perspectives on Heroku from developers and communities online.
Customer Story: Watch Duty
Discover how Watch Duty used Heroku to provide real-time wildfire alerts, achieving 100% uptime and scaling effortlessly during crises.
PricingResources
ResourcesLearn more about Heroku's AI PaaS and stay up to date on all Heroku announcements. Gain insights from our team through insightful content and discover how to leverage our platform effectively.
BlogStay up-to-date on Heroku news, important product releases, and valuable insights from the Heroku team.What is Heroku?Learn how Heroku’s AI PaaS simplifies app development, deployment, and scaling.EventsFind Heroku at an event near you! Explore our calendar of tech conferences and meetups.PartnersFor Consultants, ISVs, and technical solution providers looking to grow their business with pro-code solutions.Compliance CenterHeroku is a platform you can trust. Explore our compliance certifications and security measures.Help CenterFind answers to your questions in the Help Center. Browse FAQs, articles, and get support.
Latest News from the Heroku Blog
Securing Salesforce Integrations with Heroku AppLink
Sept 10 - by David Baliles
Improve your security model with Heroku AppLink, a managed bridge between Salesforce and Heroku that improves risk and governance.
Cloud platform for building Pythonic apps and APIs
The platform for Python that just works
Powerful EcosystemBuild opinionated MVC web apps with Django, powerful APIs with FastAPI, or process background jobs with Celery. Run your apps with Gunicorn, Uvicorn, or any other ASGI/WSGI server – the choice is yours!Python Support on Heroku
Fast DeploysDeploy from Git, your CI system, or on every push to a branch on GitHub. Dependency installs are always consistent with your local environment thanks to transparent support for pip freeze.Getting Started with Python
Easy ScalingHeroku’s stateless architecture is ideal for horizontal scaling of services. Issue a command or drag a slider to add capacity. Using larger dynos? Gunicorn will auto-adjust the number of worker processes it spawns.Scaling Your Dyno Formation
Get started now with Python on Heroku
Sign Up
Deploying Python apps with Herokuuv init initializes the Python project and Git repositoryAdd Flask as a project dependencyUpdate main.py to respond to requests with “Hello Heroku!”Create a Procfile to declare the web processCreate and deploy the app to HerokuWe’re live! curl https://stormy-escarpment-95361-6c245e7b263a.herokuapp.comView Python Docs
Heroku gives you simple, easy ways to…
Be in the FlowCollaborating easily, testing early, and deploying often are all part of Heroku Flow: Heroku Pipelines streamline your workflow, Heroku Review Apps auto-deploy your PRs, Heroku CI tests anything you push to GitHub, and much more.Continuous Delivery on Heroku
Architect and scaleThe Heroku runtime makes it easy to deploy loosely coupled services that run in lightweight, isolated Linux containers known as dynos. The architecture of the Heroku platform encourages best practices that ensure durability and scalability.Heroku Platform Principles
Extend and growExtend your app with relational databases like PostgreSQL or MySQL, leverage NoSQL data stores such as Redis® or MongoDB, stream events into Apache Kafka or an AMQP server, send emails, monitor your app – with 200+ add-ons, the possibilities are limitless.Heroku Add-ons
Python on Heroku
“As the Zen of Python says, ‘Simple is better than complex’, and that’s what it’s like deploying Python applications to Heroku.”
Ed Morley
Python Language Owner
@edmorley
DocumentationHow Heroku WorksGetting Started with Python on HerokuDeploy an Existing Python App to Heroku
Tutorials & HelpDeploying Python Applications with GunicornUsing RQ (Redis Queue) with PythonUnderstanding Concurrency in Python AppsUsing WebSockets with Python
Heroku Python Support FAQ
How does Heroku manage Python dependencies?
Heroku manages Python dependencies using either pip, Pipenv, Poetry, or uv. When you deploy, the buildpack looks for a requirements.txt, Pipfile.lock, poetry.lock or uv.lock file to determine which package manager to use. The buildpack then installs the exact packages and versions your application needs, creating a predictable and reliable environment.If you don’t have a preference, Heroku recommends managing your Python dependencies with uv. You can get started with uv by following this uv blog post.
What is the fastest way to deploy a sample Python application to Heroku?
The fastest way to get started is by following the official Getting Started on Heroku with Python guide in the Heroku Dev Center. This tutorial provides a sample application and walks you through the steps of setting up a virtual environment, managing dependencies, and deploying your code with a simple git push heroku main command.
Which Python versions are supported on Heroku?
Heroku’s Python support policy is aligned with the official Python Version Lifecycle. All modern, stable versions of Python are supported, but versions are deprecated as they approach upstream end-of-life (EOL), and support for them is removed from the Python buildpack shortly after EOL occurs.You can specify the exact version your app requires by creating a .python-version file in the root of your project.
What are the most popular Python frameworks to deploy on Heroku?
Heroku supports the entire Python web ecosystem. It offers robust support for major frameworks like Django and Flask. Additionally, modern ASGI frameworks like FastAPI are excellent choices for building high-performance APIs on Heroku.
What is a Procfile, and is it required for Python apps?
A Procfile is a simple text file, named Procfile without a file extension, that you place in your project’s root directory to explicitly declare what commands Heroku should run for your application. It allows you to define one or more process types, such as a web process for your web server or a worker process for a background job.For a typical Django or Flask application using the Gunicorn server, a Procfile would look like this:web: gunicorn your_project.wsgi
How should I handle static assets (like CSS and JavaScript) in a Django application on Heroku?
Django does not support serving static files directly in a production environment; a dedicated solution is required. The recommended and most common solution on Heroku is to use the WhiteNoise library.WhiteNoise allows your web application to serve its own static files efficiently in production. During deployment, Heroku’s Python buildpack automatically runs the collectstatic command to gather all your static assets, and WhiteNoise handles the rest. This is the simplest and most reliable method for managing Django static files on Heroku.
Can I run a Python shell or a management command on my running Heroku app?
Yes, you can. This is a common and powerful feature of the Heroku platform, handled by the Heroku CLI. Using the heroku run command, you can start a new instance of your application’s environment (called a one-off dyno) to execute commands. For example, you can open an interactive Python shell with heroku run python or run a Django database migration with heroku run python manage.py migrate. This is extremely useful for debugging, running administrative tasks, and managing your database.You can also get a plain interactive shell by running heroku run bash that will allow you to inspect the contents of your application using common terminal commands such as cat and ls -la.
Can I deploy data science and machine learning models with Python on Heroku?
Yes. You can deploy Python applications that handle a wide range of data science tasks on Heroku dynos. This includes everything from data manipulation and analysis using libraries like Pandas and NumPy, to deploying machine learning models built with Scikit-learn and Statsmodels as web APIs.And for more demanding or production-grade machine learning, Heroku offers dedicated services. Heroku Managed Inference and Agents is specifically designed for deploying and scaling complex models and AI agents with high availability. For large-scale or private compute needs, MCP on Heroku provides a secure and powerful environment.This provides a flexible pathway for your projects. You can begin with standard dynos—a great option for smaller models and prototypes—and then scale up to these dedicated services for serious ML workloads.
Ready to Get Started?Stay focused on building great data-driven applications and let Heroku tackle the rest.Sign Up Now
Products
Heroku Platform
Heroku AI
Heroku Managed Inference and Agents
pgvector for Heroku Postgres
MCP on Heroku
Heroku Data Services
Heroku Postgres
Heroku Key-Value Store
Apache Kafka on Heroku
Heroku Enterprise
Heroku Private Spaces
Heroku Connect
Heroku Shield
Heroku Success
Heroku Teams
Elements Marketplace
Languages
Python
.NET
Java
Node.js
Go
PHP
Ruby
Scala
Clojure
Resources
Dev Center
Training & Education
Get Started
Pricing
Blog
Customers
Partners
Compliance Center
Solutions
Podcasts
About Us
What is Heroku?
Heroku & Salesforce
Careers
Help Center
Status
Contact
Rss
X-twitter-square
Github
Linkedin
日本語
Legal
Terms of Service
Privacy Information
Responsible Disclosure
Trust
Contact
Cookie Preferences
Your Privacy Choices
Sitemap
Legal
Terms of Service
Privacy Information
Responsible Disclosure
Trust
Contact
Cookie Preferences
Your Privacy Choices
Sitemap
© Copyright 2025 Salesforce, Inc. All rights reserved. Various trademarks held by their respective owners. Salesforce Tower, 415 Mission Street, 3rd Floor, San Francisco, CA 94105, United States