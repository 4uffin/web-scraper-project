How We Built a Private, On-Device AI That Runs Entirely in Your Browser - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Gemma Web AI
Posted on Sep 14
How We Built a Private, On-Device AI That Runs Entirely in Your Browser
#ai
#webassembly
#javascript
#showdev
Every big project starts with a spark of curiosity. For us, it began with the question: "Can we make powerful on-device AI as simple and accessible as browsing a website?"
Try it for yourself: Live Demo
We were exploring amazing tools like Ollama and LM Studio. The power to run large models locally was incredible, but it came with a catch: the complexity of terminals, installers, and configurations. It was a world away from the seamless experience of web-based AI tools.
We saw a gap and an opportunity. This is the story of how we built Gemma Web, a fully private, on-device AI workspace that lives entirely in your browser.
Inspiration from Figma
Our guiding thought was: if a graphically intensive application like Figma can run entirely on the client-side, what's stopping us from doing the same with a language model? This led us down the path of WebAssembly (Wasm), the technology that would become the cornerstone of our project.
The Journey for the Right Tools
Our initial exploration into existing JavaScript AI modules was a mixed bag. While promising, they often felt slow and couldn't deliver the zero-latency experience we were aiming for. We knew we needed something that could leverage the hardware more directly.
The breakthrough came when we found two key pieces of technology from Google:
Gemma Models: A new family of open-weight models specifically optimized for on-device performance.
MediaPipe LLM Task API: A (then in preview) library designed to run these models efficiently using a Wasm backend.
We had found our path forward.
Our Technical Architecture
Hereâ€™s a breakdown of the core components we engineered:
The On-Device Inference Engine
The heart of the application is a serverless, local-first inference engine. We used WebAssembly and the MediaPipe LLM Task API to deploy Googleâ€™s Gemma models directly in the browser. This approach is what allows us to achieve near zero-latency inference with 100% data privacy and full offline capability.
The Client-Side RAG Pipeline
To make the AI truly useful, it needed to understand user-specific context. We implemented a complete Retrieval-Augmented Generation (RAG) pipeline that runs entirely on the client-side. To avoid freezing the app while processing large files, we leveraged a Web Worker to handle the heavy lifting. The worker asynchronously processes user-uploaded PDFs and TXTs, converting them into vector embeddings using TensorFlow.js for context-aware conversations.
Robust Local Storage with IndexedDB
To achieve true offline functionality, we needed a way to store everything locally. We architected a robust client-side solution using IndexedDB. This allows us to persist multi-gigabyte AI models, conversation histories, and document embeddings. This robust storage is also what enables Gemma Web to function as a seamless, installable Progressive Web App (PWA).
The Result: A New Kind of AI Workspace
The culmination of this journey is Gemma Web, a tool that we believe represents a step towards the future of personal, private AI.
This project was a deep dive into the future of web-native applications. It taught us that the browser is more than capable of handling complex, computation-heavy tasks that were once reserved for servers.
We'd love for you to check it out and share your feedback in the comments below! Thanks for reading.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Gemma Web AI
Follow
Joined
Sep 14, 2025
Trending on DEV Community
Hot
Why Are You Not Reading My Post?
#tutorial
#discuss
#productivity
#career
Orchestrating Real-World Agent Workflows with MCP
#ai
#beginners
#tutorial
#discuss
21 native browser APIs you might not have used before
#api
#javascript
#webdev
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account