Introduction to Python Module Two Part One: Debugging - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Sarah Bartley-Dye
Posted on Sep 15
Introduction to Python Module Two Part One: Debugging
#python
#debugging
SoloLearn Introduction to python (2 Part Series)
1
Intro to Python Module One: Getting Started with Python
2
Introduction to Python Module Two Part One: Debugging
Let‚Äôs start a brand new module in the SoloLearn Introduction to Python course. We are in module two. Module two is about working with data.
This module is full of different concepts. The topics featured in this module are:
Debugging
Best practices and standards
Inputs and outputs
Data types
Data conversions
Fixing data types
Comparison operators
Logical operators
Combining comparison operators and logical operators
Looks like a lot of information, right? I am breaking this module into multiple posts that will cover each of these topics. This way, it will be easier for you to read and process everything in small chunks.
This week is the first post in this module and will be about debugging. Debugging is a crucial skill in any programming language, making it essential for every developer to possess. SoloLearn shares tips for debugging in Python, but you can use these tips in any programming language since debugging is universal everywhere in programming.
Next week, I will continue to progress through module two with the next topic. Part two of this module will examine some of the best practices and standards for Python.
What is debugging?
Debugging is what developers say when they are fixing code. Developers go through their code looking for errors or ‚Äúbugs‚Äù as developers refer to them. Web development has the following three elements, regardless of what language you use:
writing code
testing code (developers can call this executing code)
debugging
Every developer debugs code because bugs occur frequently in code no matter what language is being used. Think of it just like proofreading for coding. This makes developers kind of a digital mechanic trying to figure out what is wrong so they can fix it and get it up and running again.
The thing about bugs is that they could be a large amount of code that isn‚Äôt working or the tiniest error. That means typos and misplaced tags can cause problems in your code. When you are working in a case-sensitive language like Python, capitalizing the wrong letter could result in your entire program not working correctly.
It is similar to how Christmas lights work around the holidays. Often time when one light goes out, the entire strand of lights won't work. Luckily, programming languages like Python are there to help developers find errors in their code.
Enter the error message.
An error message is the message the computer tells the developer so they know that there is an error in the code. Error messages will look different depending on what type of console you are using. However, they work the same way.
When the computer encounters a bug, the code will stop running, and an error message will pop up. Multiple errors will stop running on the first bug it finds until it is fixed. Then it will look for the next error in the code.
When you get an error message, SoloLearn tells students to stay cool. Next, read the error message. The error message will tell you what kind of error it is and where it is in your code.
Once you read the message, go to the spot in your code and read the line the error message specified, and fix the error. Some errors might not be in that specific line, so always read 1-2 lines before the specified line and 1-2 lines after it. The secret to debugging is working in small chunks.
That means writing code in small chunks, testing it, and then debugging. It is much easier to code this way versus writing all the code and then debugging it afterward. You'll learn more about functions in a later module, but functions are a developer's best friend when debugging code.
The best way to avoid having many errors is by spotting them early, and coding in small chunks helps cut down the errors.
This means a lot of double-checking, but that‚Äôs a lot of what coding is about. There are lots of errors you‚Äôll encounter in your code. When I‚Äôve taught my Level M classes, a common bug students often encountered was calling variable names that weren‚Äôt defined yet.
They were using two different variable names, confusing the computer. They learned to double-check the variable names they were using in their code when they got error messages.
SoloLearn Introduction to python (2 Part Series)
1
Intro to Python Module One: Getting Started with Python
2
Introduction to Python Module Two Part One: Debugging
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Sarah Bartley-Dye
Follow
Software Engineer | Online Coding Instructor at Coding with Kids
Location
Ohio
Education
Skillcrush, freeCodeCamp, SoloLearn, University of Akron, Otterbein University
Pronouns
she/her
Work
Online Coding Instructor at coding with Kids
Joined
Mar 6, 2018
More from Sarah Bartley-Dye
Introduction to Python Module Two Part Two Best Practices
#python
Intro to Python Module One: Getting Started with Python
#python
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
P√°gina Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
C√≥digo de Conduta
Pol√≠tica de Privacidade
Termos de Uso
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account