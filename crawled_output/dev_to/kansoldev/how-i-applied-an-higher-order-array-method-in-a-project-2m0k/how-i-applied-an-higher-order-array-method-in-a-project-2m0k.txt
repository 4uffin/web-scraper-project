How I Applied an Higher Order Array Method In a Project - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Yahaya Oyinkansola
Posted on Sep 17
How I Applied an Higher Order Array Method In a Project
#react
#typescript
#webdev
One of the most exciting parts of being a programmer is when you finally get to apply a concept youâ€™ve learnt in a real-world scenario. In JavaScript, I learnt about higher order array methods like map() and filter(), but more importantly, how chaining them together might produce more sophisticated results. It is one thing to know how these methods work, and another to solve an actual problem with them.
Thatâ€™s exactly what happened while I was building the multi-step form project from Frontend Mentor. I discovered a practical use case for chaining higher order array methods together, specifically map().
Here's a live demo of the project. Let's get into the nitty gritty
The Challenge
In the 3rd step of the form, users are to select add-ons for their subscription plan. The application has two billing types (Monthly & Yearly) which is being selected from the 2nd step with a toggle, so when the billing type changes, the price for the add-ons should immediately reflect the billing type selected, but there was an issue.
The issue was that whenever the toggle changed, the state that held the users selected add-ons did not immediately reflect the price change, except if they re-select it again, which isn't very efficient. I needed a way to automatically update the state whenever the billing type changes so it reflects in the UI.
My Approach
Hereâ€™s how I was able to solve the problem:
Loop through the users selected add-ons â€“ I used .map() on the selectedAddons state which is an array
Find the matching add-on from the default list â€“ After mapping through the array, I used the findIndex() method to go through an array of pre-defined add-ons to find each addon that matches the users selected own.
Update the price dynamically with the index â€“ This is where the chaining happens. I built a new array with .map() to update the prices of the users selected add-ons
React to state changes â€“ I used useEffect() to listen for changes in the radioChecked state (the toggle). Whenever it changed, the code in the steps above runs, updating the state and re-rendering the UI
With this approach, the user doesn't have to re-select their add-ons before the price updates
The Code
Hereâ€™s a simplified version of the code that brought it all together:
import { useState, useEffect } from 'react';
// Addons is an array of objects
const addons = [];
export default function App() {
const [selectedAddons, setSelectedAddons] = useState([]);
useEffect(() => {
const updateSelectedAddons = selectedAddons.map(selectedAddon => addons.findIndex(addon => addon.name === selectedAddon.name)).map(index => {
return {
...addon,
price: radioChecked â€‹? addons[index].monthlyPrice
: addons[index].yearlyPrice
};
})
setSelectedAddons(updateSelectedAddons);
}, [radioChecked]);
}
Enter fullscreen mode
Exit fullscreen mode
With just a few lines of code, .map() and useEffect() worked hand-in-hand to keep the UI consistent and responsive to user actions.
Conclusion
This experience made me realize that concepts stick better when you apply them. I had studied .map() and other higher order array functions before, but it was while building this project I understood how they can be applied to solve a problem. This is exactly what programming is about, solving problems.
If youâ€™re learning JavaScript (or any programming language), I encourage you to:
Build projects, even small ones.
Look for opportunities to connect new concepts to real problems.
Donâ€™t just read the theory, apply it.
What concept have you recently learnt as a developer that you applied in a project?
I am oyinkansola, a frontend developer building solutions for non technical businesses, and sharing what I learn along the way, while helping developers write better and smarter code. You can connect with me on LinkedIn and X. Here's a live preview of the project, as well as the GitHub repo.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Yahaya Oyinkansola
Follow
Software engineer building web apps with React, also helping productivity coaches build an effective online presence
Location
Ilorin, Nigeria
Education
University of Uyo
Joined
Aug 19, 2019
More from Yahaya Oyinkansola
How I Discovered TypeScriptâ€™s Record Utility Type (And How It Solved My Problem)
#typescript
#webdev
#react
A TypeScript Fix For Handling Events in React
#typescript
#react
Why I want to be a Front-End Developer
#webdev
#learning
#frontend
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account