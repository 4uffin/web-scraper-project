Applying Any SAST Tools for an Infrastructure as Code Application in Terraform - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Sebastian Rodrigo ARCE BRACAMONTE
Posted on Sep 17
Applying Any SAST Tools for an Infrastructure as Code Application in Terraform
#devops
#terraform
#tooling
#security
Abstract
Infrastructure as Code (IaC) with Terraform accelerates cloud provisioning but also increases the risk of security misconfigurations being deployed to production if not detected early. This article explores how Static Application Security Testing (SAST), commonly applied to application code, can also be used to scan Terraform projects for insecure configurations, hardcoded secrets, and unsafe defaults. We analyze the strengths (early detection, scalability, developer feedback), limitations (false positives, lack of runtime context, need for complete project scope), and practical selection criteria (Terraform support, precision, CI/CD integration, SARIF output). A complete GitHub demo project with automated scans using Semgrep and GitHub Actions is included, showing how to integrate SAST into a modern IaC security pipeline.
Introduction
Terraform has transformed the way organizations manage infrastructure by adopting Infrastructure as Code (IaC). However, IaC brings not only speed and automation but also new attack surfaces. A simple misconfigurationâ€”such as a publicly accessible S3 bucket or overly permissive security groupâ€”can expose entire environments.
To prevent these issues, SAST tools like Semgrep can be applied directly to Terraform code. Unlike runtime security checks, SAST analyzes the codebase before deployment, making it possible to shift security left in the Software Development Lifecycle (SDLC).
Why Apply SAST to Terraform IaC?
Early detection: Issues are identified before provisioning resources.
Automation-friendly: Fits directly into CI/CD pipelines.
Scalable: Rules can be shared across teams and projects.
Customizable: Teams can define their own policies (e.g., enforcing encryption, disallowing public access).
Strengths of SAST for Terraform
Scalability â€“ SAST tools can be integrated into nightly builds, CI/CD pipelines, and pull request checks.
Early Detection â€“ Security flaws are discovered before deployment, reducing exposure in production environments.
Developer-Friendly Feedback â€“ Many SAST tools highlight the exact Terraform file, resource, and line number where a problem occurs.
Automation Ready â€“ IaC pipelines can automatically block deployments when high-severity issues are detected.
Weaknesses and Challenges
Despite its value, applying SAST to IaC is not without limitations:
High False Positives â€“ Rules may flag patterns that are not real vulnerabilities.
Configuration Gaps â€“ SAST cannot always detect contextual issues, such as overly permissive IAM roles combined across multiple files.
Dependency on Buildable Context â€“ Some tools require the full Terraform project with providers and modules to analyze correctly.
Limited Coverage â€“ Authentication logic, cryptographic misuse, or cloud-native misconfigurations may remain undetected.
Thus, SAST for Terraform should be complemented with dynamic tests, policy-as-code engines (e.g., Open Policy Agent), and runtime monitoring.
Semgrep and Terraform
Semgrep is an open-source static analysis tool that allows writing custom security rules in YAML. It can parse Terraform files and detect risky patterns.
Example rule to detect a public S3 bucket:
rules:
- id: s3-bucket-public
patterns:
- pattern: |
resource "aws_s3_bucket" $X {
acl = "public-read"
}
message: "S3 bucket configured with public access."
severity: ERROR
languages: [terraform]
Enter fullscreen mode
Exit fullscreen mode
When applied to Terraform files, this rule highlights misconfigurations before they reach production.
Vulnerable Code Example (Terraform)
resource "aws_s3_bucket" "demo" {
bucket = "demo-bucket-public"
acl
= "public-read"
}
Enter fullscreen mode
Exit fullscreen mode
Secure Code Example (Terraform)
resource "aws_s3_bucket" "demo" {
bucket = "demo-bucket-private"
acl
= "private"
}
Enter fullscreen mode
Exit fullscreen mode
GitHub Actions Automation
The workflow .github/workflows/semgrep.yml ensures that every push and pull request is scanned:
name: Semgrep IaC Scan
on: [push, pull_request]
jobs:
semgrep:
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v3
- uses: returntocorp/semgrep-action@v1
with:
config: ./semgrep-rules/terraform-public-resources.yml
Enter fullscreen mode
Exit fullscreen mode
Any insecure configuration is flagged automatically.
Prevents insecure Terraform from merging into main.
Provides instant feedback to developers.
Demo repository
ðŸ‘‰ You can access the source code and configurations used in this article at the following link:
ðŸ”— https://github.com/KrCrimson/semgrep-terraform-iac-demo.git
Conclusion
Applying SAST to Terraform is an effective way to prevent insecure IaC deployments.
Semgrep provides a flexible and open-source approach to scanning.
With GitHub Actions automation, security checks become continuous and scalable.
The demo repository offers a ready-to-use template for organizations looking to adopt security-as-code in their IaC workflows.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Sebastian Rodrigo ARCE BRACAMONTE
Follow
Joined
Sep 4, 2024
More from Sebastian Rodrigo ARCE BRACAMONTE
Applying Semgrep SAST to Any Application
#tooling
#devops
#opensource
#security
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account