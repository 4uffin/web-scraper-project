From Rules to Router: Teaching AI Your Language, Not Laws - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Yunus Emre Ak
Posted on Sep 12
From Rules to Router: Teaching AI Your Language, Not Laws
#ai
#claude
#cursor
#vibecoding
From Rules to Router: Teaching AI Your Language, Not Laws
The Problem with Rules
I used to write rules for AI.
"Always format code this way."
"Never use this pattern."
"Follow these 50 guidelines."
Then the context changed. New project, different codebase, fresh requirements.
All rules broke.
The Discovery: Router > Rules
What if AI doesn't need rules?
What if it needs a translator?
I speak human. AI speaks machine.
Not literally - cognitively.
When I say "think about it" - I mean "plan the algorithm before coding."
When I say "check the vibe" - I mean "look at existing patterns, follow culture."
When I say "this is broken" - I mean "abandon this approach, try something else."
The Router Concept
My Request â†’ Router â†’ AI Understanding â†’ Action
Enter fullscreen mode
Exit fullscreen mode
Not rules. Translation.
Real Examples from My Router
"make it clean"
â†’ Remove all comments except JSDoc
â†’ One action per line: if (x) return y
â†’ No var declarations, only const/let
â†’ Delete console.logs
"check the culture"
â†’ git log --oneline -20
â†’ Find naming patterns (camelCase vs snake_case)
â†’ See if they use async/await or .then()
â†’ Copy their error handling style
"what's going wrong?"
â†’ Don't just fix the error
â†’ Question why we're doing this
â†’ Is there a third option?
â†’ Example: "Can't decide between REST or GraphQL?" â†’ Use tRPC
"make it fast"
â†’ Change loops to .map()
â†’ Add Redis cache layer
â†’ Move calculations to SQL
â†’ Actual metrics: 200ms â†’ 20ms
Enter fullscreen mode
Exit fullscreen mode
Each phrase triggers specific, measurable actions.
Why Router Works
1. Context Agnostic
Rules break when context changes.
Router translates intent regardless of context.
2. Human-Centric
I think in my patterns.
Router translates my patterns to AI patterns.
3. Evolutionary
New pattern discovered? Add to router.
Old pattern obsolete? Update translation.
The Kobayashi Maru Effect
Best discovery: "What do you think?"
Example scenario:
Me: "Should I use MongoDB or PostgreSQL?"
Old AI: "MongoDB is good for unstructured data..."
Router AI: "Why choose? Use PostgreSQL with JSONB columns.
Get SQL reliability + JSON flexibility."
Enter fullscreen mode
Exit fullscreen mode
System gave A or B.
Router found C.
Implementation in Practice
Here's actual router.md content:
# .claude/output-styles/router.md
"commit this"
1. git status
2. git diff --cached
3. Remove files I didn't change
4. Message format: "feat(scope): concrete change
- validateUser() deleted
- port 3000â†’8080
- 3 rulesâ†’7 rules"
"simplify this"
1. Remove abstractions with single usage
2. Inline functions under 3 lines
3. Delete unused imports
4. Combine similar functions
Enter fullscreen mode
Exit fullscreen mode
Not vague instructions. Specific actions.
The Popular Lexicon Pattern
One word, thousand concepts.
"Git" â†’ Entire version control universe
"Kobayashi Maru" â†’ No-win scenario pattern
Router uses these triggers.
One word activates entire knowledge domains.
Practical Benefits
Before Router
Me: "Fix the login function"
AI: "I'll add input validation and error handling"
Me: "No, we don't do it that way"
AI: "I'll use try-catch blocks"
Me: "Still wrong, we use Result types"
AI: "Let me add a Result type wrapper"
Me: *Gives up, writes it myself*
Enter fullscreen mode
Exit fullscreen mode
After Router
Me: "check the culture and fix login"
AI: *Runs git log --grep="auth"*
*Sees pattern: Result<User, AuthError>*
*Copies exact error handling from previous commits*
*Uses team's naming: authenticateUser not loginUser*
Enter fullscreen mode
Exit fullscreen mode
Output was identical to what senior dev would write.
The Philosophy
We're not teaching AI rules.
We're teaching AI our language.
Like moving to a new country.
You don't memorize laws.
You learn the language.
Evolution Path
Started with rules (failed)
Moved to constitution (better)
Discovered culture in git (good)
Created router (breakthrough)
Router is the translation layer between human intuition and AI execution.
Key Insights
Rules are brittle - They break with context
Router is flexible - It translates intent
Culture beats documentation - Git history > README
Patterns beat instructions - "check the culture" > 50 lines of rules
Lexicon beats explanation - "Kobayashi Maru" > paragraph of context
Your Turn
Stop writing rules for AI.
Start building your router.
What's your "check the vibe"?
What's your "what do you think"?
What triggers your workflows?
Build your translation protocol.
Teach AI your language, not your laws.
The Future
Imagine every developer with their personal router.
AI understanding each person's cognitive patterns.
No more prompt engineering.
Just natural expression.
"Fix this the way I like."
And AI knows exactly what that means.
Because router translated it.
That's where we're heading.
From rules to routers.
From laws to language.
Beyond Code: The Self-Knowledge Connection
This router concept extends beyond coding. The clearer you know yourself, the better you can translate your needs to AI.
I explored this deeper with ClarityOS - an experimental AI project focusing on self-knowledge first. It's currently in selective waitlist mode (not commercial, just exploring the concept). Because unclear mind = unclear prompts = useless AI responses.
The pattern is universal: Know yourself â†’ Express clearly â†’ Get what you need.
Whether it's code, life decisions, or AI interactions.
More at yemreak.com
Read the original: From Rules to Router: Teaching AI Your Language, Not Laws
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Yunus Emre Ak
Follow
Building clarityos.ai, exploring AI capabilities
Location
Istanbul - Turkey
Joined
Sep 13, 2023
More from Yunus Emre Ak
Stop Writing The Same Prompts - Makefiles Changed Everything
#claude
#ai
#vibecoding
#cursor
I Gave My AI a Constitution - Now It Governs Itself
#claude
#ai
#vibecoding
#cursor
Single Source, Multi-Platform -> Makefile as Publishing Engine
#claude
#ai
#vibecoding
#cursor
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account