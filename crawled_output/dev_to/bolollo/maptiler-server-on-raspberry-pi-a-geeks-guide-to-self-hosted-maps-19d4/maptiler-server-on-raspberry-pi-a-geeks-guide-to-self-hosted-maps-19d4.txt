MapTiler Server on Raspberry Pi - A Geeks' Guide to Self-Hosted Maps - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
bolo
Posted on Sep 23
MapTiler Server on Raspberry Pi - A Geeks' Guide to Self-Hosted Maps
#raspberrypi
#map
#programming
#maptiler
Unleash Your Inner Cartographer (and Powerful Maps!)
Why Build Your Own Map Server?
Tired of relying on Google Maps? With MapTiler Server on a Raspberry Pi, you‚Äôll get:
‚úÖ Privacy and offline: Maps stay on your device.
‚úÖ Control: Add custom styles, overlays, or data.
‚úÖ Experience: Master Linux, APIs, and geospatial tech with ease.
‚úÖ Fun: Build a sample "Explore Zurich" dashboard with beautiful offline maps!
What You‚Äôll Build
By the end of this guide, your Raspberry Pi will:
Serve maps like a pro (even with a free tier license).
Run a demo dashboard app on your display or a full-screen dashboard directly on the Pi.
Handle basic tasks like configuring Pi, uploading sample data, and deploying a simple web app.
What You‚Äôll Need
Item
Why You Need It
Raspberry Pi (4/5)Raspberry 3 A+ too ‚Ä¶ wait until the end
The brain of your map server
MicroSD card (32GB+)
Storage for your OS and maps
Power supply
Keep your Pi alive!
Monitor/keyboard/mouse
For setup (you can unplug later)
Flashing the OS ‚Äì Breathing Life into Your Pi
Step 1: Install Raspberry Pi Imager
Download Raspberry Pi Imager from the official website.
Install it on your computer (available for Windows, macOS, and Linux).
Step 2: Choose the OS
Choose Pi version based on your model.
Select Choose OS and pick Raspberry Pi OS (64-bit) or another compatible image.
Select your MicroSD card under Choose Storage.
Step 3: Use Edit Settings for Pre-Configuration
Configure the following settings:
Hostname: Set a custom name (e.g., pi-maps).
Username and Password: Create a username you like and a secure password for the admin user.
Wi-Fi: Enter your SSID and password to connect automatically.
Locale: Set your language and country code.
SSH (under Services): Enable SSH for remote access.
Click Save to return to the main menu.
Step 4: Finish the SD card and boot your Pi
Click Write, confirm, and wait for the process to complete.
Insert the MicroSD card into your Raspberry Pi and power it on.
The pre-configured settings will automatically apply, saving you time during setup!
Installing MapTiler Server on a Raspberry Pi via CLI
Step 1: Download and Install MapTiler Server
Download the ARM64 .deb package for MapTiler Server from the official website.
Transfer the file to your Raspberry Pi (if downloaded on another machine).
üí° Tip
You can drag and drop the installer on to your SD card after flashing it. The installer will be located in /boot/firmware/ path.
Open the terminal on your Raspberry Pi and run:
sudo dpkg -i maptiler-server-4.6.1-linux-arm64.deb
Enter fullscreen mode
Exit fullscreen mode
(use correct installer filename and path like /boot/firmware/maptiler-server-4.6.1-linux-arm64.deb)
Step 2: Start the Server
Launch MapTiler Server with the following command:
maptiler-server
The server will start, and you can access it in your browser at:
http://:3650/admin/
If you run the server without options, Server automatically generates the initial config and password. Keep it for login to Server Admin interface.
üí° Tip
Run maptiler-server --help to explore more options like how to set password, home dir, and other options.
Step 3: Enable Auto-Start (Optional)
To ensure MapTiler Server starts automatically on boot as a service:
sudo maptiler-server-servicify
Enter fullscreen mode
Exit fullscreen mode
This command starts a script that guides you through setting up MapTiler Server‚Äôs working directory (use absolute path), port, and administration password. Then it creates the systemd service file and starts the service.
Adding Free Sample Data to MapTiler Server
Step 1: Download the Free Sample Data
Go to MapTiler Data and log in (you have an account created from server installer download).
Click on "MY DATA" in the top right corner.
Navigate to the Server tab and download the free sample data package (a ZIP file). This package includes map styles and data for the Zurich area.
Step 2: Upload the Sample Data to MapTiler Server
Open the MapTiler Server admin interface in your browser:
http://:3650/admin/
Log in with your admin credentials.
In the admin interface, click "New Map" or drag and drop the downloaded ZIP file directly into the interface.
Wait for MapTiler Server to process and upload the sample data.
Step 3: Explore the Sample Data
Once uploaded, navigate to the Tiles tab to preview the raw OpenStreetMap dataset for Zurich.
Switch to the Maps tab to view different map styles (e.g., Streets, Outdoor, Satellite Hybrid).
These styles are pre-configured and ready to use with the Zurich dataset.
Step 4: Test Your Setup
Open any map style in your browser by clicking on it in the Maps tab.
Use zoom levels up to 14 for full details in Zurich or experiment with over-zooming for higher levels.
‚ö†Ô∏è Warning
On low-memory or lightweight Pi versions (such as my Pi 3 A+), STOP here. Running MapTiler Server and a browser on the same board is not a great idea. However, you can use these versions to serve tiles to a browser running on another device.
Create a Dashboard on Raspberry Pi
An auto-rotating map display for exploring Zurich using Raspberry Pi's power
Step 1: Create the HTML File
On your Raspberry Pi, create a new file:
nano ~/explore-zurich.html
Paste this complete code:
<!DOCTYPE html>
<html>
<head>
<title>Explore Zurich</title>
<script src="https://cdn.maptiler.com/maptiler-sdk-js/v3.0.1/maptiler-sdk.umd.min.js"></script>
<link href="https://cdn.maptiler.com/maptiler-sdk-js/v3.0.1/maptiler-sdk.css" rel="stylesheet" />
<style>
body { margin: 0; padding: 0; }
#map { position: absolute; top: 0; bottom: 0; width: 100%; }
.map-title {
position: absolute;
top: 10px;
left: 10px;
z-index: 1;
background: white;
padding: 5px 10px;
border-radius: 5px;
font-family: Arial;
}
</style>
</head>
<body>
<div class="map-title" id="styleName">Zurich Explorer üó∫Ô∏è</div>
<div id="map"></div>
<script>
// Initialize with MapTiler SDK
maptilersdk.config.apiKey = '';
// No API key needed for local server
// Zurich bounding box coordinates
const ZURICH_BBOX = {
minLon: 8.4476,
maxLon: 8.5926,
minLat: 47.3362,
maxLat: 47.4145
};
// Available styles from your sample data
const styles = [
{ id: "basic", name: "Basic Style" },
{ id: "outdoor", name: "Outdoor Style" },
{ id: "streets", name: "Streets Style" },
{ id: "satellite-hybrid", name: "Satellite Hybrid" }
];
let currentStyleIndex = 0;
// Initialize map with the first style
const map = new maptilersdk.Map({
container: 'map',
style: `http://localhost:3650/api/maps/basic/style.json`,
center: [8.5417, 47.3769], // Zurich center
zoom: 12
});
// Random position generator within Zurich
function getRandomZurichPosition() {
const lon = ZURICH_BBOX.minLon +
Math.random() * (ZURICH_BBOX.maxLon - ZURICH_BBOX.minLon);
const lat = ZURICH_BBOX.minLat +
Math.random() * (ZURICH_BBOX.maxLat - ZURICH_BBOX.minLat);
return [lon, lat];
}
// Update map every minute
function updateMap() {
// Cycle through styles
currentStyleIndex = (currentStyleIndex + 1) % styles.length;
const style = styles[currentStyleIndex];
map.setStyle(`http://localhost:3650/api/maps/${style.id}/style.json`);
document.getElementById('styleName').textContent = style.name;
// Fly to random position
map.flyTo({
center: getRandomZurichPosition(),
zoom: 14 + Math.random() * 4, // Random zoom between 14-18
duration: 3000
});
}
// Initial update and set interval
map.on('load', function() {
updateMap();
setInterval(updateMap, 10000);
});
</script>
</body>
</html>
Step 2: Access the Dashboard
Open Chromium browser on your Pi:
chromium-browser ~/explore-zurich.html
For kiosk mode (fullscreen):
chromium-browser --kiosk ~/explore-zurich.html
What You'll See
‚úÖ Automatic style rotation every 10secs
‚úÖ Smooth transitions between random Zurich locations
‚úÖ Four different map perspectives from your sample data
Pi 3 A+ serving tiles to map dashboard running from desktop.
Lessons learned
Raspberry Pi 3 A+ is fine for hosting and serving tiles (especially with disabled GUI), but can't be used to render a web map dashboard to a display at the same time. Use recent Pi version (4/5) to get smooth map experience, pick >8GB memory board for hi-resolution displays.
For some scenarios, get the Pi IP address and connect to the console via SSH.
For a fully offline solution, put MapTiler SDK JS and CSS directly on the Pi and refer locally
Beyond the Basics
Adding custom data.
Try switching to 3D / Globe view
More SDK features - e.g., store locations in your lobby
Add a daily fact about the randomly selected location using a geocoding API.
Implement a simple weather overlay for the chosen location.
Configure your Pi to run Chromium.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
bolo
Follow
Focused mainly on GIS. Developing web mapping applications since 2004 for several projects. Interested in open software, open data, and geotechnologies.
Location
Barcelona, Spain
Joined
Nov 17, 2023
Trending on DEV Community
Hot
Boost Your Workflow: 12 Free Figma Plugins That Save Hours of Design & Dev Time
#figma
#design
#webdev
#productivity
3 Reasons You're in Tech Post-Layoff Shock (Based on personal experience)
#career
#beginners
#learning
Code Review Therapy: How to Give Feedback Without Breaking Hearts (or Code)üíî
#codenewbie
#programming
#coding
#codereview
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account