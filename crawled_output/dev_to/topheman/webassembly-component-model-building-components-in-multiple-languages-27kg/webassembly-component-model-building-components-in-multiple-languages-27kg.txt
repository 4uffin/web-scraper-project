Building components in multiple languages - WebAssembly Component Model - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Tophe
Posted on Sep 19
Building components in multiple languages - WebAssembly Component Model
#webassembly
#wasi
#plugin
#rust
WebAssembly Component Model (5 Part Series)
1
Building a plugin system - WebAssembly Component Model
2
Building components in multiple languages - WebAssembly Component Model
3
Writing components in C with WASI SDK - WebAssembly Component Model
4
Writing components in Go with TinyGo compiler - WebAssembly Component Model
5
Writing components in TypeScript with jco - WebAssembly Component Model
The Bytecode Alliance organization maintains a very useful website about The WebAssembly Component Model and each associated languages has also a page on it.
Now that I've explained the purpose of the project and its architecture in the previous section, I will focus on concrete examples of implementing multiple languages in the same project and sharing some tips I had to learn the hard way.
Before choosing a language for compiling to WebAssembly, you should consider the impact it has on the final size of your wasm file - here is a comparaison of the size of the echo plugin in the different languages:
Language
Size
C
56K
Rust
72K
Go (with TinyGo)
332K
TypeScript
12M
Looking at the table above, the differences in .wasm file size come from the language and how much runtime support it brings:
C and Rust produce very small files (56K and 72K here) because they compile directly to efficient machine-level code without needing to ship a runtime. Rust is slightly larger due to safety checks and standard library overhead, but both remain compact.
Go (TinyGo) is larger (332K) because Go normally includes a large runtime. TinyGo reduces this compared to regular Go, but you still pay a higher size cost than C/Rust.
TypeScript is much bigger (12M) because it doesn‚Äôt compile directly to Wasm. Instead, you‚Äôre shipping a whole JavaScript engine runtime inside your .wasm file.
I've already covered creating Rust components, let's now focus on C, Go and TypeScript.
WebAssembly Component Model (5 Part Series)
1
Building a plugin system - WebAssembly Component Model
2
Building components in multiple languages - WebAssembly Component Model
3
Writing components in C with WASI SDK - WebAssembly Component Model
4
Writing components in Go with TinyGo compiler - WebAssembly Component Model
5
Writing components in TypeScript with jco - WebAssembly Component Model
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Tophe
Follow
‚ù§Ô∏èJavaScript, WebAssembly & Rust ü¶Ä
Location
Paris, France
Joined
Aug 14, 2017
More from Tophe
Writing components in TypeScript with jco - WebAssembly Component Model
#webassembly
#wasi
#plugin
#typescript
Writing components in Go with TinyGo compiler - WebAssembly Component Model
#webassembly
#wasi
#go
#tinygo
Writing components in C with WASI SDK - WebAssembly Component Model
#webassembly
#wasi
#plugin
#c
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account