Assinatura Digital em Elixir com Criptografia Assim√©trica - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
William Moreira da Silva
Posted on Sep 19
Assinatura Digital em Elixir com Criptografia Assim√©trica
#backend
#cybersecurity
#tutorial
Voc√™ j√° se perguntou como funciona um fluxo de assinatura digital?
Quando falamos de documentos digitais, surge a d√∫vida: como garantir que esse arquivo √© aut√™ntico e n√£o foi alterado? √â justamente para resolver isso que existe a assinatura digital.
A ideia √© simples: voc√™ gera um hash do documento (uma esp√©cie de ‚Äúimpress√£o digital‚Äù) e usa sua chave privada para assinar esse hash. Quem receber o documento pode, com a chave p√∫blica correspondente, verificar se a assinatura √© leg√≠tima. Assim, temos duas garantias:
O documento n√£o foi adulterado.
A assinatura s√≥ poderia ter vindo do dono da chave privada.
No caso de PDFs ‚Äî pense em contratos ou qualquer documento de valor jur√≠dico ‚Äî isso √© ainda mais relevante. No Brasil, por exemplo, a assinatura digital √© regulamentada pela ICP-Brasil, dando validade legal a documentos assinados eletronicamente.
E a√≠ entra o nosso protagonista: Elixir. Por rodar na m√°quina virtual do Erlang (a BEAM), a linguagem j√° oferece ferramentas nativas de criptografia, prontas para uso. Ou seja, voc√™ n√£o precisa de bibliotecas externas para come√ßar a brincar com chaves e assinaturas digitais.
M√£o na massa: assinando em Elixir
1. Gerando um par de chaves
Primeiro passo: criar o par de chaves RSA (privada e p√∫blica). Com elas, vamos assinar e validar os documentos.
# Criando um par de chaves RSA com 2048 bits
{:ok, rsa_key} = :public_key.generate_key({:rsa, 2048, 65537})
{:RSAPrivateKey, _, modulus, public_exp, _private_exp, _, _, _, _} = rsa_key
# private_key √© a chave que voc√™ deve manter em segredo absoluto. Ela nunca deve ser compartilhada.
public_key = {:RSAPublicKey, modulus, public_exp}
# public_key √© a chave que pode ser distribu√≠da para qualquer pessoa que precise validar suas assinaturas.
private_key = rsa_key
Enter fullscreen mode
Exit fullscreen mode
Pronto, agora temos as duas chaves na m√£o.
‚ö†Ô∏è Boa pr√°tica: em um sistema real, essa chave privada n√£o deve ficar no c√≥digo nem em arquivos simples. algum tipo de cofres digitais como HashiCorp Vault.
2. Gerando o hash de um PDF
Antes de assinar, precisamos transformar o conte√∫do do arquivo em um hash. Esse hash vai ser a base da assinatura.
pdf_content = File.read!("contrato.pdf")
# O hash √© como a impress√£o digital do documento (podemos dizer que √© um resumo criptogr√°fico).
hash = :crypto.hash(:sha256, pdf_content)
Enter fullscreen mode
Exit fullscreen mode
Alterou uma v√≠rgula no PDF? O hash j√° muda completamente. Isso garante a integridade.
‚ö†Ô∏è Boa pr√°tica: sempre use algoritmos de hash considerados seguros. Evite MD5 ou SHA-1, que j√° foram quebrados e n√£o s√£o confi√°veis para assinatura digital.
3. Assinando com a chave privada
Com o hash pronto, agora √© s√≥ assinar:
# Estamos aplicando a chave privada sobre o hash.
signature = :public_key.sign(hash, :sha256, private_key)
Enter fullscreen mode
Exit fullscreen mode
O resultado, signature, √© uma sequ√™ncia de bytes que comprova que voc√™ (e s√≥ voc√™) poderia ter gerado essa assinatura, j√° que s√≥ voc√™ tem a chave privada. Esse signature √© o que vai junto do documento. Ele prova que quem assina tinha a chave privada correta.
‚ö†Ô∏è Boa pr√°tica: normalmente, essa assinatura √© guardada separada do arquivo (como um .sig) ou embutida em metadados do PDF. Assim, o documento em si continua intacto.
4. Validando com a chave p√∫blica
Quem recebe o documento precisa verificar se est√° tudo certo:
# Aqui, usamos a chave p√∫blica para verificar a assinatura.
valid? = :public_key.verify(hash, :sha256, signature, public_key)
# Se valid? for true, temos duas garantias: o documento n√£o foi alterado e foi assinado por quem realmente possui a chave privada correspondente.
if valid? do
IO.puts("Tudo certo: assinatura v√°lida e documento √≠ntegro.")
else
IO.puts("Ops! Assinatura inv√°lida ou documento adulterado.")
end
Enter fullscreen mode
Exit fullscreen mode
‚ö†Ô∏è Boa pr√°tica: sempre valide o hash antes de confiar no documento. N√£o basta ‚Äúparecer‚Äù assinado; √© preciso confirmar criptograficamente.
Simples assim!!
5. Indo al√©m
Esse fluxo b√°sico j√° garante muita coisa. Mas no mundo real, √© importante expandir nos seguintes pontos:
M√∫ltiplas assinaturas em um mesmo PDF, cada uma com seu carimbo.
Metadados no pr√≥prio PDF, guardando assinatura, certificados e tudo mais.
timestamp, pra provar n√£o s√≥ que o documento √© v√°lido, mas quando foi assinado.
Esses que pontos s√£o super √∫teis em cen√°rios jur√≠dicos ou financeiros, onde cada detalhe pode toda faz diferen√ßa.
Conclus√£o
A assinatura digital √© essencial para garantir autenticidade, integridade e validade jur√≠dica de documentos. E vimos como o Elixir + Erlang tornam esse processo simples e confi√°vel: em poucas linhas conseguimos gerar chaves, assinar e validar documentos, com a robustez de uma plataforma madura.
Entendemos o conceito de assinatura digital, vimos como gerar chaves RSA, como criar e assinar o hash de um PDF e como validar essa assinatura. A pergunta da introdu√ß√£o era: como funciona um fluxo de assinatura digital? Agora temos a resposta clara ‚Äî ele envolve gerar um hash, assinar com a chave privada e validar com a chave p√∫blica.
Ou seja, al√©m de mostrar a versatilidade do Elixir no mundo da criptografia, conseguimos destrinchar um processo que, no fim das contas, √© bem mais direto do que parece.
No fim, o fluxo de assinatura digital nada mais √© do que hash + chave privada + chave p√∫blica ‚Äî simples na teoria, poderoso na pr√°tica.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
William Moreira da Silva
Follow
üë®‚Äçüíª Software Engineer | üåê Full Stack Engineer | üí°Solving real-world problems with code | üöÄ Always learning and exploring new technologies
Location
Brasil
Work
Software engineer
Joined
Sep 12, 2023
Trending on DEV Community
Hot
The 90-Day Coding Routine That Made Me Think Like An Architect
#webdev
#programming
#ai
#discuss
Ten more tips and tricks for your database schema
#database
#surrealdb
#schema
#tutorial
Why Are You Not Reading My Post?
#tutorial
#discuss
#productivity
#career
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account