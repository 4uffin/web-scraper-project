Linux Filesystem Explained â€” From `/` to `/home` (and Everything Between) - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Naval Kishor Upadhyay
Posted on Sep 15
Linux Filesystem Explained â€” From `/` to `/home` (and Everything Between)
#linux
#beginners
When you first explore a Linux system, the directories may seem cryptic:
/bin, /etc, /usr, /var â€¦ what do they mean, and why are they there?
The truth is: the Linux filesystem is not random. Itâ€™s carefully structured, following the Filesystem Hierarchy Standard (FHS). Once you see the logic, it becomes predictable and powerful.
This guide takes you step by step through the Linux directory tree, explaining what each folder contains, why it exists, and how to explore it.
1. The Root / â€” the Starting Point
At the very top is the root directory (/).
Every file and folder in Linux grows from this one root, like branches of a tree.
ðŸ“‚ Example:
/home/alex/report.txt
Enter fullscreen mode
Exit fullscreen mode
/ â†’ root (the trunk)
home â†’ branch
alex â†’ smaller branch
report.txt â†’ the leaf (file)
Unlike Windows, Linux does not use C:\ or D:\. Disks and USB drives are mounted into this tree.
Try this:
ls /
Enter fullscreen mode
Exit fullscreen mode
2. System Essentials
These directories allow Linux to start and run, even before you log in.
/bin â€” Basic Commands
Stores essential tools always available.
Examples: ls, cp, mv, cat.
ls /bin | head
Enter fullscreen mode
Exit fullscreen mode
/sbin â€” System Commands
Utilities for system administration.
Examples: ip, mount, shutdown.
/lib â€” Shared Libraries
Libraries needed by /bin and /sbin programs.
Without these, commands wonâ€™t work.
/boot â€” Startup Files
Holds files needed to boot Linux:
Kernel (vmlinuz)
Bootloader (GRUB)
/etc â€” System Configuration
Contains configuration files.
Examples:
/etc/passwd â†’ user accounts
/etc/hosts â†’ hostname mappings
cat /etc/hostname
Enter fullscreen mode
Exit fullscreen mode
3. Programs and Applications
/usr â€” Program Files
Houses the bulk of installed software.
Key subdirectories:
/usr/bin â†’ executables
/usr/share â†’ docs, icons, locales
/usr/local â€” Locally Installed Software
For software compiled or installed by the administrator.
Keeps it separate from system-installed programs.
/opt â€” Optional Applications
Self-contained third-party software.
Example: /opt/google/chrome.
4. User Data
/home â€” User Directories
Each user has their own space.
Example: /home/alex/ â†’ personal files and configs.
/root â€” Administratorâ€™s Home
The root userâ€™s home directory.
Kept separate from /home so itâ€™s always accessible.
5. Variable Data
/var â€” Logs and State
Contains files that change during operation.
Examples:
/var/log/ â†’ log files
/var/lib/ â†’ databases
/var/cache/ â†’ cached files
ls /var/log
Enter fullscreen mode
Exit fullscreen mode
/tmp â€” Temporary Files
Used by programs for short-lived data.
Cleared on reboot.
/var/tmp â€” Longer Temporary Storage
Similar to /tmp, but files may survive reboots.
6. Devices and System Information
/dev â€” Devices as Files
Hardware appears as files.
Examples:
/dev/sda â†’ first hard disk
/dev/tty â†’ terminal
/dev/null â†’ discards data
ls /dev | head
Enter fullscreen mode
Exit fullscreen mode
/proc â€” Process and Kernel Info
Virtual files representing system state.
Examples:
/proc/cpuinfo â†’ CPU info
/proc/meminfo â†’ memory usage
cat /proc/cpuinfo | head
Enter fullscreen mode
Exit fullscreen mode
/sys â€” Device and Kernel Settings
Exposes kernel and device details.
Example: /sys/class/net/ shows network interfaces.
7. Mount Points
/mnt â€” Manual Mounts
Used for temporary, admin-controlled mounts.
sudo mount /dev/sdb1 /mnt
Enter fullscreen mode
Exit fullscreen mode
/media â€” Removable Media
Where USBs and external drives appear automatically.
Example: /media/alex/MyUSB/.
8. Other Directories
/srv â†’ Data for services (web, FTP, etc.)
/run â†’ Runtime info about processes and sockets (cleared at reboot)
/lost+found â†’ Recovered files after filesystem checks
/snap, /flatpak â†’ Application packaging (distro-specific)
9. Key Takeaways
/ is the single starting point of the filesystem.
System essentials live in /bin, /sbin, /lib, /boot.
Configurations are in /etc.
Applications go into /usr, /usr/local, /opt.
User files are stored in /home/<username>.
Logs and caches go into /var, while temp data is in /tmp.
Hardware and system info appear in /dev, /proc, /sys.
Mount points for external storage are /media and /mnt.
Once you know this structure, navigating Linux feels much more natural, and youâ€™ll always know where to look for programs, configurations, logs, or personal data.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Naval Kishor Upadhyay
Follow
Experienced software engineer
Location
Vienna, Austria
Joined
Aug 14, 2025
More from Naval Kishor Upadhyay
Archiving & Compression in Linux â€” From `.tar` to `.gz` and Beyond
#linux
#beginners
System Calls and Interactions in Linux
#linux
#devops
#beginners
Linux System Architecture
#linux
#beginners
#devops
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account