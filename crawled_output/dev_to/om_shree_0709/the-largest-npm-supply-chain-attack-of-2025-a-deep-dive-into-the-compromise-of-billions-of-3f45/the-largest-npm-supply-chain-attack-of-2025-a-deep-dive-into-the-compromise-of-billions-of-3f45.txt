The Largest NPM Supply Chain Attack of 2025: A Deep Dive into the Compromise of Billions of Downloads - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE—the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project — features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto—from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Om Shree
Posted on Sep 10
The Largest NPM Supply Chain Attack of 2025: A Deep Dive into the Compromise of Billions of Downloads
#news
#npm
#discuss
#learning
In the ever-evolving landscape of cybersecurity, supply chain attacks continue to pose one of the most insidious threats to software ecosystems. On September 8, 2025, the Node Package Manager (NPM) registry, a cornerstone of JavaScript development, became the epicenter of what has been described as the largest supply chain attack in its history. This incident compromised 18 popular packages, collectively boasting over 2 billion weekly downloads, and targeted cryptocurrency users by injecting malicious code designed to hijack transactions. While the attack's potential for widespread damage was immense, swift detection and response limited its real-world impact to minimal financial losses. This article explores the attack in detail, from its execution to its aftermath, drawing on insights from security researchers and affected parties.
The Genesis of the Attack: Phishing and Account Compromise
The attack began with a sophisticated social engineering tactic: a phishing email impersonating NPM support. Sent from the domain "npmjs.help" (registered on September 5, 2025), the email tricked the maintainer known as "Qix" (a reputable developer behind several high-profile packages) into resetting their two-factor authentication (2FA). This allowed the attackers to gain control of Qix's NPM account around 13:16 UTC on September 8. Once inside, the perpetrators published malicious updates to 18 packages, embedding harmful code in files like index.js.
This method bypassed traditional security measures by exploiting human trust rather than technical vulnerabilities. The phishing domain was a subtle variation on legitimate NPM communications, highlighting the ongoing challenge of developer identity as an attack vector. The rapid publication of compromised versions—immediately following the account takeover—suggests the attackers had pre-planned their payload and targets.
Affected Packages and Versions: A Billion-Download Blast Radius
The compromised packages were among the most ubiquitous in the JavaScript ecosystem, used in everything from command-line tools to web applications. Here's a comprehensive list of the affected packages and their specific malicious versions, along with their approximate weekly download counts at the time:
ansi-styles@6.2.2 (371.41 million downloads/week)
debug@4.4.2 (357.6 million)
chalk@5.6.1 (299.99 million)
supports-color@10.2.1 (287.1 million)
strip-ansi@7.1.1 (261.17 million)
ansi-regex@6.2.1 (243.64 million)
wrap-ansi@9.0.1 (197.99 million)
color-convert@3.1.1 (193.5 million)
color-name@2.0.1 (191.71 million)
slice-ansi@7.1.1 (59.8 million)
is-arrayish@0.3.3 (73.8 million)
color@5.0.1 (not specified, but part of the color suite)
color-string@2.1.1 (27.48 million)
simple-swizzle@0.2.3 (26.26 million)
supports-hyperlinks@4.1.1 (19.2 million)
has-ansi@6.0.1 (12.1 million)
chalk-template@1.1.1 (3.9 million)
backslash@0.2.1 (0.26 million)
Additionally, follow-up investigations revealed more packages tied to the same campaign, including duckdb@1.3.3, @coveops/abi@2.0.1, @duckdb/node-bindings@1.3.3, @duckdb/duckdb-wasm@1.29.2, and @duckdb/node-api@1.3.3. One outlier, proto-tinker-wc@0.1.87, was compromised later that day at 16:58 UTC, likely by the same actors.
These packages are dependencies in countless projects, including major web frameworks and tools. The sheer scale—over 1 billion downloads of the affected versions before remediation—meant the entire JavaScript ecosystem, which powers about 60% of web applications, was potentially at risk.
The Malicious Payload: A Stealthy Crypto Thief
The injected code was obfuscated to evade initial detection but, upon deobfuscation, revealed a browser-based malware focused on cryptocurrency theft. It operated by injecting itself into core browser functions such as fetch, XMLHttpRequest, and wallet APIs (e.g., window.ethereum for MetaMask-like extensions and Solana wallets).
Key behaviors included:
Network-Layer Interception: The malware poisoned page content or API payloads before they reached the application, altering data in transit.
Wallet-Layer Hooking: It corrupted transactions by modifying provider call arguments just before signing, even if the user interface displayed correct information. This made it particularly dangerous for software wallets.
Address Swapping: Using Levenshtein distance algorithms, the code replaced legitimate cryptocurrency addresses with attacker-controlled ones that appeared similar, reducing the chance of user detection during casual reviews.
Targeted Chains: Supported multiple blockchains, including Ethereum (ETH), Bitcoin (BTC, bc1...), Tron (TRX, T...), Bitcoin Cash (BCH, bitcoincash:), Litecoin (LTC, ltc1..., L.../M...), and Solana.
Stealth Features: The payload avoided obvious red flags, focusing on silent redirection of funds during transactions like approvals (function selectors: 0x095ea7b3, 0xd505accf) or transfers (0xa9059cbb, 0x23b872dd).
Indicators of compromise (IoCs) included:
Primary ETH receiver: 0xFc4a4858bafef54D1b1d7697bfb5c52F4c166976
Hard-coded address lists for various chains
Global patterns: stealthProxyControl, runmask, newdlocal, checkethereumw, neth, loval, rund
Constant Solana pubkey: 19111111111111111111111111111111
The malware activated when users visited pages incorporating the compromised packages, making it a client-side threat aimed at Web3 users engaging in DeFi or crypto transactions.
Detection, Response, and Community Mobilization
Detection occurred rapidly thanks to security firms like Aikido, whose intel feed flagged the anomalies at 13:16 UTC on September 8. JFrog and other researchers, including SlowMist, quickly analyzed the payload and shared findings. Ledger's CTO, Charles Guillemet, amplified the alert on X (formerly Twitter), advising users to halt on-chain transactions unless using hardware wallets and to verify every detail before signing.
Qix, the compromised maintainer, acted swiftly to revoke the malicious versions within about two hours, significantly containing the damage. NPM removed most affected packages, though some like simple-swizzle lingered briefly. The open-source community thwarted the attack's full potential, with many projects (e.g., Blockstream Jade, Venus Protocol, Flamingo Finance, Rango Exchange) publicly confirming they were unaffected after audits.
The Impact: A Whimper Instead of a Bang
Despite the hype, the attack's actual harm was negligible. Attackers stole only about $66 in total—roughly 5 cents in Ethereum and $20 in a memecoin—far outweighed by the response costs to organizations. The amateurish obfuscation and quick takedown prevented a Log4j-scale disaster. No major crypto ecosystems reported significant losses, though the incident disrupted development workflows and heightened paranoia among developers.
Lessons Learned and Prevention Strategies
This attack underscores the fragility of open-source supply chains. Key takeaways include:
Developer Vigilance: Treat unsolicited emails with suspicion, even from seemingly official sources. Enable multi-factor authentication beyond SMS.
Dependency Management: Use package lock files to pin versions, regularly audit dependencies, and employ tools like Aikido SafeChain for pre-install malware checks.
User Protections: Hardware wallets (e.g., Ledger) provide a critical layer of defense by allowing transaction verification on a secure device. Always double-check addresses and avoid software wallets for high-value transactions during alerts.
Ecosystem Improvements: NPM and similar registries should enhance account security, perhaps with mandatory hardware keys for high-impact maintainers. Broader adoption of software bill of materials (SBOM) and automated scanning can mitigate risks.
Redundancy Measures: Developers should maintain offline backups, rotate credentials post-incident, and clear NPM caches before reinstalling packages.
In a post-attack guide shared on X, experts emphasized breaking down prevention into auditing dependencies, using hardware wallets, and avoiding unverified sources.
Conclusion: A Wake-Up Call for Supply Chain Security
The September 2025 NPM attack, while contained, serves as a stark reminder of the interconnected risks in modern software development. With billions of downloads at stake, the incident highlights the need for collective vigilance in the open-source community. As Web3 and DeFi grow, so do the incentives for such attacks—making robust security not just an option, but a necessity. By learning from this near-miss, the ecosystem can build stronger defenses against future threats.
Top comments (4)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Anna kowoski
Anna kowoski
Anna kowoski
Follow
Senior Software Engineer with 8+ years of experience building scalable backend systems. Currently at TechWave, she specializes in cloud infrastructure, optimizing AWS and Kubernetes deployments for hi
Joined
Jun 5, 2025
•
Sep 10
Dropdown menu
Copy link
Hide
Indeed Informative!
Like comment:
Like comment:
2 likes
Like
Comment button
Reply
Collapse
Expand
Om Shree
Om Shree
Om Shree
Follow
Open-Source Contributor Shinzo Labs | MCP Blog Author Glama AI | Full-Stack Developer
Email
omshree0709@gmail.com
Location
India
Education
Jaypee University Of Information Technology
Pronouns
He/Him
Joined
Feb 27, 2025
•
Sep 10
Dropdown menu
Copy link
Hide
Thanks Ma'am Glad you liked it!
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Collapse
Expand
MAHUA VAIDYA 221030396
MAHUA VAIDYA 221030396
MAHUA VAIDYA 221030396
Follow
Joined
Sep 8, 2025
•
Sep 12
Dropdown menu
Copy link
Hide
Thats scary
Like comment:
Like comment:
2 likes
Like
Comment button
Reply
Collapse
Expand
Om Shree
Om Shree
Om Shree
Follow
Open-Source Contributor Shinzo Labs | MCP Blog Author Glama AI | Full-Stack Developer
Email
omshree0709@gmail.com
Location
India
Education
Jaypee University Of Information Technology
Pronouns
He/Him
Joined
Feb 27, 2025
•
Sep 12
Dropdown menu
Copy link
Hide
Indeed It is Ma'am
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Code of Conduct
•
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Om Shree
Follow
Open-Source Contributor Shinzo Labs | MCP Blog Author Glama AI | Full-Stack Developer
Location
India
Education
Jaypee University Of Information Technology
Pronouns
He/Him
Joined
Feb 27, 2025
More from Om Shree
📰 Major Tech News: September 17, 2025
#news
#ai
#opensource
#discuss
📰 Major Tech News of September 16, 2025
#news
#discuss
#beginners
#productivity
📰 Major Tech News of September 15, 2025
#discuss
#news
#ai
#learning
💎 DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community — A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem — the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community © 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account