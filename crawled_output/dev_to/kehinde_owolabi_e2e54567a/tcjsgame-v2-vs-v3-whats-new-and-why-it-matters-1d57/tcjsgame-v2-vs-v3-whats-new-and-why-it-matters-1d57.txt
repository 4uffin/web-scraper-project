TCJSgame v2 vs v3: What‚Äôs New and Why It Matters - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Kehinde Owolabi
Posted on Sep 18
TCJSgame v2 vs v3: What‚Äôs New and Why It Matters
#webdev
#programming
#javascript
#beginners
‚öîÔ∏è TCJSgame v2 vs v3 ‚Äî Accurate comparison, code diffs, and ratings
If you've been working with TCJSgame, you probably use v2 and are testing or migrating to v3. I dug into the actual v2 code and compared it to v3 changes. This article shows what changed, why it matters, and gives a numeric rating (out of 100) for each version across features, ease of use, and performance.
TL;DR
v2 is simple, compact, and easy to learn ‚Äî excellent for small demos and prototypes.
v3 adds camera support, tilemaps, sprites, angle-based movement, and better utilities ‚Äî a step toward a proper 2D engine.
Recommendation: For new projects start with v3. For tiny demos or compatibility needs, v2 still works.
1) Precise comparison (based on v2 code)
Loop & Timing
v2
Uses setInterval(() => this.updat(), 20) (~50 FPS).
Movement is pixels per frame, not time-based.
v3
Designed to work with requestAnimationFrame (rAF).
Supports delta-time (dt) so movement is pixels per second.
Compatible with the tcjsgame-perf.js extension for smoother gameplay.
Camera
v2
Camera class exists.
Display.updat() translates by -camera.x, -camera.y.
v3
Camera is integrated with scenes and tilemaps.
Works better with optimizations (culling, caching).
Components & Movement
v2
Component has speedX, speedY, gravity, bounce, physics, changeAngle.
move() is per-frame.
moveAngle() exists but less commonly used.
v3
Adds richer movement utilities: project, glideTo, accelerate, decelerate.
Designed to support dt-based movement for consistent speeds.
Tilemap & Sprites
v2
No TileMap.
Has a basic Sprite class for frame-based animation.
v3
New TileMap and Tile classes.
Tile collision, add/remove tiles, caching support.
Sprites integrate better with scenes.
Input & Mouse
v2
Handles keydown, keyup, mousedown, mouseup, touchstart, touchend.
Basic Mouse component exists.
v3
Improves pointer tracking.
Handles rotation and camera when checking clicks.
2) Side-by-side code snippets
A) Game Loop
v2
start(width = 480, height = 270) {
this.canvas.width = width;
this.canvas.height = height;
document.body.insertBefore(this.canvas, document.body.childNodes[0]);
this.interval = setInterval(() => this.updat(), 20);
this.addEventListeners();
}
updat() {
this.clear();
this.context.save();
this.context.translate(-this.camera.x, -this.camera.y);
update(); // global update
comm.forEach(c => { c.move(); c.update(this.context); });
this.context.restore();
}
Enter fullscreen mode
Exit fullscreen mode
v3
start(width = 480, height = 270) {
this.canvas.width = width;
this.canvas.height = height;
document.body.insertBefore(this.canvas, document.body.childNodes[0]);
this._lastTime = performance.now();
requestAnimationFrame(this._loop.bind(this));
}
_loop(timestamp) {
let dt = (timestamp - this._lastTime) / 1000;
this._lastTime = timestamp;
this.clear();
this.context.save();
this.context.translate(-this.camera.x, -this.camera.y);
if (typeof update === "function") update(dt);
comm.forEach(c => { c.move(dt); c.update(this.context); });
this.context.restore();
requestAnimationFrame(this._loop.bind(this));
}
Enter fullscreen mode
Exit fullscreen mode
B) Component Movement
v2
move() {
if (this.physics) {
this.gravitySpeed += this.gravity;
this.x += this.speedX;
this.y += this.speedY + this.gravitySpeed;
} else {
this.x += this.speedX;
this.y += this.speedY;
}
}
Enter fullscreen mode
Exit fullscreen mode
v3
move(dt = 1/60) {
if (this.physics) {
this.gravitySpeed += this.gravity * dt;
this.x += this.speedX * dt;
this.y += (this.speedY + this.gravitySpeed) * dt;
} else {
this.x += this.speedX * dt;
this.y += this.speedY * dt;
}
}
Enter fullscreen mode
Exit fullscreen mode
C) Tilemap
v2
‚ùå None
v3
class TileMap {
constructor(render, map, tile, width, height) { ... }
show() { ... }
tiles(id = 0) { ... }
crashWith(obj, id = 0) { ... }
add(id, tx, ty) { ... }
remove(tx, ty) { ... }
}
Enter fullscreen mode
Exit fullscreen mode
3) Ratings (0‚Äì100)
Engine
Features
Ease of Use
Performance
Final Score
v2
60
80
55
65/100
v3
88
75
80
81/100
Why v2 scores lower
Simple and easy to use, but lacks tilemaps and modern loop handling.
Performance suffers because it uses setInterval.
Why v3 scores higher
Adds TileMap, better camera, more movement utilities, and delta-time support.
Higher performance with requestAnimationFrame + perf extension.
Slightly harder to learn but worth it for serious projects.
Migration notes
Old code still works in v3 if you keep useDelta: false in the perf extension.
To upgrade, rewrite movement to use dt (pixels/second).
Use display.add(component, scene) and display.camera.follow(player) in v3.
Conclusion
v2 is great for quick prototypes and learning.
v3 is better for real games: smoother, faster, and feature-rich.
For best results: combine v3 with the tcjsgame-perf.js extension.
üöÄ TCJSgame is evolving ‚Äî and v3 is a huge step forward.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Kehinde Owolabi
Follow
I am the creator of TCJSgame
Location
Lagos Nigeria
Pronouns
He
Joined
Sep 5, 2025
More from Kehinde Owolabi
TCJSGame Movement Utilities: Complete Reference Guide
#webdev
#programming
#javascript
#tutorial
TCJSGame Component Class: Complete Reference Guide
#webdev
#programming
#javascript
#learning
TCJSGame Display Class: Complete Reference Guide
#webdev
#programming
#javascript
#tutorial
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account