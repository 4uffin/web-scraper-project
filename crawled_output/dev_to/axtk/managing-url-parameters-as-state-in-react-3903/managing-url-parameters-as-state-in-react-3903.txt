Managing URL parameters as state in React - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
axtk
Posted on Sep 17
Managing URL parameters as state in React
#react
#webdev
#typescript
#javascript
Since URL parameters can be regarded as a portion of an app's state, it's only reasonable to think of managing them in the React way of managing state: similarly to useState().
From this perspective, here's what handling the URL params state of, let's say, the root URL / would look like:
export const App = () => {
-
let [{coords}, setState] = useState({coords: {}});
+
let [{query}, setState] = useRouteState('/');
let setPosition = () => {
setState((state) => ({
...state,
-
coords: {
+
query: {
x: Math.floor(100 * Math.random()),
y: Math.floor(100 * Math.random()),
},
}));
};
return (
<main>
-
<Shape x={coords.x} y={coords.y}/>
+
<Shape x={query.x} y={query.y}/>
<p><button onClick={setPosition}>Move</button></p>
</main>
);
};
Enter fullscreen mode
Exit fullscreen mode
The similarity of this code to the React's useState() setup makes it familiar right away and streamlines the migration from local state to the URL params state, so it looks like a way to go.
This perspective fits well with the minimalist approach to routing I outlined in a recent post. That's why the useRouteState() hook from the code above is part of this approach, so now we can turn this code into a live demo.
In this approach, the route state can also be handled with preciser typing by introducing a type-safe URL builder url() and a zod-powered URL schema (as described in another post), although it's completely optional:
import {useRouteState} from '@t8/react-router';
import {createURLSchema} from 'url-shape';
import {z} from 'zod';
const {url} = createURLSchema({
'/shapes/:id': {
params: z.object({
id: z.coerce.number(),
}),
query: z.optional(
z.object({
x: z.coerce.number(),
y: z.coerce.number(),
})
),
},
});
export const ShapeSection = () => {
let [{params, query}, setState] = useRouteState(url('/shapes/:id'));
let setPosition = () => {
setState((state) => ({
...state,
query: {
x: Math.floor(100 * Math.random()),
y: Math.floor(100 * Math.random()),
},
}));
};
let resetPosition = () => {
setState({params});
};
return (
<main>
<h1>Shape {params.id}</h1>
<Shape x={query.x} y={query.y} n={params.id + 2}/>
<p>
<button onClick={setPosition}>Move</button>{' '}
<button onClick={resetPosition}>Reset</button>
</p>
</main>
);
};
Enter fullscreen mode
Exit fullscreen mode
View live demo
Compared to the first example, we've essentially added a URL schema definition with createURLSchema() and replaced the fixed URL '/' passed to useRouteState() as a parameter with the typed URL pattern url('/shapes/:id'). These changes resulted in params and query being resolved with preciser typing (hover over them in the playground to see their types match the schema). The structure of the code is still pretty much the same, with the route state handling equally similar to React's useState().
This minimalist approach to routing extends beyond managing URL parameters, more of its aspects are covered in the package overview.
By the way, if you're wondering if global/shared state can be managed in the useState()-like manner as well, I've got a post on that, too.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
axtk
Follow
~
Joined
Mar 23, 2025
More from axtk
Type-safe routing with less code in React
#react
#webdev
#typescript
#javascript
Fractal web app design
#webdev
#node
#javascript
#typescript
Lightweight pending state handling in React
#react
#webdev
#typescript
#javascript
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account