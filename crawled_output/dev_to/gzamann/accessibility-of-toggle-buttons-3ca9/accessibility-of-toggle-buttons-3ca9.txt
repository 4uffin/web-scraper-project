Accessibility of Toggle Buttons - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Gulshan
Posted on Sep 17
Accessibility of Toggle Buttons
#a11y
#toggle
#html
Quick Summary
A task of making a cool toggle button comes your way and you‚Äôre headed down the div lane. What happens next? Sounds like a crime thriller but it could actually be a nightmare for your users. Explore what is the best approach, how to ensure the button is accessible, and what could go wrong when you replace native HTML elements with artificial ones.
Toggle Button
To begin making a toggle button or an icon button with toggle feature, the easiest and straight forward option is to use a div and style it according to the design. Like this button here
We have a like button with a thumbs-up icon similar to what we see under social media posts, clicking it makes it active and clicking it again makes it inactive or reset. Works well visually and functionally. But right now, it has a few things missing.
Trap of Artificial Button
Since we used a div and icon to make a toggle button, it does not have the properties of a native HTML button. Which means we would miss out on these built-in features
Feature
Div
Button
Comment
Tab indexing
‚ùå
‚úÖ
Using keyboard to navigate
Button label
‚ùå
‚ùå
Users have to guess the usage by icon
Keyboard support
‚ùå
‚úÖ
Spacebar support
Default focus styles
‚ùå
‚úÖ
Semantic
‚ùå
‚úÖ
Browser doesn‚Äôt know if it is a button
Accessibility
‚ùå
‚ö†Ô∏è
Button is inherently more accessible but not totally
Form features
‚ùå
‚úÖ
These issues could affect the user experience and they are easily be overlook if not tested specifically. Even if we notice and try to fix them, we would need to manually solve them.
Addressing Accessibility
How do we solve the issues discussed above?
Well, the best solution would be to use a <button> element. Using button in place of the div will restore the built-in button features. This could affect the styles of the icon button due to the default button styles. All browser default button styles can be removed by using a CSS property all: unset, but this property removes every default style, including the focus styles which we should still keep. Alternatively we can only update the styles that are affecting our button design, such as background, margin and border.
Using a button, improves the element without any extra work. However, there are still a few more things to address
It is still a generic button element and not a toggle button
It still misses the label
ARIA tags for A11y
Toggle state
Using Labels to Clearly Describe the Button
The purpose of a button must be clear to the user. An icon on its own may not be clear enough or even accessible. Icons are graphics made of lines and shapes, and their interpretation can be highly subjective. They also limit users to understanding the control only visually.
Adding a descriptive label to the button improves accessibility, while showing the label on hover can enhance the overall user experience.
Here‚Äôs a list of things to consider for button labelling
Visible text label next to the icon - Ideally, just include a label if there‚Äôs no good reason to hide it
Hidden text in the button - Add the text in a span beside the icon and hide it using CSS
Using aria-label - Use the aria-label tag on the button to add a descriptive label
Tooltip on hover - Use a tooltip to show the label when the user interacts with the button
Toggle State
Now we have the button more accessible and working fine. But what about the toggle state? Is it accessible to every user yet? Maybe we can see it visually as the design and styles change after it is clicked and we have the state in our JS probably. But how does the browser know in which state the button is currently? So how would users with assistive tech know the state?
This is where the aria-pressed tag comes in to help. It is meant for using as a state indicator for toggle buttons. We can set the current toggle state of the button in this tag like this
<button aria-pressed="true">...</button>
Enter fullscreen mode
Exit fullscreen mode
üí°Pro-tip: Do not confuse the user by changing the content of the button when toggled. Also mentioned in MDN docs here
Downsides of Not Using Native Button
Replacing any native HTML element comes with its downsides. Native elements are recognised by the browsers and include a lot of important properties that help with a consistent cross-browser behaviour and accessibility.
Although we don‚Äôt have a dedicated toggle button in HTML but by using a generic button element with proper labels and pressed state, we can get close to the best possible solution.
TL;DR
A quick checklist for toggle/icon buttons
Basic button features (by browser)
Descriptive button label
Accessibility tags
Toggle state
Links to resources
https://design.sis.gov.uk/components/toggle-button/
https://www.w3.org/WAI/ARIA/apg/patterns/button
https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Reference/Attributes/aria-pressed
https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Reference/Roles/button_role#icon_buttons
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Some comments may only be visible to logged-in visitors. Sign in to view all comments.
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Gulshan
Follow
Frontend engineer
Location
Bangalore, India
Work
Frontend Engineer at Data For India
Joined
May 3, 2019
More from Gulshan
Web Accessibility
#a11y
#design
#inclusion
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Reading List
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Free Postgres Database
Software comparisons
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account