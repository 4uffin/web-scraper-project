Testando debounce e throttle no React com Jest [setTimeout] - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Vitor Rios
Posted on Sep 12
Testando debounce e throttle no React com Jest [setTimeout]
#jest
#testing
#react
Implementar debounce ou throttle no React √© comum em buscas, inputs e eventos de scroll. Mas testar esse comportamento pode parecer desafiador √† primeira vista ‚Äî especialmente por envolver tempo, timers ass√≠ncronos e side effects.
Neste artigo, voc√™ vai aprender:
Diferen√ßa entre debounce e throttle
Como implement√°-los no React
Como test√°-los com Jest e @testing-library/react
Como usar jest.useFakeTimers() do jeito certo
üîç O que √© debounce e throttle?
üê¢ debounce
Adia a execu√ß√£o at√© X ms ap√≥s a √∫ltima chamada.
üß† Ideal para: buscas ao digitar, auto-saves, etc.
üêá throttle
Executa no m√°ximo uma vez a cada X ms, ignorando chamadas subsequentes.
üß† Ideal para: scroll, resize, cliques r√°pidos, etc.
üß± Implementando debounce no React
// SearchInput.tsx
import { useEffect, useState } from 'react';
type Props = {
onSearch: (query: string) => void;
};
export function SearchInput({ onSearch }: Props) {
const [value, setValue] = useState('');
useEffect(() => {
const timeout = setTimeout(() => {
onSearch(value);
}, 500);
return () => clearTimeout(timeout);
}, [value, onSearch]);
return (
<input
placeholder="Search..."
value={value}
onChange={(e) => setValue(e.target.value)}
/>
);
}
Enter fullscreen mode
Exit fullscreen mode
üß™ Testando debounce com jest.useFakeTimers()
// SearchInput.test.tsx
import { render, screen, fireEvent } from '@testing-library/react';
import { SearchInput } from './SearchInput';
jest.useFakeTimers();
test('calls onSearch after debounce delay', () => {
const handleSearch = jest.fn();
render(<SearchInput onSearch={handleSearch} />);
const input = screen.getByPlaceholderText(/search/i);
fireEvent.change(input, { target: { value: 'hello' } });
// Ainda n√£o chamou
expect(handleSearch).not.toHaveBeenCalled();
// Avan√ßa 500ms
jest.advanceTimersByTime(500);
expect(handleSearch).toHaveBeenCalledWith('hello');
});
Enter fullscreen mode
Exit fullscreen mode
‚ö° Implementando throttle com lodash
// ThrottledButton.tsx
import { throttle } from 'lodash';
import { useCallback } from 'react';
export function ThrottledButton({ onClick }: { onClick: () => void }) {
const throttled = useCallback(throttle(onClick, 1000), [onClick]);
return <button onClick={throttled}>Click me fast!</button>;
}
Enter fullscreen mode
Exit fullscreen mode
üß™ Testando throttle com fake timers
// ThrottledButton.test.tsx
import { render, screen, fireEvent } from '@testing-library/react';
import { ThrottledButton } from './ThrottledButton';
jest.useFakeTimers();
test('calls onClick only once in throttle window', () => {
const handleClick = jest.fn();
render(<ThrottledButton onClick={handleClick} />);
const button = screen.getByText(/click me/i);
fireEvent.click(button);
fireEvent.click(button);
fireEvent.click(button);
expect(handleClick).toHaveBeenCalledTimes(1);
jest.advanceTimersByTime(1000);
fireEvent.click(button);
expect(handleClick).toHaveBeenCalledTimes(2);
});
Enter fullscreen mode
Exit fullscreen mode
üß† Dicas r√°pidas
Use jest.useFakeTimers() antes de renderizar o componente.
Sempre finalize com jest.useRealTimers() se for fazer outros testes depois.
Debounce pode ser testado com setTimeout; throttle exige lib como lodash ou lodash.throttle.
‚úÖ Conclus√£o
Testar debounce e throttle √© mais f√°cil do que parece quando voc√™ usa as ferramentas certas: fake timers + eventos simulados. Evite confiar apenas no comportamento visual ‚Äî escrever testes s√≥lidos √© o que garante que seu input n√£o dispare chamadas desnecess√°rias no futuro.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Vitor Rios
Follow
I'm a frontend developer, focusing on architecture, performance and creative ideas. ‚òï üßëüèª‚Äçüíª
Location
Blumenau - SC - Brazil
Work
Frontend Engineer at Codurance
Joined
May 13, 2021
More from Vitor Rios
Testando Componentes com React Hook Form + Zod
#jest
#test
#typescript
#react
Mockando Endpoints com MSW em Testes com Jest e React Query
#jest
#testing
#reactquery
#msw
Simplificando Testes com it.each no Jest
#testing
#jest
#typescript
#javascript
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
P√°gina Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
C√≥digo de Conduta
Pol√≠tica de Privacidade
Termos de Uso
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account