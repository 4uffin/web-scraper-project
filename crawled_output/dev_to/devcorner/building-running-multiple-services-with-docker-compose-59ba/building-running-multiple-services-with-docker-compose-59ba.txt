üöÄ Building & Running Multiple Services with Docker Compose - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Dev Cookies
Posted on Sep 13
üöÄ Building & Running Multiple Services with Docker Compose
#docker
#microservices
#tutorial
#devops
A Complete, End-to-End Guide for Modern Microservices
üìñ Why Docker Compose?
When you have several microservices‚Äîsay a Spring Boot API, a Node.js frontend, and a PostgreSQL database‚Äîmanually building and starting containers gets messy.
Docker Compose solves this by letting you:
Define all services in one file (docker-compose.yml)
Build images automatically from local Dockerfiles
Create a shared network so containers talk to each other by name
Scale & orchestrate them with a single command
üèóÔ∏è Project Structure
A scalable layout for two Java services and a database:
multi-service-app/
‚îú‚îÄ service-a/
‚îÇ
‚îú‚îÄ src/...
‚îÇ
‚îú‚îÄ Dockerfile
‚îÇ
‚îî‚îÄ pom.xml
‚îú‚îÄ service-b/
‚îÇ
‚îú‚îÄ src/...
‚îÇ
‚îú‚îÄ Dockerfile
‚îÇ
‚îî‚îÄ pom.xml
‚îú‚îÄ database/
‚îÇ
‚îî‚îÄ init.sql
‚îú‚îÄ .env
‚îî‚îÄ docker-compose.yml
Enter fullscreen mode
Exit fullscreen mode
Each service is independent, with its own Dockerfile and build artifacts.
üê≥ Step 1: Write Service Dockerfiles
Example service-a/Dockerfile (Spring Boot JAR):
FROM eclipse-temurin:17-jdk-alpine
WORKDIR /app
COPY target/service-a.jar app.jar
ENTRYPOINT ["java", "-jar", "/app/app.jar"]
Enter fullscreen mode
Exit fullscreen mode
Repeat similarly for service-b.
Tips
Use a .dockerignore file to skip target/ or node_modules/ for faster builds.
Pin your base images to a specific tag for reproducibility.
‚öôÔ∏è Step 2: Create a .env File
Centralize environment variables:
POSTGRES_USER=myuser
POSTGRES_PASSWORD=secret
POSTGRES_DB=mydb
SPRING_PROFILES_ACTIVE=prod
Enter fullscreen mode
Exit fullscreen mode
Docker Compose will automatically load this.
üìù Step 3: The docker-compose.yml
Here‚Äôs a production-grade Compose file that:
Builds both microservices from source
Spins up a PostgreSQL database
Assigns explicit container names
Creates a dedicated bridge network
Configures health checks and restart policies
version: "3.9"
networks:
app-net:
driver: bridge
volumes:
db-data:
services:
service-a:
container_name: service-a-container
build:
context: ./service-a
dockerfile: Dockerfile
image: myorg/service-a:latest
ports:
- "8081:8080"
networks:
- app-net
environment:
SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
DB_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
DB_USER: ${POSTGRES_USER}
DB_PASS: ${POSTGRES_PASSWORD}
depends_on:
db:
condition: service_healthy
restart: unless-stopped
healthcheck:
test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
interval: 30s
timeout: 10s
retries: 5
service-b:
container_name: service-b-container
build:
context: ./service-b
dockerfile: Dockerfile
image: myorg/service-b:latest
ports:
- "8082:8080"
networks:
- app-net
environment:
SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
SERVICE_A_URL: http://service-a:8080
depends_on:
service-a:
condition: service_healthy
restart: unless-stopped
healthcheck:
test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
interval: 30s
timeout: 10s
retries: 5
db:
container_name: postgres-container
image: postgres:15-alpine
environment:
POSTGRES_USER: ${POSTGRES_USER}
POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
POSTGRES_DB: ${POSTGRES_DB}
ports:
- "5432:5432"
volumes:
- db-data:/var/lib/postgresql/data
- ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
networks:
- app-net
healthcheck:
test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
interval: 10s
timeout: 5s
retries: 5
Enter fullscreen mode
Exit fullscreen mode
üîë Highlights
Networks: app-net gives each service a hostname equal to its service key (e.g., db, service-a).
Volumes: db-data persists database data across container restarts.
depends_on with healthcheck ensures dependent services wait until the database or other services are healthy.
Environment: pulled from .env for easy secrets management.
‚ñ∂Ô∏è Step 4: Build and Launch
From the project root:
docker compose up --build -d
Enter fullscreen mode
Exit fullscreen mode
This will:
Build myorg/service-a and myorg/service-b images.
Start three containers (service-a-container, service-b-container, postgres-container).
Attach them to the app-net network.
Check everything is running:
docker ps
docker compose logs -f
Enter fullscreen mode
Exit fullscreen mode
üîó Service-to-Service Communication
Inside app-net:
service-b can call service-a at http://service-a:8080
Both services connect to Postgres at jdbc:postgresql://db:5432/mydb
Docker‚Äôs internal DNS means no hardcoded IP addresses.
üõ†Ô∏è Useful Lifecycle Commands
Action
Command
Stop containers
docker compose stop
Restart with new code
docker compose up --build -d
Tear down everything
docker compose down
Remove images too
docker compose down --rmi all
View container logs
docker compose logs -f service-a
Scale a service (e.g. service-b)
docker compose up -d --scale service-b=3
üß∞ Best Practices & Pro Tips
Multi-Stage Builds:
Compile in a builder image, copy only the final artifact into a slim runtime image for smaller images.
Secrets Management:
For production, use Docker secrets or a vault rather than plain .env.
Monitoring & Metrics:
Integrate Prometheus/Grafana by adding services to the same network.
CI/CD Integration:
Use docker compose build in pipelines to create versioned images and push them to a registry.
Resource Limits:
Add deploy.resources.limits to control CPU and memory usage in Swarm or Compose v3+.
‚úÖ Recap
With this setup you can:
Define, build, and run multiple microservices and a database with a single command.
Give each container a clean name, dedicated network, and health checks.
Scale horizontally and manage environment configs seamlessly.
This is a one-stop, production-grade solution to bootstrap your microservice architecture with Docker Compose.
Just add more services, copy the pattern, and your stack will grow cleanly and reliably.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Dev Cookies
Follow
Passionate developer crafting code and stories for a tech-infused world. Join me on the journey of innovation and growth.
Location
India
Joined
Oct 27, 2020
More from Dev Cookies
The Complete Guide to Modern Java Map Operations: From Beginner to Advanced
#beginners
#algorithms
#tutorial
#java
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account