When Should You Use Dynamic Import in React/Next.js? (With Performance Comparison) - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Mohsen Fallahnejad
Posted on Sep 17
When Should You Use Dynamic Import in React/Next.js? (With Performance Comparison)
#nextjs
#react
#performance
#bundlesize
Dynamic import lets you lazy load components so they‚Äôre only loaded when needed, instead of bundling everything up front.
1) What is Dynamic Import?
// Static import (always in initial bundle)
import BigChart from "./BigChart"
// Dynamic import (code-split, loaded on demand)
import dynamic from "next/dynamic"
const BigChart = dynamic(() => import("./BigChart"))
Enter fullscreen mode
Exit fullscreen mode
2) Why Use It?
‚úÖ Faster initial load (smaller JS)
‚úÖ Conditional loading (only when needed)
‚úÖ Avoid SSR issues for client-only libs ({ ssr: false })
3) Good Use Cases
Heavy, optional widgets: charts, maps, rich editors, modals
Client-only libs that access window
Feature flags / A/B tests
Dashboards with many expandable panels
4) Real-World Examples
a) Rich text editor (react-quill)
import dynamic from "next/dynamic"
const RichTextEditor = dynamic(() => import("react-quill"), { ssr: false })
export default function Page() {
return (
<div>
<h1>Create Post</h1>
<RichTextEditor theme="snow" />
</div>
)
}
Enter fullscreen mode
Exit fullscreen mode
b) Charts (react-chartjs-2)
import dynamic from "next/dynamic"
const Chart = dynamic(() => import("react-chartjs-2"), { ssr: false })
export default function Dashboard() {
return (
<section>
<h2>Analytics</h2>
<Chart type="bar" data={{ labels: ["A","B","C"], datasets: [{ data: [12,19,3] }] }} />
</section>
)
}
Enter fullscreen mode
Exit fullscreen mode
5) Performance Comparison (Before vs After)
Below is a sample comparison showing how dynamic import can change bundle breakdown.
Use the measurement steps in the next section to produce your actual numbers.
Chunk/Metric
Before (static import)
After (dynamic import)
Initial JS (first load)
420 KB
240 KB
react-quill in initial bundle
170 KB
0 KB (lazy)
react-chartjs-2 in initial
95 KB
0 KB (lazy)
Route JS (dashboard page)
210 KB
80 KB
Number of JS chunks
9
13
Largest Contentful Paint (LCP)*
2.4s
1.8s
* LCP depends on network/device; treat this as illustrative. Your actual metrics may vary.
6) How to Measure It in Your App
Option A ‚Äî @next/bundle-analyzer
Install
npm i -D @next/bundle-analyzer
Enter fullscreen mode
Exit fullscreen mode
Configure next.config.js
// next.config.js
const withBundleAnalyzer = require('@next/bundle-analyzer')({
enabled: process.env.ANALYZE === 'true',
})
module.exports = withBundleAnalyzer({
// your Next.js config
})
Enter fullscreen mode
Exit fullscreen mode
Build & Analyze
ANALYZE=true next build
# Then open the generated treemaps (usually in .next/analyze) to inspect chunks.
Enter fullscreen mode
Exit fullscreen mode
Option B ‚Äî Inspect build output
next build
# Check "First Load JS shared by all" and per-route sizes in terminal output.
Enter fullscreen mode
Exit fullscreen mode
Option C ‚Äî Web Vitals in production
Track LCP/TTFB/CLS before vs after with your analytics (e.g., Vercel Web Analytics, Sentry, or custom).
7) When NOT to Use It
Small, shared UI primitives (buttons, inputs)
Components present on every route (header, footer)
Over-splitting into too many tiny chunks (extra requests/latency)
8) Cheatsheet (TL;DR)
Situation
Use Dynamic Import?
Heavy/optional components
‚úîÔ∏è Yes
Client-only libraries (need window)
‚úîÔ∏è Yes
Feature flags / A/B features
‚úîÔ∏è Yes
Always-used layout (navbar/footer)
‚ùå No
Small common components
‚ùå No
Pro tip: Pair dynamic imports with skeletons or loading placeholders so the UI feels responsive while chunks load.
Originally published on: Bitlyst
Top comments (2)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Roshan Sharma
Roshan Sharma
Roshan Sharma
Follow
üíª Tech Enthusiast | Linux & Open Source Explorer
üîß Sharing insights on Ubuntu, Debian, Docker, and DevOps tools
üêç Passionate about Python, SQL & MySQL
‚úçÔ∏è Writing tutorials, guides, and answers to m
Joined
Aug 19, 2025
‚Ä¢
Sep 17
Dropdown menu
Copy link
Hide
Great Tips!
Like comment:
Like comment:
2¬†likes
Like
Comment button
Reply
Collapse
Expand
Mohsen Fallahnejad
Mohsen Fallahnejad
Mohsen Fallahnejad
Follow
Code on #JavaScript - Frontend
Email
mohsenfallahnjd@gmail.com
Joined
Mar 12, 2020
‚Ä¢
Sep 18
Dropdown menu
Copy link
Hide
Thanks
Like comment:
Like comment:
Like
Comment button
Reply
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Mohsen Fallahnejad
Follow
Code on #JavaScript - Frontend
Joined
Mar 12, 2020
More from Mohsen Fallahnejad
React Higher-Order Components (HOC)
#react
#frontend
#pattern
#hoc
Frontend Design Patterns ‚Äî A Practical Guide
#frontend
#architecture
#react
#designpatterns
React useRef vs useState ‚Äî When to Use Which
#react
#useref
#hooks
#usestate
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account