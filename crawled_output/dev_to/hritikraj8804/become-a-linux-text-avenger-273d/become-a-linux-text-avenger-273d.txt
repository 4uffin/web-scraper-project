Become a Linux Text Avenger - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Hritik Raj
Posted on Sep 15
Become a Linux Text Avenger
#linux
#devops
#srelife
#getfitwithsagar
Drowning in gigabytes of log files? Puzzled by complex configs? In the world of DevOps and SRE, the command line isn't just a tool it's your superpower. Mastering text manipulation is the key to debugging, automation, and system administration.
Today, we're diving into a hands-on training simulation: The Linux Text Avengers Training Camp. You'll wield legendary tools like grep, sed, awk, and find to slice through data, uncover critical intel, and save your systems from chaos.
Ready to earn your cape? Let's get started. ü¶∏‚Äç‚ôÄÔ∏è
Mission Prep: Build Your Base
First, every hero needs a base of operations. Open your terminal and create your lab.
# Create and enter your training directory
mkdir ~/textlab
cd ~/textlab
Enter fullscreen mode
Exit fullscreen mode
Next, create the core intelligence file (myfile.txt) we'll be working with.
cat << EOF > myfile.txt
Line 1: This is a test file. Initializing systems...
Line 2: Administrator access granted. Beware of rogue agents.
Line 3: Memory usage: 500MB. System stable.
Line 4: Error log entry: Unauthorized access attempt detected.
Line 5: IP address: 192.168.1.100. Target server.
Line 6: Password: secret123. DO NOT SHARE.
Line 7: End of file. Mission critical.
EOF
Enter fullscreen mode
Exit fullscreen mode
Finally, let's simulate some enemy activity by creating log files.
mkdir ~/textlab/logs
echo "error: disk full. System compromised!" > ~/textlab/logs/log1.log
echo "ERROR: network down. Communications disrupted!" > ~/textlab/logs/log2.log
echo "warning: low memory. System stability threatened!" >
~/textlab/logs/log3.log
Enter fullscreen mode
Exit fullscreen mode
Operation: Text Manipulation - The Challenges
With our setup complete, it's time to tackle the challenges.
1. Decoding the Intelligence
The Mission: Display line 5 from myfile.txt to find the target IP address.
Method 1: The sed Scalpel
sed (Stream Editor) is perfect for surgical precision.
sed -n '5p' ~/textlab/myfile.txt
Enter fullscreen mode
Exit fullscreen mode
How it works: The -n flag tells sed to be quiet, and 5p explicitly prints only line 5.
Method 2: The head and tail Combo
Combine two tools for a classic one-liner.
head -n 5 ~/textlab/myfile.txt | tail -n 1
Enter fullscreen mode
Exit fullscreen mode
How it works: head grabs the first 5 lines, and tail grabs the last line of that output. Simple and effective!
2. Hunting the Target
The Mission: A rogue agent changed "Administrator" to "root". Reverse the sabotage!
First, let's simulate the sabotage: sed -i 's/Administrator/root/' ~/textlab/myfile.txt
Now, the fix:
sed -i 's/root/Administrator/' ~/textlab/myfile.txt
Enter fullscreen mode
Exit fullscreen mode
How it works: The sed -i command performs an in-place edit. The s/find/replace/ syntax substitutes "root" back to "Administrator" directly in the file. Mission accomplished.
3. Deleting Sensitive Info
The Mission: A password has been compromised! Remove the line containing "Password" from the file immediately.
sed -i '/Password/d' ~/textlab/myfile.txt
Enter fullscreen mode
Exit fullscreen mode
How it works: Again, we use sed -i for an in-place edit. The script '/Password/d' finds any line containing the pattern and deletes it. The evidence is gone.
4. System Reconnaissance
The Mission: Get a quick overview of memory usage by extracting the 6th column from the process list.
ps aux | awk '{print $6}'
Enter fullscreen mode
Exit fullscreen mode
How it works: ps aux lists all running processes. We pipe | that massive output to awk. awk is a powerful language for processing columnar data. {print $6} tells it to print only the 6th column, which is the Resident Set Size (RSS) the physical memory used by each process.
### 5. Archiving the Evidence
The Mission: Find all large log files (.log > 1MB) and archive them for later analysis.
First, let's make one of our logs big enough:
for i in {1..100000}; do echo "filler line $i" >> ~/textlab/logs/log1.log; done
Enter fullscreen mode
Exit fullscreen mode
Now, find and archive it:
find ~/textlab/logs -name "*.log" -size +1M -exec tar -czvf ~/textlab/archived_logs.tar.gz {} +
Enter fullscreen mode
Exit fullscreen mode
How it works:
find ~/textlab/logs: Searches the target directory.
-name "*.log": Looks for files ending in .log.
-size +1M: Filters for files larger than 1 Megabyte.
-exec tar ... {} +: Executes the tar command on all found files ({}). czvf tells tar to create a g*zipped, **verbose archive to the specified **f*ile.
6. Finding the Pattern
The Mission: An alarm is ringing! Count the case-insensitive occurrences of the word "error" in log1.log to gauge the severity.
grep -oi "error" ~/textlab/logs/log1.log | sort | uniq -c
Enter fullscreen mode
Exit fullscreen mode
The Ultimate Pipeline:
grep -oi "error": Finds all occurrences of "error" (case-insensitive) and prints each on its own line.
| sort: Sorts the list of errors. This is a crucial prep step for uniq.
| uniq -c: Counts the unique sorted lines and prints the count.
This one-liner instantly tells you how many of each error type you're dealing with an SRE's best friend during an outage.
Why These Skills Are Your Superpower
You didn't just run some commands; you trained in the core arts of system administration.
Debugging Outages: grep | sort | uniq -c is your go-to for finding the needle in a haystack of logs.
Security Audits: grep "password" or find / -name "*.bak" helps you find insecure files and secrets.
Automation: sed is the engine behind countless scripts that modify configuration files on the fly.
Confidence: Knowing these tools means no system, container, or cloud instance is a black box.
Keep practicing, stay curious, and soon you'll be the one they call when the servers go down.
What are your favorite command-line text processing tricks? Share them in the comments below!
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Hritik Raj
Follow
Pre-final yr Student | Open Source Developer | DevOps
Location
Bihar, India
Education
Self
Pronouns
He/Him
Work
Pre-final year College Student
Joined
Oct 31, 2023
More from Hritik Raj
Setting Up Multiple Static Sites on One Apache Server
#linux
#webdev
#devops
#virtualmachine
Unlocking CI/CD Power: My Journey with GitHub Self-Hosted Runners (DevOps SRE Challenge Day 7)
#devops
#githubactions
#cicd
#aws
From Code to Container: Building a Python Flask CI/CD Pipeline on Windows with Jenkins
#getfitwithsagar
#srelife
#devopsforall
#cicd
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
P√°gina Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
C√≥digo de Conduta
Pol√≠tica de Privacidade
Termos de Uso
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account