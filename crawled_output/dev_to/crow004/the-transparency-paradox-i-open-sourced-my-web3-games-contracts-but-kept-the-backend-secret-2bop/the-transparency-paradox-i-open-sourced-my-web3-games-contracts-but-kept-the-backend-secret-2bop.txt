The Transparency Paradox: I Open-Sourced My Web3 Game's Contracts, But Kept The Backend Secret. Here's Why. - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE—the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project — features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto—from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
crow
Posted on Sep 17
The Transparency Paradox: I Open-Sourced My Web3 Game's Contracts, But Kept The Backend Secret. Here's Why.
#web3
#solidity
#buildinpublic
#gamedev
There's a moment of sheer terror that every Web3 founder faces. It's not the fear of a bug, a market crash, or an empty Discord. It's the moment you hover your mouse over the "Make Public" button on your source code repository.
For months, this code has been your secret. Your intellectual property. Your competitive edge. Making it public feels like you're not just opening the door to your house; you're handing out the blueprints and a set of keys.
Today, I did just that for my on-chain game, Musical Chairs. The smart contracts that govern the game, hold the funds, and define the rules are now fully open source. But the backend code that runs the game logic remains proprietary.
This isn't a compromise. It's a strategy. And it's at the very heart of the Web3 paradox: how to build a transparent, trustless system without giving away the kingdom.
The Web3 Promise: Trust, Don't Verify? No, Trust Because You Can Verify.
In the world of Web2, the "secret sauce" is everything. In Web3, the secret sauce is that there is no secret sauce on-chain. The core value proposition of our entire industry is that users don't have to trust a person or a company; they can trust the code.
But they can only trust the code if they can see it.
A closed-source smart contract handling user funds is a massive red flag. It asks for blind faith in a space designed to eliminate it. That's why, as a foundational step, I've open-sourced all the smart contracts for Musical Chairs under the MIT license.
➡️ You can view them all here: github.com/crow-004/musical-chairs-contracts
This means anyone can now verify that our game does exactly what it says on the tin. No backdoors. No hidden fees. No "rug-pull" functions. Just code.
The Fear is Real: "But What About the Hackers?"
The first thought that paralyzes any developer is: "By showing everyone the locks, am I just giving hackers the keys?"
It's a valid fear. But the concept of "security through obscurity" is a myth that has been debunked time and time again. A determined attacker can decompile your bytecode. Hiding your source code only stops the good guys from helping you.
I learned this firsthand. A few days ago, a white-hat hacker named Harun reached out. He had found a vulnerability—not in the contract, but in the domain's DNS configuration, which could have allowed for email spoofing and sophisticated phishing attacks. He didn't exploit it; he reported it responsibly. We fixed it and rewarded him for his efforts.
This is the power of "many good eyes" over the "one bad actor." By opening the code, you aren't just inviting scrutiny; you are inviting a global, decentralized security team to help you build a stronger fortress.
A Developer's Guide to Provable Code
Opening your code is step one. Step two is proving that the open-source code is the exact code running on the blockchain. This is where many developers stumble.
The key lies in a humble file your compiler generates: metadata.json.
Think of this file as your contract's "digital passport." It contains the compiler version, settings, and hashes of all your source files. When you upload this file and your source code to a service like Sourcify, it can recompile your code and verify, with cryptographic certainty, that it produces the exact same bytecode that's on-chain. This is the ultimate "social proof" in our industry—or more accurately, verifiable proof.
If you're using Hardhat, extracting this metadata is simple. You can create a small task like this:
// file: hardhat.config.ts
import { task } from "hardhat/config";
import * as fs from "fs";
import * as path from "path";
task("export-metadata", "Exports the metadata file for a contract")
.addParam("contract", "The fully qualified name of the contract (e.g., 'contracts/MyContract.sol:MyContract')")
.setAction(async (taskArgs, hre) => {
const buildInfo = await hre.artifacts.getBuildInfo(taskArgs.contract);
if (buildInfo) {
const [sourceName, contractName] = taskArgs.contract.split(":");
const metadata = buildInfo.output.contracts[sourceName]?.[contractName]?.metadata;
if (metadata) {
fs.writeFileSync('metadata.json', metadata);
console.log("✅ Metadata exported!");
}
}
});
Enter fullscreen mode
Exit fullscreen mode
Running npx hardhat export-metadata --contract "contracts/MusicalChairs.sol:MusicalChairsGame" gives you the exact file you need. This small step is what separates "source-available" from "source-verified."
The Strategy: The "Transparent Core" Model
So, if transparency is so important, why isn't the backend code public?
Because my goal is to build a sustainable business, not just a weekend project. The smart contracts are the "Transparent Core." They are the public constitution, the immutable laws of the game that protect the user.
The backend, however, is the "Proprietary Engine." It contains the unique logic for player matchmaking, real-time communication, anti-bot measures, and performance optimizations. This is our competitive advantage. Open-sourcing it at this early stage would be like a Formula 1 team publishing the blueprints to their engine mid-season. A larger, better-funded team could simply copy it and out-market us into oblivion.
This hybrid approach provides the best of both worlds: on-chain trust and off-chain competitive advantage.
The Road Ahead: Audits and Accountability
My commitment to transparency doesn't stop here. This is a journey, and we're #buildinginpublic.
While the backend code will remain closed for now, I want to provide assurances of its integrity. That's why, once the game starts generating meaningful revenue, the very first investment will be a professional, third-party audit of the backend code by a reputable cybersecurity firm. The goal will be to get a public report confirming that the server-side logic is fair, secure, and contains no malicious functions.
This is how you build a real business in Web3. Not by hiding, but by layering proofs of integrity, one on top of the other.
This journey is terrifying, exhilarating, and deeply rewarding. If you're a developer on the fence about opening your code, I hope my story helps. It's not about giving everything away. It's about building trust in a trustless world. And that, ultimately, is the most valuable asset you can have.
Top comments (1)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Umang Suthar
Umang Suthar
Umang Suthar
Follow
CTO @ fxis.ai | Core dev @ haveto.com | Building backend-free, on-chain infra for AI at scale. Focused on shipping clean, powerful tools that make complex systems effortless for devs.
Location
Ahmedabad, India
Work
CTO and core developer at fxis.ai | haveto.com
Joined
Jun 27, 2025
•
Sep 19
Dropdown menu
Copy link
Hide
Really enjoyed this post, the way you described the “Transparent Core” vs. “Proprietary Engine” makes a lot of sense. Striking that balance between openness and sustainability is tough but necessary in Web3. We’ve been thinking about the same challenge at Haveto, especially around AI, making computations verifiable on-chain while still letting teams protect their edge. Love seeing others approach transparency in such a thoughtful way.
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Code of Conduct
•
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
crow
Follow
Creator of Musical Chairs Game, an on-chain game built with AI. Exploring the future of Web3.
Joined
Aug 20, 2025
More from crow
# How I Built a Fully Decentralized On-Chain Game with 0 Lines of Code, Thanks to Gemini
#blockchain
#web3
#go
#showdev
💎 DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community — A space to discuss and keep up software development and manage your software career
Página Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
Código de Conduta
Política de Privacidade
Termos de Uso
Built on Forem — the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community © 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account