My Proven Code Review Method for Finding Bugs Others Miss - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Shandor Sharvari
Posted on Sep 25
‚Ä¢ Originally published at shandor-sharvari.Medium
My Proven Code Review Method for Finding Bugs Others Miss
#codereview
#experience
#productivity
#codequality
What Most Code Reviews Actually Catch
Most code review comments focus on conventions, variable names, styling, indentation, and missing unit tests. Simple and obvious mistakes are flagged too. Less frequently, reviewers comment on project and code structure, unhandled exceptions, basic optimizations, patterns, and best practices.
What Code Reviews Often Miss ‚Äî And Why
But errors in algorithms and complex business logic are rarely highlighted during code reviews, along with performance bottlenecks and missed acceptance criteria. While these are difficult to catch, some can be spotted during code reviews, though they often require advanced approaches. Every issue found early significantly reduces the cost of fixing it and speeds up delivery.
So why do we usually miss these issues?
I think the main reasons are:
CR tools display code differently from IDEs we‚Äôre used to. Fonts, colors, and backgrounds don‚Äôt match, so our brains don‚Äôt focus in the same way.
Reviewers often read the code file-by-file in the order it appears in the CR. This can hide structure, context, dependencies, and execution order.
Little time is allocated for CRs. Everyone is busy with their own tasks.
Static code analysis, compilation warnings, and other advanced IDE features aren‚Äôt available in CR tools.
My Deep Review Workflow for Complex Changes
For small changes in familiar code, this isn‚Äôt a problem. But for brand-new apps, complex business logic, or deep refactoring, reading the code in a CR tool is not enough.
In those cases, I take the ‚Äúhard way‚Äù:
Read the user story and acceptance criteria.
Review the code in the CR tool to understand the scope and spot complex areas.
Open the branch in my IDE and build it. Compiler warnings and static analysis suggestions are good indicators of areas to improve. For some reason, many of them are ignored during development.
Review from the entry point (for example, a Web API endpoint) or from updated business logic, following the runtime flow. Check the caller code too if it‚Äôs present.
Sometimes, it‚Äôs useful to open the documentation or even the third-party library code to ensure correct usage (e.g., if the thrown exceptions are handled in our code).
If I suspect input or edge case issues, I run the app and test it quickly, or even debug it.
Use an AI agent to analyze the code. Here I‚Äôve shared useful AI prompts for it.
Check the code coverage.
This approach is complicated and time-consuming. It may take hours, but it‚Äôs usually worth it.
How I Write Review Comments
How I write comments matters too:
I explain my reasoning and sometimes link to docs or articles.
For repeating issues, I refer to the first comment or note that the fix applies in multiple places.
If I‚Äôm unsure about the code‚Äôs purpose or correctness, I ask for clarification in my comment.
I suggest authors mark comments as completed or reply to them as ‚Äúdone‚Äù rather than resolving them immediately, so I can double-check before approving the change.
Sometimes I have a short call with the author after the review.
And how do you approach complex code reviews? What do you focus on?
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Shandor Sharvari
Follow
Location
Budapest, Hungary
Work
Solution and .NET Architect, Team Lead, Software Engineer
Joined
Jun 19, 2024
More from Shandor Sharvari
My Favorite AI Prompts for Code Analysis and Optimization
#ai
#performance
#productivity
#codequality
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account