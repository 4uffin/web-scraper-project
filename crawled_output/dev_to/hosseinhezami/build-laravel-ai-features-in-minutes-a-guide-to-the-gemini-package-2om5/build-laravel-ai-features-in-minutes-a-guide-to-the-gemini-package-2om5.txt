Build Laravel AI Features in Minutes: A Guide to the Gemini Package - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Hossein Hezami
Posted on Sep 12
Build Laravel AI Features in Minutes: A Guide to the Gemini Package
#laravel
#gemini
#ai
#api
Tired of reading docs and just want to see the code? Let's dive straight into how you can use the hosseinhezami/laravel-gemini package to add powerful AI features to your Laravel application. The API is clean, fluent, and incredibly powerful.
Installation & Setup
First, get the package.
composer require hosseinhezami/laravel-gemini
Enter fullscreen mode
Exit fullscreen mode
Publish the config file and set your API key.
php artisan vendor:publish --tag=gemini-config
Enter fullscreen mode
Exit fullscreen mode
# .env
GEMINI_API_KEY=your_gemini_api_key_here
Enter fullscreen mode
Exit fullscreen mode
Code Examples: See It in Action
1. Basic Text Generation & Chat
The TextBuilder makes generating text or creating a chat interface simple.
use HosseinHezami\LaravelGemini\Facades\Gemini;
// Simple prompt
$response = Gemini::text()
->prompt('Write a tagline for a developer blog.')
->generate();
echo $response->content();
// Chat with history
$history = [
['role' => 'user', 'parts' => [['text' => 'Hello!']]],
['role' => 'model', 'parts' => [['text' => 'Hi there! How can I help?']]]
];
$response = Gemini::text()
->prompt('Whatâ€™s the weather like?')
->history($history)
->temperature(0.7)
->generate();
echo $response->content();
Enter fullscreen mode
Exit fullscreen mode
2. Structured Data Extraction
Need consistent JSON output from a messy prompt? Use structuredSchema.
$response = Gemini::text()
->structuredSchema([
'type' => 'object',
'properties' => [
'sentiment' => [
'type' => 'string',
'enum' => ['positive', 'negative', 'neutral']
],
'confidence' => ['type' => 'number'],
'key_points' => {
'type' => 'array',
'items' => {'type' => 'string'}
}
],
'required' => ['sentiment']
])
->prompt('The product is amazing but the delivery was late. I love the features though.')
->generate();
$analysis = json_decode($response->content());
// $analysis->sentiment, $analysis->key_points, etc.
Enter fullscreen mode
Exit fullscreen mode
3. Image Generation
Generate images from a text description.
$response = Gemini::image()
->prompt('A minimalist logo for a tech startup called "Nexus", using blue and green')
->generate();
// Save the generated image directly
$response->save(storage_path('app/logo.png'));
Enter fullscreen mode
Exit fullscreen mode
4. Document Understanding
Upload a file (PDF, DOC, image) and ask questions about it.
// First, upload the file to Gemini's servers
$fileUri = Gemini::files()->upload('document', $pathToInvoicePdf);
// Then, use it in a prompt
$response = Gemini::text()
->upload('document', $pathToInvoicePdf) // or use the $fileUri
->prompt('What is the total amount due on this invoice?')
->generate();
echo $response->content();
Enter fullscreen mode
Exit fullscreen mode
5. Text-to-Speech (Audio)
Generate spoken audio from text.
$response = Gemini::audio()
->prompt('Welcome to our application. We are thrilled to have you on board.')
->voiceName('Kore') // Check docs for available voices
->generate();
// The package smartly handles the binary response,
// allowing you to save it directly.
$response->save(public_path('audio/welcome.mp3'));
Enter fullscreen mode
Exit fullscreen mode
6. Real-Time Streaming
Crucial for building chat interfaces that feel fast and responsive.
// In your controller (e.g., app/Http/Controllers/ChatController.php)
public function stream(Request $request)
{
return response()->stream(function () use ($request) {
Gemini::text()
->model('gemini-2.5-flash-lite') // Use a fast model for streaming
->prompt($request->query('message'))
->stream(function ($chunk) {
$text = $chunk['text'] ?? '';
if (connection_aborted()) return;
echo "data: " . json_encode(['text' => $text]) . "\n\n";
ob_flush();
flush();
});
}, 200, [
'Content-Type' => 'text/event-stream',
'Cache-Control' => 'no-cache',
'Connection' => 'keep-alive',
'X-Accel-Buffering' => 'no',
]);
}
Enter fullscreen mode
Exit fullscreen mode
Ready to Build?
This is just the surface. The package also handles video generation, embeddings, and full file management.
For complete documentation, check out the official docs:
https://hosseinhezami.github.io/laravel-gemini/
Source:
https://github.com/hosseinhezami/laravel-gemini
https://packagist.org/packages/hosseinhezami/laravel-gemini
What will you build first? Let me know in the comments! ðŸ‘‡
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Hossein Hezami
Follow
Web Developer
Location
New York
Joined
Aug 2, 2019
More from Hossein Hezami
Master Role-Based Access Control with Laravel Permission Manager
#laravel
#permission
#php
#acl
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account