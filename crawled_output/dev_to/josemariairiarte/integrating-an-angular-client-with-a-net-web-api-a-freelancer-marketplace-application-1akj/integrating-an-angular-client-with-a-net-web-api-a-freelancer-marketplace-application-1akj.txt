Integrating an Angular Client with a .NET Web API ‚Äì A Freelancer Marketplace Application - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Jose Maria Iriarte
Posted on Sep 17
Integrating an Angular Client with a .NET Web API ‚Äì A Freelancer Marketplace Application
#dotnet
#angular
#api
#learning
Building full-stack applications is always an exciting challenge, especially when you want to create something original while sharpening your technical skills. Over the past weeks, I worked on a project that combines Angular 17/18 on the frontend with a .NET 8 Web API on the backend: a Freelancer Marketplace application.
tigerbluejay
/
Angular-.Net-Integration-Freelancer-Marketplace-App
.NET 8 API with Angular 17 Client - An application for freelancers and their clients to work together
üíº Freelancer Marketplace
A full-stack freelancer marketplace web application built with ASP.NET 8 Web API and Angular 18. Users can register, login, and participate with three distinct roles: Administrator, Client, and Freelancer. Freelancers can create profiles, manage portfolios, browse and apply for projects, and chat with clients in real-time. Clients can post projects, manage proposals, and collaborate with freelancers. Admins can manage users and enforce platform rules.
üöÄ Features
‚úÖ User Registration & Login
Secure authentication using JWT tokens
Role-based authorization (Admin / Client / Freelancer)
‚úÖ Freelancer Features
Profile management with editable details
Create, edit, delete portfolio items (title, description, photo) with pagination
Browse projects and filter by required skills (5 distinct skills available)
Submit proposals for projects
View submitted proposals (filter by Approved / Rejected / Pending)
Approved proposals automatically generate active projects and enable real-time chat with clients
Messaging system with unread counters, last message preview, timestamps‚Ä¶
View on GitHub
This project was born as both a learning exercise and a way to showcase how to bring together two powerful frameworks. The app integrates authentication, role-based navigation, data persistence, pagination, SignalR for live chat and presence, and various UX touches like modals, guards, and notifications. It is a real-world scenario where clients and freelancers interact on a platform, with administrators keeping the ecosystem in check.
Why a Freelancer Marketplace?
Rather than building a generic CRUD app, I wanted something closer to a real-world product. A freelancer marketplace is perfect because it naturally involves multiple roles, dynamic interactions, and workflows that push both the API and the Angular client beyond the basics.
The application defines three distinct roles:
Freelancer: builds a profile, adds portfolio items, browses projects, submits proposals, and chats with clients when proposals are approved.
Client: creates projects, manages incoming proposals, and collaborates with freelancers.
Admin: oversees the platform with a panel to enable/disable user accounts and monitor online presence in real-time.
Each role has its own dedicated navigation bar and tailored user experience.
Angular Meets .NET
The project began in Angular 17 and was later migrated to Angular 18, making it a good case study for keeping frontend dependencies modern and compatible. On the backend, .NET 8 Web API provides authentication (JWT), persistence with EF Core and SQLite, and real-time capabilities with SignalR.
Some highlights of the integration:
Authentication & Authorization: JWT tokens handled in Angular via interceptors, with client-side guards preventing unauthorized or disabled users from accessing the app.
CRUD + Pagination: Portfolio items, projects, and proposals are paginated for smooth browsing.
SignalR Integration: Real-time chat between freelancers and clients, with unread message counters, presence indicators, and autoscrolling conversations.
User Experience: Angular guards warn against unsaved changes, modals confirm critical actions, and toasters provide feedback.
Lessons Learned
A few insights emerged while building the marketplace:
Folder structure matters: I started with every Angular component in its own folder. While not perfectly organized, it still worked. The project reminded me that iteration and refactoring are natural parts of learning.
Angular and .NET pair well: The synergy between Angular‚Äôs reactive front-end design and .NET‚Äôs structured API made development smooth. Once authentication and SignalR were configured, everything else clicked together.
Real-world scenarios force depth: Unlike toy projects, building a freelancer marketplace required thinking through workflows: proposals, approvals, active projects, and messaging. This depth made the integration feel authentic.
Why This Matters
If you‚Äôre learning full-stack development, there‚Äôs tremendous value in picking a project idea that excites you and has practical complexity. You‚Äôll encounter the kind of challenges that surface in professional applications: handling state, ensuring security, designing APIs for multiple roles, and maintaining clarity in the codebase.
This project is more than just a tutorial exercise‚Äîit‚Äôs a working demonstration of how Angular and .NET can power a modern, role-based platform where real-time collaboration is central.
Closing Thoughts
The Freelancer Marketplace app gave me the chance to practice integration between Angular 17/18 and .NET 8, explore SignalR real-time communication, and think carefully about user roles and workflows.
For anyone building similar projects, I‚Äôd recommend starting small but choosing an application idea with enough moving parts to stay engaging. That‚Äôs how you grow not only as a developer, but also as a designer of systems that make sense to real people.
Take the Next Step
If this article helped you understand how Angular can consume a .NET API service in a real-world application, here's how you can continue your journey:
üìÅ Explore the GitHub Repository ‚Äì Dive into the repository to examine the Angular app and the API integration. Follow along with the code to reinforce your understanding of consuming and interacting with APIs in .NET.
üí° Share the Knowledge ‚Äì Know someone who‚Äôs learning to work with .NET APIs or Angular? Share this guide with them to help them accelerate their learning and improve their skills.
üñ• Start Coding ‚Äì The best way to grasp these concepts is by getting hands-on. Take the provided code and experiment with adding new features or integrating other APIs.
üëç Like the Repository ‚Äì If you find the project helpful, give it a thumbs-up! This will help others discover the repository and benefit from it too.
By engaging with this tutorial and project, you'll build a strong foundation in .NET API, Angular Client integration, ready to implement these skills in real-world applications.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Jose Maria Iriarte
Follow
I explore software, cognition, and creativity. I'm a bilingual English-Spanish .NET developer with experience in C# application development using .NET Framework and .NET Core.
Location
Buenos Aires, Argentina
Education
Colorado College, Georgetown, Johns Hopkins
Work
Software Developer - .NET
Joined
Oct 15, 2022
More from Jose Maria Iriarte
Mental Math Hacks: Swift Estimations of Powers and Roots for Programmers
#productivity
#learning
#math
Optimizing Mental Math: Fast Multiplications and Divisions for Software Engineers
#math
#productivity
#learning
Low-Latency Mental Math: Quick Additions and Subtractions for Software Developers
#learning
#math
#productivity
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Reading List
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Free Postgres Database
Software comparisons
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account