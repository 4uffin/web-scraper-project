PHP 8.5: The Version That Will Actually Makes Life Easier - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE—the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project — features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto—from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Muhammad Usman
Posted on Sep 24
PHP 8.5: The Version That Will Actually Makes Life Easier
#webdev
#php
#laravel
#programming
The Developer-Friendly Upgrade You’ve Been Waiting For
PHP 8.5 is out soon, and honestly, it’s one of those releases that makes me excited as a developer. Some of the features are small, but they just feel so right, you know? I’m talking about stuff that just makes your life easier every single day. Let me take you through it.
Pipe Operator: No More Temporary Variables
The pipe operator, you’ve probably seen it floating around in tweets and RFCs. And yes, it’s actually useful.
Imagine this: you have a function called sendEmail. It takes an email address, but before you send it, you want to clean it up. Trim spaces, make it lowercase… usual stuff. Before PHP 8.5, you might do something like this:
$email = "
TEST@EXAMPLE.COM
";
$email = trim($email);
$email = strtolower($email);
sendEmail($email);
Enter fullscreen mode
Exit fullscreen mode
Temporary variables, reassignments, all that noise. Now with the pipe operator:
"
TEST@EXAMPLE.COM
"
|> trim()
|> strtolower()
|> sendEmail();
Enter fullscreen mode
Exit fullscreen mode
No temporary variables, everything flows left to right. Makes your code so much cleaner.
No Discard Attribute: Stop Ignoring Return Values
Next up, #[NoDiscard]. This is actually amazing. Sometimes you call a function, and you must use the return value, but people (or even yourself) might forget. PHP 8.5 can now warn you if you ignore it.
#[NoDiscard]
function getName(): string {
return "Nuno";
}
Enter fullscreen mode
Exit fullscreen mode
If you do this:
getName(); // PHP will warn you: "Hey, you should use the return value!"
Enter fullscreen mode
Exit fullscreen mode
It forces you to handle the result or explicitly cast to void if you really mean to ignore it. Honestly, this one is top three features for me. You combine this with the pipe operator, and you can write clean, safe chains without warnings.
Closures in Constant Expressions
PHP 8.5 now lets you use static closures in places that only accept compile-time values. Class constants, default property values, attribute arguments… you can now use closures in all of them.
class Example {
public const VALIDATOR = static function($value) {
return !empty($value);
};
}
Enter fullscreen mode
Exit fullscreen mode
Before, this would fail, now it works. You can literally attach reusable logic directly to constants or attributes. This is huge for frameworks like Laravel that use a lot of validation or metadata.
Array Helpers: array_first() and array_last()
You know how annoying it was to get the first or last element of an array? I mean, PHP has reset() and end(), but they move the internal pointer. Now we have:
$users = ["Adrian", "Maria", "Pedro"];
Enter fullscreen mode
Exit fullscreen mode
$first = array_first($users); // Adrian
$last = array_last($users);
// Pedro
Enter fullscreen mode
Exit fullscreen mode
It’s simple, intuitive, and doesn’t mess with your array pointer. Little change, big difference.
Global Constants with Attributes
Another subtle one. PHP 8.5 now lets you add attributes to global constants. Before, this was impossible. Now, you can do something like:
#[Deprecated("Use NEW_CONSTANT instead")]
const OLD_CONSTANT = 42;
Enter fullscreen mode
Exit fullscreen mode
Try echoing it:
echo OLD_CONSTANT; // 42 + deprecation warning
Enter fullscreen mode
Exit fullscreen mode
It’s basically metadata for constants. If your framework or package uses constants for configuration, you can now attach extra info cleanly.
Get Exception Handler
For framework developers, this one is neat. PHP 8.5 introduces get_exception_handler(). If you’ve ever used set_exception_handler(), you know it’s hard to inspect the existing closure. Now, you can actually grab it:
set_exception_handler(fn($e) => echo "Caught: " . $e->getMessage());
$handler = get_exception_handler();
var_dump($handler);
Enter fullscreen mode
Exit fullscreen mode
Perfect for logging, debugging, or even modifying exception handling at runtime. Frameworks like Laravel could make real use of this for global error handling.
Intel List Formatter
And here’s a fun one: IntlListFormatter. Not something you’d use every day, but when you need it, it’s perfect. You can take a list and format it according to locale rules.
$formatter = new \Intl\IntlListFormatter('en', \Intl\IntlListFormatter::TYPE_AND);
echo $formatter->format(['Lisbon', 'Porto', 'Coimbra']); // "Lisbon, Porto, and Coimbra"
Enter fullscreen mode
Exit fullscreen mode
It handles “and”, “or”, and other localized ways of formatting lists automatically. Nice little quality-of-life improvement for internationalized apps.
Minor Internal and CLI-Only Improvements
Even the small improvements in PHP 8.5 make a difference, especially if you work with the CLI or care about internal debugging and configuration.
1. php.ini Diff (PHP-IN-DIFF)
Ever wish you could quickly see which settings you’ve changed from the default PHP configuration? PHP 8.5 makes this super easy with a new CLI command:
php -i --diff
Enter fullscreen mode
Exit fullscreen mode
This shows you exactly which php.ini options differ from the defaults. For example, I always increase memory limits and disable timeouts for scripts while testing:
memory_limit = -1
max_execution_time = 0
Enter fullscreen mode
Exit fullscreen mode
Before, you had to manually compare or scroll through phpinfo(). Now it’s literally built-in. Such a small, but life-saving improvement for anyone debugging PHP setups.
2. PHP Build Date Constant
PHP 8.5 introduces a new constant that tells you exactly when the binary was built. Want to check?
echo PHP_BUILD_DATE;
Enter fullscreen mode
Exit fullscreen mode
Output:
2025-09-17 14:32:00
Enter fullscreen mode
Exit fullscreen mode
It’s perfect if you’re running multiple PHP binaries or want to verify the version/build you’re using. Nothing groundbreaking, but again, quality-of-life.
3. Final Property Promotion
PHP 8.5 improves property promotion with the ability to mark individual properties as final. You could already make an entire class final, but now you can target specific properties in your constructor:
class User {
public function __construct(
final public string $username,
public string $email
) {}
}
Enter fullscreen mode
Exit fullscreen mode
Now $username cannot be overridden in subclasses. It’s subtle, but for codebases where immutability matters, this is a huge clarity win.
4. CLI and Debugging Tweaks
Other minor improvements include:
Better default error reporting when using php -d overrides.
Cleaner warnings for deprecated features in CLI mode.
Small optimizations under the hood that make scripts run slightly faster or consume less memory in edge cases.
None of these require code changes, but if you’re a framework developer or DevOps person, they make day-to-day PHP usage smoother.
Why Even Minor Changes Matter
Here’s the thing: PHP 8.5 isn’t just about flashy features. Even small internal improvements and CLI tweaks reduce friction in your workflow. That’s the real magic here, less time fighting configuration, more time writing code that actually does something.
Final Thoughts
PHP 8.5 is packed with quality-of-life features. Not every one of them will change your world, but together they make the language smoother, safer, and more enjoyable.
Pipe operator: clean chains, no temp variables.
NoDiscard: never ignore important return values again.
Closures in constants: attach logic anywhere at compile time.
Array helpers: easy access to first and last elements.
Attributes on constants: add metadata cleanly.
Exception handler inspection: framework-friendly.
Intl list formatter: smart, localized lists.
PHP 8.5 feels like one of those releases that makes you happy to write PHP again. It’s not flashy, but it’s clever, practical, and developer-first.
If you haven’t checked it out yet, start testing the beta. I guarantee some of these features will make their way straight into your daily coding habits.
— — — — — — — — — — — — — — — — — — — — — —
Did you learn something good today?
Then show some love. 🫰
© Muhammad Usman LinkedIn
WordPress Developer | Website Strategist | SEO Specialist
Don’t forget to subscribe to Developer’s Journey to show your support.
Top comments (6)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
HomelessCoder
HomelessCoder
HomelessCoder
Follow
Software engineer. Wandering around the world.
Joined
Sep 22, 2025
•
Sep 25
Dropdown menu
Copy link
Hide
Finally, array_first and array_last! 🙌 Great article, @web_dev-usman
I'm trying to wrap my head around the implications of closures in constants. My biggest concern is that it might encourage improper usage, leading to code with undefined or leaky boundaries.
Like comment:
Like comment:
2 likes
Like
Comment button
Reply
Collapse
Expand
david duymelinck
david duymelinck
david duymelinck
Follow
Learned to code in the wild west time of php 4, also the time xml and xpath where the new hot thing.
Location
Belgium
Joined
Sep 24, 2019
•
Sep 25
Dropdown menu
Copy link
Hide
Every feature has the possibility of improper usage.
I think the example is not the most useful one. The more useful example is when the closure is paired with an attribute.
Instead of having to create a one-of function or instance somewhere in the application, it is now possible to do it as an attribute argument.
final class Locale
{
#[Validator\Custom(static function (string $languageCode): bool {
return \preg_match('/^[a-z][a-z]$/', $languageCode);
})]
public string $languageCode;
}
Enter fullscreen mode
Exit fullscreen mode
you can see more examples here.
Like comment:
Like comment:
3 likes
Like
Comment button
Reply
Collapse
Expand
Muhammad Usman
Muhammad Usman
Muhammad Usman
Follow
Building High-Performing, User-Centric Websites 3x Faster | WordPress Developer with 4+ Years of Experience
Location
Lahore, Punjab, Pakistan
Education
BS Computer Science FROM bahauddin zakariya university
Work
WordPress Developer @ Coding Crafts
Joined
Nov 22, 2024
•
Sep 25
Dropdown menu
Copy link
Hide
Thanks for your feedback.
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Collapse
Expand
Muhammad Usman
Muhammad Usman
Muhammad Usman
Follow
Building High-Performing, User-Centric Websites 3x Faster | WordPress Developer with 4+ Years of Experience
Location
Lahore, Punjab, Pakistan
Education
BS Computer Science FROM bahauddin zakariya university
Work
WordPress Developer @ Coding Crafts
Joined
Nov 22, 2024
•
Sep 25
Dropdown menu
Copy link
Hide
Thanks...
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Collapse
Expand
Muhammad Usman
Muhammad Usman
Muhammad Usman
Follow
Building High-Performing, User-Centric Websites 3x Faster | WordPress Developer with 4+ Years of Experience
Location
Lahore, Punjab, Pakistan
Education
BS Computer Science FROM bahauddin zakariya university
Work
WordPress Developer @ Coding Crafts
Joined
Nov 22, 2024
•
Sep 24
Dropdown menu
Copy link
Hide
“Closures in Constant Expressions” Hell Yeah!
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Collapse
Expand
Muhammad Usman
Muhammad Usman
Muhammad Usman
Follow
Building High-Performing, User-Centric Websites 3x Faster | WordPress Developer with 4+ Years of Experience
Location
Lahore, Punjab, Pakistan
Education
BS Computer Science FROM bahauddin zakariya university
Work
WordPress Developer @ Coding Crafts
Joined
Nov 22, 2024
•
Sep 24
Dropdown menu
Copy link
Hide
PHP 8.5 is bringing some amazing quality-of-life updates.
Which one excites you the most?
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Code of Conduct
•
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Muhammad Usman
Follow
Building High-Performing, User-Centric Websites 3x Faster | WordPress Developer with 4+ Years of Experience
Location
Lahore, Punjab, Pakistan
Education
BS Computer Science FROM bahauddin zakariya university
Work
WordPress Developer @ Coding Crafts
Joined
Nov 22, 2024
More from Muhammad Usman
Why I Switched From Google Fonts CDN to Self-Hosting (and Never Looked Back)
#webdev
#frontend
#tutorial
#softwaredevelopment
5 Absolutely Free Web Tools Every Developer Should Bookmark
#webdev
#tooling
#frontend
#softwaredevelopment
HTML isn’t just code. Done right, it’s your strongest SEO weapon.
#html
#webdev
#learning
#frontend
💎 DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community — A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem — the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community © 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account