The Unseen Conductor: Orchestrating App Notifications with EventBus - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
DUMB DEV Community
Follow
Memes and software development shitposting
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Pradnyanand Milind Pohare
Posted on Sep 20
The Unseen Conductor: Orchestrating App Notifications with EventBus
#flutter
#frontend
#dart
#reactnative
Context and The Problem.
At my current company, we have a wholesale app designed for tier-2 or tier-3 city Kirana (grocery) stores to purchase goods at wholesale prices. Because this is a B2B integration, there are a lot of offer popups, nudges, notifications, and feedback popups each time a user opens the app. Thatâ€™s a poor user experience: bombarding the user with multiple things on app startup is not ideal, and doing so all at once is particularly jarring.
To illustrate, imagine youâ€™re using a food-delivery app that needs to show several messages: first asking for location permission, then introducing new features, then asking for a ratingâ€”all shown at once. That would be annoying.
What is EventBus ?
That is where EventBus comes into the picture. EventBus helps widgets that are not directly related or screens that arenâ€™t dependents of each other communicate with one another.
For example.
A user completes an action on Screen A (e.g., saving a profile update), and Screen B (e.g., a settings screen) needs to be refreshed or updated to reflect this change. Instead of passing callbacks or using shared ChangeNotifiers that can become unwieldy, Screen A can fire an event, and Screen B can listen for it.
How EventBus was useful for us ?
Because there were multiple popups that were compiled and shown to the user at the same time, using EventBus allowed us to display them in a sequencing order. An additional enhancement was that once a popup is shown, we check whether the next popup in the sequence is available. This prevents the user from waiting for data to fetch for the next popup and allows it to show immediately when ready.
This is like having a smart assistant that presents a series of popup messages on your phone, one after another, in a specific order, waiting for you to close each one before showing the next.
Think of it like a queue at a restaurant where the waiter brings dishes in a specific order. The system has a list of all the popups it wants to show (A, B, C, D), but itâ€™s smart enough to check if each popup is relevant right now. For example, if youâ€™ve already granted location permission, it wonâ€™t show that popup again. It only shows popups that make sense for your current situation. When you close one popup, it automatically shows the next one in line, creating a smooth, organised experience instead of bombarding you with multiple popups at once.
I have added a demo implementation of EventBus in this Github repo do check that out.
Different use cases that I can think off
Changing App Theme
Scrolling/Refreshing list to top when user clicks on bottom navigation tab bar (WhatsApp, Instagram, many of such social medial app have this functionality)
Limitations of using EventBus
Debugging Complexity - Events can be fired from anywhere and received by multiple listeners anywhere else in the application. This "publish-subscribe" model can make it challenging to trace the exact path an event takes from its origin to all its destinations.
Global State Issues - Because any component can subscribe to any event, it's easy for a component to react to an event it wasn't designed to handle, leading to unexpected behaviour.
When to use EventBus ?
You have truly global, infrequent, and lightweight notifications that affect multiple
When an event can affect a varying number of components, and the publisher doesn't need to manage the list of subscribers.
In larger applications, different modules or features might need to communicate without having direct dependencies on each other.
Alternative to EventBus
Direct Method Calls / Function Callbacks - calling component directly invokes a method or passes a callback function to the component it needs to interact with.
State Management -
Provider, BLoC/Cubit etc
Navigation and Route Arguments -
When navigating between screens, you can pass data directly as arguments to the new route.
Bottom line: Your app shouldnâ€™t rely solely on EventBus. Use a combination of the alternatives above as appropriate.
About Me
Website
NewsLetter - Something To Read
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Pradnyanand Milind Pohare
Follow
A react native developer, like to make travel videos, also I paint.
Location
Pune, India
Education
B-Tech in Computer Science and. Technology engineering
Work
React Native Developer
at Webspdy Pune
Joined
Feb 27, 2020
More from Pradnyanand Milind Pohare
Why app gets slow in Debug mode, React Native
#reactnative
#debugging
#javascript
The Problem With My Website
#reactnative
#androidappdevelopement
#paytm
The Right Decision
#interview
#android
#reactnative
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Reading List
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Free Postgres Database
Software comparisons
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account