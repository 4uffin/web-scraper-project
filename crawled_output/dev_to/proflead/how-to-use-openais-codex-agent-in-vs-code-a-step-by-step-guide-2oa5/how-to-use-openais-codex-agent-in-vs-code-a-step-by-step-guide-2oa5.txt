How to Use OpenAI's Codex Agent in VS Code: A Step-by-Step Guide - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Vladislav Guzey
Posted on Aug 29
How to Use OpenAI's Codex Agent in VS Code: A Step-by-Step Guide
This tutorial will guide you through the process of integrating OpenAIâ€™s powerful Codex coding agent directly into yourÂ Visual Studio CodeÂ environment. This tool functions as an AI pair programmer, capable of understanding complex prompts to execute commands, write code, run tests, and even build entire applications from scratch.
Before you begin, ensure you have the following:
Visual Studio Code: The latest version is installed on your machine.
ChatGPT Plus Account: The Codex agent extension requires a paid OpenAI subscription (ChatGPT Plus, Team, Pro, or Enterprise) to function.
Step 1: Install the Codex Extension
First, you need to add the official OpenAI extension to VS Code.
Launch Visual Studio Code.
Navigate to the Extensions view by clicking the icon on the left-hand sidebar.
In the search bar, type Codex.
From the search results, locate and select Codex â€” OpenAIâ€™s coding agent published by OpenAI. Itâ€™s crucial to select the official extension to ensure proper functionality and security.
Click the Install button. You may be prompted to trust the publisher; confirm to proceed.
Press enter or click to view image in full size
Step 2: Sign In and Authenticate
Once installed, you must connect the extension to your OpenAI account.
After installation, a new Codex icon will appear in the top-right corner of the activity bar. Click it to open the Codex panel.
In the Codex panel, click the Sign in with ChatGPT button.
Your default web browser will open, prompting you to log in to your OpenAI account.
After successfully logging in, you will be authenticated, and the Codex panel in VS Code will activate, ready for use.
Press enter or click to view image in full size
Step 3: Understanding the Codex Interface
Main Chat Panel:Â This is where you will interact with the agent. The bottom of the panel contains several important settings:
Environment: Choose where Codex will run its commands.
Work locally: The agent will use your local machineâ€™s file system and terminal. You must have a project folder open for this to work.
Run in the cloud: The agent operates in a sandboxed cloud environment provided by OpenAI.
Mode: Select how the agent behaves.
Chat: A standard conversational mode.
Agent: The agent can read files, write code, and run commands, but will ask for approval before executing.
Agent (full access): The agent has full permissions to perform tasks without requiring approval for each step.
Reasoning Effort:Â Adjust the complexity of the agentâ€™s planning and execution. The default is Medium, which is suitable for most tasks. Higher settings may yield better results for complex problems but will take longer.
Top Menu Icons:
New Chat: Starts a new, clean conversation.
Task History: View previous conversations and tasks.
Settings: Access account information, help docs, keyboard shortcuts, and advanced configurations.
Step 4: Run Your First Prompt
Now youâ€™re ready to give Codex a task. For this example, weâ€™ll ask it to create a simple web application.
Open a Project Folder: Before starting, ensure you have a folder open in VS Code. If not, go to File > Open Folderâ€¦ and select or create a project directory. This is required for the agent to work locally.
Write a Detailed Prompt: A good prompt is descriptive and clear. In the Codex chat input, type the following:Â create a simple to-do application with login and password. include a simple database and modern bootstrap styling.
Launch the Agent: Press the send button. The agent will begin by outlining its plan, showing steps.
Monitor the Progress: The agent will show its work in real-time, creating files (app.py, data.db, etc.) and writing code. Once complete, it will provide instructions on how to run the application.
Step 5: Run the Generated Application
Codex will provide the command needed to start the application it just built.
Open the integrated terminal in VS Code (View > Terminal).
Run the command provided by Codex. In this case, itâ€™s:Â python3 app.py
The terminal will show that the server is running, typically onÂ http://127.0.0.1:8000.
Open this URL in your web browser. You can now interact with the fully functional to-do application, complete with user registration, login, and task management.
Additional Configuration and Tips
Data Privacy: If you wish to prevent your data from being used to train OpenAI models, go to the Codex Settings, where you can find a link to your Data controls on the ChatGPT website to opt-out.
Model Selection: In the advanced settings, you can see which AI model is being used. By default, the extension uses powerful and up-to-date models (like GPT-5, as shown in the video) optimized for coding tasks.
Video Codex in VS CodeÂ Tutorial
Watch on YouTube: Codex CLI in VS Code
Conclusion
Youâ€™ve now seen how simple it is to get OpenAIâ€™s Codex agent running in VS Code. By following these steps, you can bring a powerful AI pair programmer into your daily workflow, automating tasks and accelerating your projects.
Cheers! ;)
Top comments (3)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Rodrigo Figueiredo
Rodrigo Figueiredo
Rodrigo Figueiredo
Follow
Joined
Sep 2, 2025
â€¢
Sep 2
Dropdown menu
Copy link
Hide
Hey,
First of all loved the post!!
I'm having a problem... When I send a message in the codex chat (in VS) it's giving me this error:
unexpected status 400 Bad Request: {"detail":"Unsupported model"}
Like comment:
Like comment:
1Â like
Like
Comment button
Reply
Collapse
Expand
Rodrigo Figueiredo
Rodrigo Figueiredo
Rodrigo Figueiredo
Follow
Joined
Sep 2, 2025
â€¢
Sep 2
Dropdown menu
Copy link
Hide
I saw the youtube video and figured it out! Thank you!
Like comment:
Like comment:
1Â like
Like
Comment button
Reply
Some comments may only be visible to logged-in visitors. Sign in to view all comments.
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Vladislav Guzey
Follow
Helping Devs Stay Ahead with AI & Productivity Tools
Joined
Jan 25, 2023
More from Vladislav Guzey
Easily Remove Zero-Width Spaces and Other AI Invisible Characters with This Tool
#ai
#google
#extensions
#vscode
Sanitize Your AI-Generated Content: A Free Invisible Character Remover
#ai
#google
#extensions
#vscode
Advanced Git: 10 Commands Youâ€™re Might Missing
#git
#programming
#productivity
#tutorial
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
PÃ¡gina Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
CÃ³digo de Conduta
PolÃ­tica de Privacidade
Termos de Uso
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account