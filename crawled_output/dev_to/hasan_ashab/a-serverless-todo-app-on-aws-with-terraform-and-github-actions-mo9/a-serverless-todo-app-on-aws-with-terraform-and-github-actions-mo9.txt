A Serverless Todo App on AWS with Terraform and GitHub Actions - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Hasan Ashab
Posted on Sep 21
A Serverless Todo App on AWS with Terraform and GitHub Actions
#serverless
#aws
#terraform
#cicd
When I started this project, I didn‚Äôt want to just build another todo app. We‚Äôve all seen those before. My goal was different: build something simple on the outside, but production-ready on the inside ‚Äî something that shows what a DevOps engineer actually does.
That‚Äôs how this Serverless Todo App came to life. A lightweight frontend for users, but behind it sits a complete AWS setup: serverless compute, Infrastructure as Code, and automated CI/CD pipelines.
üå± Why Serverless?
The choice was clear. For small apps (and honestly, for many startups too), serverless hits the sweet spot:
Perfect for apps with unpredictable traffic (like side projects, MVPs, or apps with spiky usage)
Scales up (and down to zero) automatically
Pay only for what you use (almost zero cost when idle)
High availability by default
Basically: if your customer base is uncertain or your workload isn‚Äôt steady, serverless is the go-to choice.
üèóÔ∏è The Architecture
I followed a classic three-tier approach ‚Äî but all serverless:
Frontend
React app hosted in S3
CloudFront for fast, global delivery
OAC so no one can hit S3 directly
Backend
API Gateway to handle requests
Lambda functions for each CRUD operation
IAM roles with the bare minimum permissions
Database
DynamoDB table with id as hash key
Pay-per-request billing ‚Äî no wasted capacity
Here‚Äôs a sketch of it all working together:
üîß Infrastructure as Code with Terraform
Instead of clicking around the AWS console, everything is defined in Terraform. I broke it into modules:
frontend/ ‚Üí S3 + CloudFront setup
backend/ ‚Üí API Gateway + Lambda functions + IAM
dynamodb/ ‚Üí Key-value table
This modular approach made it easy to spin up dev, staging, and prod environments. Just change a tfvars file, and Terraform does the rest.
‚öôÔ∏è CI/CD Pipelines
The real DevOps flavor comes here. I used GitHub Actions to automate deployments:
Frontend pipeline ‚Üí Build React app, push to S3, invalidate CloudFront
Backend pipeline ‚Üí Package & deploy Lambda functions
Infra pipeline ‚Üí Terraform plan/apply with drift detection
Production deployments always require manual approval ‚Äî I wanted it to feel realistic, not reckless.
üîç Monitoring & Security
A few non-negotiables I baked in:
CloudWatch metrics and alerts for errors and latency
Terraform drift detection (to catch sneaky manual console changes)
IAM least privilege for every Lambda
CloudFront enforcing HTTPS and hiding the S3 bucket
Nothing fancy, just the basics done right.
üí∏ Cost-Friendly by Default
Since it‚Äôs serverless:
Lambda only bills on execution
DynamoDB scales automatically
CloudFront caching reduces backend hits
In idle periods, the whole system costs almost nothing.
üõ†Ô∏è What I Learned
Terraform modules are a lifesaver for reusability
Separate pipelines keep infra, backend, and frontend independent
Serverless debugging is trickier than traditional apps (logs are your best friend)
Cold starts exist, but caching and design can reduce the pain
üöÄ Why This Project Matters
At first glance, it‚Äôs ‚Äújust a todo app.‚Äù But under the hood, it‚Äôs a real-world DevOps case study:
Infrastructure as Code
Automated CI/CD
Secure, scalable, cost-efficient design
Production-ready practices like monitoring, drift detection, and multi-env setups
üìÇ Code & Repo
You can check out the full implementation here:
üëâ Serverless Todo App on GitHub
Final Thought
I built this project to show that even something simple can demonstrate serious DevOps skills when designed with the right mindset.
üì¨ Contact
If you‚Äôd like to connect, collaborate, or discuss DevOps, feel free to reach out:
Website: hasan-ashab
GitHub: github.com/HasanAshab
LinkedIn: linkedin.com/in/hasan-ashab
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Hasan Ashab
Follow
I'm a DevOps Engineer and Backend Developer from Dhaka, Bangladesh with 3+ years of professional experience in building scalable cloud infrastructure, automation-driven deployments and Backends.
Location
Dhaka, Bangladesh
Joined
Sep 2, 2025
More from Hasan Ashab
Serverless: The Hype is Real. But Is It For You?
#cloud
#serverless
#architecture
Productionizing AWS‚Äôs Retail Sample App with GitOps on EKS
#devops
#cicd
#aws
#cloud
Cost-Optimized Three-Tier Architecture on AWS with DevOps
#cicd
#architecture
#devops
#aws
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
Welcome Thread
Reading List
Tags
About
Contact
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account