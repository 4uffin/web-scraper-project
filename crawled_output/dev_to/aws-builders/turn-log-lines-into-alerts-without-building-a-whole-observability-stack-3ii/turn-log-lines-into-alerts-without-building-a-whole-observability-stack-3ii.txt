Turn log lines into alerts (without building a whole observability stack) - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Michael Uanikehi
for AWS Community Builders
Posted on Sep 13
Turn log lines into alerts (without building a whole observability stack)
#cloudwatch
#observability
#monitoring
#aws
Cold truth: problems always show up in logs first. The trick is turning those ‚Äúuh-oh‚Äù lines into a nudge in your inbox before users feel it.
Here‚Äôs the dead-simple pattern I use in AWS:
CloudWatch Logs ‚Üí Metric Filter ‚Üí Alarm ‚Üí SNS (Email/Slack)
No new services to run. No extra agents. Just wiring.
Why this works
Think of CloudWatch Logs as a river. Metric filters are little nets you drop in: ‚Äúcatch anything that looks like ERROR‚Äù or ‚Äúgrab JSON where level=ERROR and service=payments.‚Äù Each catch bumps a metric. Alarms watch that metric and boom; email, Slack, PagerDuty, whatever you like.
Cheap. Fast. No app changes.
App ‚Üí CloudWatch Logs ‚îÄ‚îÄ(metric filter)‚îÄ‚îÄ‚ñ∂ Metric
‚îÇ
‚îî‚îÄ‚îÄ‚ñ∂ Alarm ‚îÄ‚îÄ‚ñ∂ SNS ‚îÄ‚îÄ‚ñ∂ Email/Slack
Step 1: create an SNS topic (so you get alerted)
aws sns create-topic --name app-alarms
# copy the "TopicArn" from the output
TOPIC_ARN="arn:aws:sns:REGION:ACCOUNT_ID:app-alarms"
# subscribe your email (confirm the email to activate)
aws sns subscribe \
--topic-arn "$TOPIC_ARN" \
--protocol email \
--notification-endpoint you@example.com
Enter fullscreen mode
Exit fullscreen mode
Step 2: add a metric filter to your log group
Option A ‚Äî simple keyword (‚ÄúERROR‚Äù but not health checks):
LOG_GROUP="/aws/lambda/my-fn"
aws logs put-metric-filter \
--log-group-name "$LOG_GROUP" \
--filter-name "ErrorCount" \
--filter-pattern '"ERROR" -HealthCheck' \
--metric-transformations \
metricName=ErrorCount,metricNamespace="App/Alerts",metricValue=1,defaultValue=0
Enter fullscreen mode
Exit fullscreen mode
Option B ‚Äî structured JSON logs (recommended):
aws logs put-metric-filter \
--log-group-name "$LOG_GROUP" \
--filter-name "PaymentsErrors" \
--filter-pattern '{ $.level = "ERROR" && $.service = "payments" }' \
--metric-transformations \
metricName=PaymentsErrorCount,metricNamespace="App/Alerts",metricValue=1
Enter fullscreen mode
Exit fullscreen mode
Step 3: create an alarm on that metric
Alert if we see ‚â• 1 error per minute for 3 minutes:
aws cloudwatch put-metric-alarm \
--alarm-name "LambdaErrorBurst" \
--metric-name ErrorCount \
--namespace "App/Alerts" \
--statistic Sum \
--period 60 \
--evaluation-periods 3 \
--threshold 1 \
--comparison-operator GreaterThanOrEqualToThreshold \
--treat-missing-data notBreaching \
--alarm-actions "$TOPIC_ARN" \
--ok-actions "$TOPIC_ARN"
Enter fullscreen mode
Exit fullscreen mode
That treat-missing-data=notBreaching bit keeps you from getting ‚Äúwe‚Äôre fine!‚Äù alerts when traffic is quiet
Step 4: test it (don‚Äôt skip this)
1.
Log an ERROR that matches your filter.
2.
In CloudWatch Metrics ‚Üí App/Alerts, make sure the metric ticks up.
3.
Watch the alarm flip to ALARM and check your email.
If nothing happens, go to your Log Group ‚Üí Metric filters ‚Üí Test pattern and paste a real log line. It‚Äôll tell you if your pattern matches.
Prefer Terraform? here‚Äôs the whole thing
resource "aws_sns_topic" "app_alarms" {
name = "app-alarms"
}
resource "aws_sns_topic_subscription" "email" {
topic_arn = aws_sns_topic.app_alarms.arn
protocol
= "email"
endpoint
= "you@example.com"
}
resource "aws_cloudwatch_log_metric_filter" "errors" {
name
= "ErrorCount"
log_group_name = "/aws/lambda/my-fn"
pattern
= "\"ERROR\" -HealthCheck"
metric_transformation {
name
= "ErrorCount"
namespace
= "App/Alerts"
value
= "1"
default_value = "0"
}
}
resource "aws_cloudwatch_metric_alarm" "error_alarm" {
alarm_name
= "LambdaErrorBurst"
namespace
= "App/Alerts"
metric_name
= "ErrorCount"
statistic
= "Sum"
period
= 60
evaluation_periods
= 3
threshold
= 1
comparison_operator = "GreaterThanOrEqualToThreshold"
treat_missing_data
= "notBreaching"
alarm_actions
= [aws_sns_topic.app_alarms.arn]
ok_actions
= [aws_sns_topic.app_alarms.arn]
}
Enter fullscreen mode
Exit fullscreen mode
Common gotchas (learned the hard way)
‚Ä¢ Case matters. ERROR ‚â† error. Match what you actually log.
‚Ä¢ Per line matching. Filters look at one line at a time. If your stack trace spans lines, rely on a JSON level field instead.
‚Ä¢ Right account/region. Metric filters must live with the log group.
‚Ä¢ Don‚Äôt explode cardinality. Keep one metric per signal; don‚Äôt bake IDs into metric names.
‚Ä¢ No alerts during quiet times. That treat missing data setting is your chill pill.
Variations you‚Äôll probably want
‚Ä¢ Slack/Teams: SNS ‚Üí lambda ‚Üí Slack (point & click).
‚Ä¢ PagerDuty/Opsgenie: SNS ‚Üí EventBridge ‚Üí your incident tool.
‚Ä¢ Smarter thresholds: Try Anomaly Detection alarms once you have baseline traffic.
‚Ä¢ Composite alarms: ‚ÄúOnly alert if errors spike and p50 latency is ugly.‚Äù
You don‚Äôt need a massive observability rebuild to get useful alerts. Start with one or two high signal patterns timeouts, 5xx, ‚Äúpayment failed‚Äù wire them to email, and iterate.
Tiny effort. Big safety net.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
AWS Community Builders
Follow
Build On!
Would you like to become an AWS Community Builder? Learn more about the program and apply to join when applications are open next.
Learn more
More from AWS Community Builders
Observability on Amazon EKS Cluster: A Complete Guide to Prometheus and Grafana with Helm
#eks
#observability
#prometheus
#grafana
Migrating from a Monolith to EDA on AWS
#aws
#eventdriven
#architecture
Using drones for good with AWS Agentic AI - Part 1
#drones
#genai
#aws
#agentaichallenge
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Reading List
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Free Postgres Database
Software comparisons
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account