Why I am a Multi-Cloud Skeptic - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Gaurav Raje
for AWS Community Builders
Posted on Sep 23
Why I am a Multi-Cloud Skeptic
#aws
#architecture
#cloudnative
#multiplatform
This is a very nuanced post. Apologies if I ramble a little initially, but I think it is essential to describe the nuance before going further.
I will start this off by saying, I am a skeptic of multi-cloud. In my experience as an architect, I have been in far too many shops where someone high up in the hierarchy says, "We are too reliant on X. Why don't we adopt a multi-cloud strategy?". And it is a very valid point. In its promise, multi-cloud offers a huge benefit. But the implementation is where things go downhill.
The Illusion of Cost Savings
The first argument I often hear for a multi-cloud strategy is cost optimization. The idea is that you can cherry-pick the cheapest services from each provider. While this sounds great on a whiteboard, the reality is far more complex and often more expensive.
First, you are now paying for duplicate infrastructure, even if it's just for disaster recovery or failover. You have to account for data transfer costs between clouds, which can be astronomical and are often overlooked in initial planning. Furthermore, you lose the volume discounts and committed-use savings you might have negotiated with a single provider. The engineering effort required to build and maintain an architecture that can seamlessly switch between clouds is significant, and that time is a very real cost.
Complexity is the Enemy of Reliability
Multi-cloud introduces a level of complexity that can quickly become a management nightmare. You are no longer just dealing with a single set of APIs, service limits, and a consistent networking model. Now, your engineers must be experts in at least two or three different ecosystems.
Networking: How do you handle cross-cloud networking? VPNs? Direct Connect? Each provider has its own way of doing things, and stitching them together reliably is a monumental task.
Identity and Access Management (IAM): You now have to manage identities across multiple, disparate systems. While tools exist to federate this, it's another layer of complexity and a potential security risk.
Application Logic: Your application code must be cloud-agnostic, or you've created tightly coupled dependencies on specific services from each cloud. This often leads to using the lowest common denominator of services, meaning you miss out on the rich, deeply integrated services that make each cloud platform so powerful (e.g., AWS's Lambda, Azure's Functions, or GCP's Cloud Run).
The more moving parts you have, the higher the chance of a failure. Troubleshooting issues becomes exponentially more difficult when you have to debug across different cloud providers, each with its own monitoring tools, logging formats, and support processes.
Vendor Management: The Hidden Cost
Another significant hurdle is vendor management. Instead of one or two key contacts, you now have a team managing relationships with multiple cloud providers. This can lead to:
Conflicting Support: Who do you call when your application is down and you're not sure if the issue is with AWS or Azure? You're likely to get pointed back and forth between support teams, each claiming the problem is with the other provider.
Contractual Overload: Negotiating contracts, managing service-level agreements (SLAs), and dealing with billing from multiple vendors is a significant administrative burden.
Lack of Strategic Partnership: With a single cloud provider, you can build a deep, strategic relationship. You might get a dedicated technical account manager (TAM), access to preview features, or even help with architectural reviews. With a multi-cloud approach, you are just one of many customers, and it's hard to get that level of attention from any one provider.
Operations and Maintenance Treadmill
Finally, let's talk about the day-to-day operational costs. The promise of multi-cloud is resilience, but the reality is constant maintenance.
Tooling: Your CI/CD pipelines, monitoring, and security tools must now be configured to work across multiple clouds. This often means building custom integrations or buying expensive third-party tools.
Skill Gaps: Keeping your team's skills sharp on multiple platforms is a continuous and expensive effort. You either have to hire separate teams for each cloud or invest heavily in training for your existing staff.
Patching and Updates: Each cloud has its own cadence for service updates, security patches, and new feature rollouts. Keeping your infrastructure and applications up-to-date and compatible across all of them is a never-ending job.
In my experience, the operational complexity and the associated costs of a multi-cloud strategy often far outweigh the perceived benefits. The promise of resilience and cost savings often turns into a costly, complex, and frustrating exercise in managing a fleet of disparate systems.
A Better Way?
So, what's the alternative? If your goal is resilience, build a robust architecture within a single cloud provider, leveraging their global footprint and a well-architected framework.
The promise of multi-cloud is seductive, but the reality is a significant increase in cost, complexity, and operational overhead. It's a strategy that looks good on a PowerPoint slide but is a nightmare to execute in practice.
Top comments (4)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Eyal Estrin
AWS Community Builders
Eyal Estrin
AWS Community Builders
Eyal Estrin
Follow
Cloud Security Architect | AWS Community Builder | Public columnist | CISSP | CCSP | CISM | CISA | CDPSE | Author of the books "Cloud Security Handbook" and "Security for Cloud Native Applications"
Location
Israel
Work
Cloud Security Architect
Joined
Oct 24, 2020
â€¢
Sep 25
Dropdown menu
Copy link
Hide
I would even look at this topic in a more broad way - what should Enterprises do when they decide to go to alternate cloud solutions such as CoreWeave and "Lambda Labs" when they want to have visibility over cost, auditing, IAM, etc.?
So far, I could not figure this out, since most commercial solutions do not focus much on those solutions.
Like comment:
Like comment:
1Â like
Like
Comment button
Reply
Some comments may only be visible to logged-in visitors. Sign in to view all comments.
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
AWS Community Builders
Follow
Build On!
Would you like to become an AWS Community Builder? Learn more about the program and apply to join when applications are open next.
Learn more
More from AWS Community Builders
AWS Networking: Understanding CIDR Notation
#aws
#networking
#devops
#architecture
Quantum Experiments Open: Exploring Variational Quantum Classifiers on Amazon Braket
#ai
#cybersecurity
#quantum
#aws
Fantastic AWS Policies and Where to Find Them
#security
#aws
#cloudsecurity
#iam
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account