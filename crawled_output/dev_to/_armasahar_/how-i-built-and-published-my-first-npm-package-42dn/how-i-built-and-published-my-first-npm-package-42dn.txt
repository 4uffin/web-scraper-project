How I built and published my FIRST npm package - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Arma Sahar
Posted on Sep 24
â€¢ Edited on Sep 25
How I built and published my FIRST npm package
#opensource
#discuss
#coding
#javascript
(Want to jump straight to the result? Check out my package: cipher-utils.)
Before we move ahead to make a npm package,
First Things First, let's understand What Exactly Is NPM?
Because it helps to understand the ecosystem we're working with.
NPM stands for Node Package Manager, and it plays two massive roles in the world of JavaScript:
The Package Registry: It's more like a library (world's largest) of JavaScript. Developers from all over the globe publish their reusable pieces of code here, from tiny utility functions to massive frameworks. When you npm install react or npm install express, you're pulling code from this registry. This makes sharing and reusing code incredibly efficient for all the JS developers.
The Package Manager (CLI Tool): This is the command-line utility you use every day. It's the librarian of your projects, helping you:
To Grab those packages from the registry and add them to your project. using command
npm install
Remove them when you're done
npm uninstall
Manage scripts defined in your package.json.
Understanding these two aspects makes the whole publishing process much clearer.
Now, let's get into the "how"! This is exactly what I did, from start to finish. Follow along!
Step 1: Get Your Code Package-Ready (Pure Functions)
My cipher algorithms (ROT13, Base64, XOR) were initially written as standalone scripts. They would either ask for input or read it from the command line, and then print the result. This is fine for quick testing, but for a reusable NPM package, functions need to be pure.
What "pure" means here:
They take all their necessary inputs as function arguments.
They return their result, rather than printing it to the console or interacting with the user.
They don't have side effects (like modifying global variables).
My earlier code:
I applied the hermetic function logic to all the three algorithms
Note: Don't forget to export the function.
I am using type: module. This will be exported using ES Module syntax.
Step 2: Time to initialize the package
Before diving straight into package initialization, I set up proper version control by creating a Git repository and cloning it locally. This ensures clean tracking of my package's development from day one.
Create a Repository on Github
Clone the repo in your terminal
git clone git@github.com:armasahar/Cipher-Utils.git
cd Cipher-Utils
code . //this opens your cloned directory in VS code
Enter fullscreen mode
Exit fullscreen mode
Now once you are in VS code, let's get started with NPM initialization. Every NPM package needs a package.json file.
npm init
Enter fullscreen mode
Exit fullscreen mode
You'll be prompted with your package details in the VS code's terminal. Hereâ€™s what I entered:
Once you enter all the details you will be shown the formatted details, and ask you "is this okay?" you just have to press enter.
and it will create a package.json file in your root folder with all the details you have entered, you can edit them anytime.
Step 3: Structure Your Code with ES Modules
Modern JavaScript uses ES Modules (import/export). To use this in a Node.js package, you need a crucial setting.
Add "type": "module" in your package.json: This tells Node.js to interpret your .js files as ES Modules.
Organize your source files:
I created a src/ directory to hold my individual cipher files (rot13.js, base64.js, xor.js).
Create index.js (The Package's Entry Point): This file sits at your project's root and imports all your functions from src/, then re-exports them. This is what users will interact with. Remember to include the .js file extension in your local import paths for ES Modules!
This is my folder structure:
Add Documentation
README.md: This is your package's user manual.
It should explain:
What the package is and what it does.
How to install it (npm install cipher-utils).
Detailed usage examples for each function (e.g., rot13('...'), base64.encode('...')).
An API reference for all exported functions.
Information on contributing and licensing.
LICENSE file: A plain text file containing the full text of your chosen license (like MIT). This tells people how they can use, modify, and distribute your code.
Step 5: Publish Your Package to NPM!
The moment of truth!
login to npm.
npm login
Enter fullscreen mode
Exit fullscreen mode
(Once you login through terminal or through browser, get back to your codebase)
Commit your code to Git: (Make sure all your hard work, code changes, package.json updates, new README.md â€“ is committed. ALWAYS)
git add . && git commit -m "message"
git push -u push origin
Enter fullscreen mode
Exit fullscreen mode
Publish it now.
npm publish
Enter fullscreen mode
Exit fullscreen mode
If you face version error: (because I faced it)
If it's published well and good, but you might face an error here with the package version, so if you fall in this error just write
npm version patch
Enter fullscreen mode
Exit fullscreen mode
This will increase your package version to one level up.
and publish again.
npm publish
Enter fullscreen mode
Exit fullscreen mode
The feeling of seeing my own cipher-utils package live on npmjs.com was genuinely thrilling.
If you're on the fence about publishing your own project, I can't recommend it enough. It pushes you to polish your code, understand fundamental tools, and join a massive, supportive community.
What's next for cipher-utils? I'm already thinking about building a command-line interface (CLI) for quick terminal usage, and maybe adding more quirky ciphers.
For now, I hope my journey helps light the path for yours. Feel free to explore the package, give it a whirl, and even contribute!
NPM Package: cipher-utils
GitHub Repository: armasahar/Cipher-Utils
Thanks for reading!
Top comments (3)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Gabor Koos
Gabor Koos
Gabor Koos
Follow
Full stack, backend biased
Location
London, United Kingdom
Joined
Jul 31, 2025
â€¢
Sep 24
Dropdown menu
Copy link
Hide
It's a solid start, nicely done. You also might wanna set up something to handle changelogs, sync npm versions with git tags etc. It's a grind but ideally you only have to do it once per package ðŸ™‚
Like comment:
Like comment:
2Â likes
Like
Comment button
Reply
Collapse
Expand
Arma Sahar
Arma Sahar
Arma Sahar
Follow
Software Engineer | Domain Investor | Startup Enthusiast
Location
Hyderabad
Education
Software Engineering at cs.code.in
Joined
Apr 13, 2025
â€¢
Sep 24
Dropdown menu
Copy link
Hide
ðŸ«¡ Sure, will do it!
Like comment:
Like comment:
Like
Comment button
Reply
Collapse
Expand
nayeem aslam
nayeem aslam
nayeem aslam
Follow
Joined
Jul 14, 2024
â€¢
Sep 25
Dropdown menu
Copy link
Hide
I always imagined how these guys build their own packages with fancy names for their products and organizations. Now, I feel like I at least know the answer to my long-time unknown question I had, thanks to you, @_armasahar_
Bring up more :)
Like comment:
Like comment:
Like
Comment button
Reply
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Arma Sahar
Follow
Software Engineer | Domain Investor | Startup Enthusiast
Location
Hyderabad
Education
Software Engineering at cs.code.in
Joined
Apr 13, 2025
More from Arma Sahar
I Built an IEEE-754 Binary Calculator - Try My Open Source Binary Converter
#webdev
#programming
#javascript
#opensource
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account