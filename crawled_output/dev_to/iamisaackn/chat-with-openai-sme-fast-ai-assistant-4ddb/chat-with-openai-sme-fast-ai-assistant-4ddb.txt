Chat with OpenAI: SME Fast AI Assistant - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE—the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project — features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto—from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Isaac Kinyanjui Ngugi
Posted on Sep 21
Chat with OpenAI: SME Fast AI Assistant
#𝐀𝐫𝐭𝐢𝐟𝐢𝐜𝐢𝐚𝐥𝐈𝐧𝐭𝐞𝐥𝐥𝐢𝐠𝐞𝐧𝐜𝐞
#𝐎𝐩𝐞𝐧𝐀𝐈
#𝐒𝐌𝐄
#𝐓𝐞𝐜𝐡𝐅𝐨𝐫𝐁𝐮𝐬𝐢𝐧𝐞𝐬𝐬
OVERVIEW
I will show you how to build a project that connects to OpenAI's API.
You'll learn:
How to set up Python and Anaconda.
How to safely use API keys.
How to send your messages to an AI model
How to read OpenAI's responses.
How to give the AI a "personality"
Task 1: How to set up Python and Anaconda.
Anaconda is a free downloadable Python toolkit for data science and AI. Download it here:
Task 2: How to safely use API keys.
OpenAI API Key Setup:
Sign up at platform.openai.com.
Copy your API key.
Create a file named .env in your project folder.
Inside .env, add this line:
OPENAI_API_KEY = "sk-your-real-api-key"
Load API Key and Configure Client
# Install needed packages
# !pip install --upgrade openai python-dotenv
from openai import OpenAI
import os
from dotenv import load_dotenv
# Load API key from .env file
load_dotenv()
openai_api_key = os.getenv("OPENAI_API_KEY")
# Configure OpenAI client
openai_client = OpenAI(api_key=openai_api_key)
print("OpenAI client ready")
Enter fullscreen mode
Exit fullscreen mode
Task 3: How to send your messages to an AI model
You will send a message and get an AI reply.
How it works:
model: which AI brain to use (start with "gpt-4o-mini").
message: the conversation (user, assistant, or system)
Code to Send a Message
my_message = "What is the tallest mountain in the world?"
response = openai_client.chat.completions.create(
model="gpt-4o-mini",
messages=[{"role": "user", "content": my_message}]
)
ai_reply = response.choices[0].message.content
print("AI says:\n", ai_reply)
Enter fullscreen mode
Exit fullscreen mode
Task 4: How to read OpenAI's responses.
OpenAI replies come with detailed metadata and information. Below is an example:
ChatCompletion(
id='chatcmpl-CGMnpfRxsx23fmmwFGIn3rR0uLAw7',
choices=[
Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(
content='The tallest mountain in the world is Mount Everest, which stands at an elevation of 8,848.86 meters (29,031.7 feet) above sea level. It is located in the Himalayas on the border between Nepal and the Tibet Autonomous Region of China.',
refusal=None,
role='assistant',
annotations=[],
audio=None,
function_call=None,
tool_calls=None)
)
],
created=1758016937,
model='gpt-4o-mini-2024-07-18',
object='chat.completion',
service_tier='default',
system_fingerprint='fp_560af6e559',
usage=CompletionUsage(
completion_tokens=55,
prompt_tokens=16,
total_tokens=71,
completion_tokens_details=CompletionTokensDetails(
accepted_prediction_tokens=0,
audio_tokens=0,
reasoning_tokens=0,
rejected_prediction_tokens=0),
prompt_tokens_details=PromptTokensDetails(
audio_tokens=0,
cached_tokens=0)
)
)
Enter fullscreen mode
Exit fullscreen mode
Most of the extra metadata are meant for debugging. The parts that actually matter include:
choices[0].message.content: the actual text answer from the AI that you show to the user. “The tallest mountain in the world is Mount Everest…”
usage: token breakdown.
prompt_tokens: how many tokens your input used.
completion_tokens: how many tokens the AI generated.
total_tokens:
cost = prompt + completion.
finish_reason (inside choices): tells you why the AI stopped.
"stop": finished normally.
"length": got cut off (you might want to continue).
"tool_calls" / "function_call": it wants to call a function/tool.
Tokens matter because more tokens = higher cost.
Code: Check Token Usage
def ask_llm(message: str, model="gpt-4o-mini"):
response = openai_client.chat.completions.create(
model=model,
messages=[{"role": "user", "content": message}]
)
ai_reply = response.choices[0].message.content
usage = response.usage
print("AI Reply:\n", ai_reply[:200], "...")
# print first part
print("\n--- Token Info ---")
print("Prompt Tokens:", usage.prompt_tokens)
print("Completion Tokens:", usage.completion_tokens)
print("Total Tokens:", usage.total_tokens)
ask_llm("Explain the difference between supervised and unsupervised learning in AI.")
Enter fullscreen mode
Exit fullscreen mode
Task 5: How to give the AI a "personality"
You only need to add a system prompt to shape how the AI talks.
Code: AI as a Character
character_personalities = {
"Tony Stark": "You are Tony Stark. Be witty, sarcastic, and confident. End some replies with: 'Because I'm Tony Stark.'",
"Sleepy Cat": "You are a very sleepy cat. Always sound drowsy. Mention naps often."
}
chosen_character = "Tony Stark"
system_instructions = character_personalities[chosen_character]
user_message = "Hey, how you doing?"
response = openai_client.chat.completions.create(
model="gpt-4o-mini",
messages=[
{"role": "system", "content": system_instructions},
{"role": "user", "content": user_message}
]
)
print(f"{chosen_character} says:\n")
print(response.choices[0].message.content)
Enter fullscreen mode
Exit fullscreen mode
PRACTICE IDEAS
1. Change my_message to ask your own question.
2. Switch models ("gpt-4o" vs "gpt-4o-mini") and compare.
3. Create your own character (e.g., “Soccer Commentator”).
👉 For more AI content and job reposts, connect with me, follow me, and subscribe to my newsletter.
𝐍𝐞𝐰𝐬𝐋𝐞𝐭𝐭𝐞𝐫: https://lnkd.in/dQGdzsmR
𝐋𝐢𝐧𝐤𝐞𝐝𝐈𝐧: https://lnkd.in/d2ArWuWW
Twitter: https://x.com/itsisaackngugi
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
•
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Isaac Kinyanjui Ngugi
Follow
Joined
Mar 28, 2024
Trending on DEV Community
Hot
Meme Monday
#discuss
#watercooler
#jokes
3 Reasons You're in Tech Post-Layoff Shock (Based on personal experience)
#career
#beginners
#learning
Why Are You Not Reading My Post?
#tutorial
#discuss
#productivity
#career
💎 DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community — A space to discuss and keep up software development and manage your software career
Página Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
Código de Conduta
Política de Privacidade
Termos de Uso
Built on Forem — the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community © 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account