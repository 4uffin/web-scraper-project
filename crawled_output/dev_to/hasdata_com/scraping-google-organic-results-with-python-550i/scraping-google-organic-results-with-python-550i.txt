Scraping Google Organic Results with Python - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Valentina Skakun
for HasData
Posted on Sep 23
Scraping Google Organic Results with Python
#webdev
#programming
#python
#hasdata
Google Search is dynamic and protected. Static scrapers (requests, BeautifulSoup) wonâ€™t work, youâ€™ll get empty HTML. Instead, use a headless browser. Hereâ€™s a simple guide with SeleniumBase in undetected Chrome mode.
Table of Contents
Step 1. Install SeleniumBase
Step 2. Import the Libraries
Step 3. Build the Search URL
Step 4. Launch a Headless Browser
Step 5. Extract Organic Results
Step 6. Save Results
Full Code
Final Notes
Step 1. Install SeleniumBase
Install Selenium Base:
pip install seleniumbase
Enter fullscreen mode
Exit fullscreen mode
This gives you an extended Selenium wrapper with built-in uc mode (undetected Chrome).
Step 2. Import the Libraries
Import to the project:
from seleniumbase import Driver
from selenium.webdriver.common.By import By
import urllib.parse, pandas as pd
Enter fullscreen mode
Exit fullscreen mode
Step 3. Build the Search URL
Weâ€™ll generate the Google search URL from a keyword:
def build_search_url(query):
return f"https://www.google.com/search?q={urllib.parse.quote_plus(query)}"
Enter fullscreen mode
Exit fullscreen mode
Step 4. Launch a Headless Browser
Start Chrome in uc mode so Google treats it like a real user:
driver = Driver(uc=True, headless=True)
Enter fullscreen mode
Exit fullscreen mode
Step 5. Extract Organic Results
Each result lives inside div.MjjYud. From there, grab title, link, and snippet:
def scrape_google(driver, query):
driver.get(build_search_url(query))
blocks = driver.find_elements(By.CSS_SELECTOR, "div.MjjYud")
results = []
for b in blocks:
try:
title = b.find_element(By.CSS_SELECTOR, "h3").text
link = b.find_element(By.CSS_SELECTOR, "a").get_attribute("href")
snippet = b.find_element(By.CSS_SELECTOR, "div.VwiC3b").text
results.append({"Title": title, "Link": link, "Snippet": snippet})
except:
continue
return results
Enter fullscreen mode
Exit fullscreen mode
Step 6. Save Results
Store everything into a CSV file with pandas:
data = scrape_google(driver, "what is web scraping")
pd.DataFrame(data).to_csv("organic_results.csv", index=False)
print(f"Saved {len(data)} results")
Enter fullscreen mode
Exit fullscreen mode
Full Code
Check selector and copy:
from seleniumbase import Driver
from selenium.webdriver.common.by import By
import urllib.parse, pandas as pd, time
def build_search_url(query):
return f"https://www.google.com/search?q={urllib.parse.quote_plus(query)}"
def scrape_google(driver, query, max_pages=1):
results = []
for page in range(max_pages):
url = build_search_url(query) + (f"&start={page*10}" if page > 0 else "")
driver.get(url)
time.sleep(5)
# wait for page to load
try:
blocks = driver.find_elements(By.CSS_SELECTOR, "div.MjjYud")
except:
continue
for b in blocks:
try:
title = b.find_element(By.CSS_SELECTOR, "h3").text
link = b.find_element(By.CSS_SELECTOR, "a").get_attribute("href")
snippet = b.find_element(By.CSS_SELECTOR, "div.VwiC3b").text
results.append({"Title": title, "Link": link, "Snippet": snippet})
except:
continue
return results
driver = Driver(uc=True, headless=True)
# undetected Chrome
try:
data = scrape_google(driver, "what is web scraping", max_pages=2)
pd.DataFrame(data).to_csv("organic_results.csv", index=False)
print(f"Saved {len(data)} results")
finally:
driver.quit()
Enter fullscreen mode
Exit fullscreen mode
Final Notes
Full Guide on How to Scrape Google SERP with Python
Join our Discord
If you want any examples I might have missed, leave a comment and Iâ€™ll add them.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
HasData
Follow
More from HasData
Puppeteer + Proxies: How to Stay Unblocked
#programming
#webdev
#javascript
#beginners
Best SERP APIs for Developers in 2025
#hasdata
#webdev
#webscraping
#scraping
Simple Google Maps Scraper Using Playwright
#programming
#python
#hasdata
#scraping
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
PÃ¡gina Inicial
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
Sobre
Contato
Free Postgres Database
Software comparisons
Forem Shop
CÃ³digo de Conduta
PolÃ­tica de Privacidade
Termos de Uso
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account