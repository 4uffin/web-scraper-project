üèÉ‚Äç‚ôÇÔ∏èState management with Zustand! - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE‚Äîthe hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project ‚Äî features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto‚Äîfrom Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Gustavo Isensee
Posted on Sep 21
üèÉ‚Äç‚ôÇÔ∏èState management with Zustand!
#react
#state
#zustand
Managing State in React with Zustand
State management in React can get pretty messy if you don‚Äôt pick the right tool. You start with useState, then you raise it up to useContext, then suddenly your app feels like it's participating in a circus and juggling props all over the place. That‚Äôs where Zustand strolls in, clean and minimal, like that one friend who doesn‚Äôt overcomplicate dinner plans.
Let‚Äôs explore how to manage a list of users across multiple components using Zustand.
Why Zustand?
Zustand is a small but powerful state management library. Unlike Redux (which sometimes feels like filing taxes), Zustand has no boilerplate ceremony, just plain simple functions.
Key benefits:
Tiny and fast üèéÔ∏è
No reducers, actions, or ceremony üéâ
Works great with React hooks üëå
Basic Requirements Recap
To run this little app, you just need:
React (v18+)
Node & npm installed
zustand package installed
Setting Up the Store
Let‚Äôs create a store for our users.
npm install zustand
Enter fullscreen mode
Exit fullscreen mode
Now, define a store:
// store/userStore.js
import { create } from 'zustand';
const useUserStore = create((set) => ({
users: [],
addUser: (newUser) =>
set((state) => ({
users: [...state.users, newUser],
})),
removeUser: (id) =>
set((state) => ({
users: state.users.filter(user => user.id !== id),
})),
}));
export default useUserStore;
Enter fullscreen mode
Exit fullscreen mode
Here‚Äôs what‚Äôs happening:
users holds our list of users.
addUser lets us push a new user.
removeUser helps us clean up users üëã.
Displaying the User List
We‚Äôll need a component to show the users.
// components/UserList.js
import React from 'react';
import useUserStore from '../store/userStore';
function UserList() {
const users = useUserStore((state) => state.users);
const removeUser = useUserStore((state) => state.removeUser);
return (
<div>
<h2>User List</h2>
<ul>
{users.map((user) => (
<li key={user.id}>
{user.name}
<button onClick={() => removeUser(user.id)}>‚ùå</button>
</li>
))}
</ul>
</div>
);
}
export default UserList;
Enter fullscreen mode
Exit fullscreen mode
Here, we‚Äôre pulling users directly from the store with useUserStore. No prop drilling. No tears.
Adding a New User
We also need a form (or a button) to add users.
// components/AddUser.js
import React, { useState } from 'react';
import useUserStore from '../store/userStore';
function AddUser() {
const [name, setName] = useState('');
const addUser = useUserStore((state) => state.addUser);
const handleSubmit = (e) => {
e.preventDefault();
if (!name.trim()) return;
addUser({ id: Date.now(), name });
setName('');
};
return (
<form onSubmit={handleSubmit}>
<input
value={name}
onChange={(e) => setName(e.target.value)}
placeholder="Enter user name"
/>
<button type="submit">Add User</button>
</form>
);
}
export default AddUser;
Enter fullscreen mode
Exit fullscreen mode
Now you have a way to actually add new users.
Putting It Together
Finally, use both components in your App.
// App.js
import React from 'react';
import AddUser from './components/AddUser';
import UserList from './components/UserList';
function App() {
return (
<div>
<h1>Zustand User Management üêª</h1>
<AddUser />
<UserList />
</div>
);
}
export default App;
Enter fullscreen mode
Exit fullscreen mode
Final Thoughts
Zustand makes state management less painful. Instead of dealing with reducers and dispatchers (hello, Redux), you just call functions. Your code stays readable, and your state stays centralized.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
‚Ä¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Gustavo Isensee
Follow
Senior Software Engineer at @prosus
Location
Utrecht
Work
Senior Software Engineer at Prosus
Joined
Apr 8, 2019
Trending on DEV Community
Hot
Progress Team Update: KendoReact Challenge and Nuclia Trial Issues
#devchallenge
#kendoreactchallenge
#react
#webdev
Let‚Äôs Talk About Our Struggles in Learning and Building Confidenceüòâ
#learning
#community
#career
‚ö°9 AI Tools you cannot afford to miss in 2025! üöÄüî•
#productivity
#ai
#opensource
#discuss
üíé DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community ‚Äî A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem ‚Äî the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account