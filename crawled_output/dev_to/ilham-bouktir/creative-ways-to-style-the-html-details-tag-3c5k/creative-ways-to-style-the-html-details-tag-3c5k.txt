Creative Ways to Style the HTML Details Tag - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SREâ€”the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project â€” features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Crypto Forem
Follow
A collaborative community for all things Cryptoâ€”from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Ilham Bouktir
Posted on Sep 14
Creative Ways to Style the HTML Details Tag
#html
#css
#frontend
#codepen
The HTML <details> element is a powerful semantic tag that creates an interactive disclosure widget. Users can click to show or hide additional content, making it perfect for FAQs, expandable content sections, footnotes, and more. Combined with the <summary> element, it provides native browser functionality for collapsible content without requiring JavaScript.
Understanding the <details> Element
The <details> element consists of two main parts:
<summary>: The clickable header that's always visible
Content: The collapsible content that shows/hides when clicked
Basic syntax:
<details>
<summary>Click to expand</summary>
<p>This content can be toggled!</p>
</details>
Enter fullscreen mode
Exit fullscreen mode
The <details> element supports several useful attributes:
open: Makes the details expanded by default
name: When using the same name for several
elements, the user can open only one dialog box at the time
5 Creative Styling Examples
Let's explore five different approaches to styling the <details> element, each demonstrating unique design patterns and techniques.
1. Simple FAQ Accordion with <details> Tag
This first demo creates a clean FAQ-style accordion with custom arrow indicators and visual feedback.
Tips:
Use summary::-webkit-details-marker { display: none; } to hide default browser markers
The details[open] selector targets the expanded state
CSS transforms create smooth arrow animations
Flexbox in the summary ensures proper spacing between text and arrow
2. <details> tag with Outside Marker
This demo showcases the native browser marker positioned outside the summary content, along with the exclusive accordion functionality using the name attribute.
Tips:
list-style-position: outside moves the marker outside the content box
The name="requirements" attribute enables exclusive accordion behavior - clicking one summary will automatically close any other open details with the same name
summary::marker allows styling of the native disclosure triangle
3. Custom Emoji Markers for <details> Summary (Open/Closed States)
This demo uses emoji as custom markers that change based on the open/closed state, perfect for thematic content.
Tips:
Use summary::marker { content: "emoji"; } to replace the default marker
The details[open] selector changes the marker when expanded
This technique works with any Unicode character or emoji
Keep the content thematically relevant to your design
4. 4 CSS Styling Variations for HTML <details> element
This comprehensive demo showcases four distinct styling approaches, each with different visual indicators and design patterns.
Style Variations:
Triangle Arrow: Classic dropdown arrow using CSS borders
Up/Down Arrow: Rotated up arrow that becomes a down when open
Cross Style: Plus sign that removes the vertical line when expanded
Inline Tooltip Style: Compact design for inline expandable content
Tips:
Use CSS borders to create geometric shapes for indicators
Absolute positioning allows precise control over custom markers
The display: none technique can hide elements in the open state
5. HTML <details> Tag for Simple Footnotes
This innovative demo transforms the <details> element into an interactive footnote system, perfect for academic or reference content.
Tips:
display: inline-block allows the details to flow with text
vertical-align: super creates the superscript effect
Fixed positioning with transforms centers the footnote content
name="footnote" creates exclusive behavior for multiple footnotes
Best Practices and Advanced Tips
Accessibility Considerations
Ensure sufficient color contrast
Test with keyboard navigation
Consider screen reader compatibility
Performance Tips
Use CSS transitions for smooth animations
Avoid complex JavaScript when CSS can achieve the same effect
Optimize for mobile touch interactions
Browser Compatibility
The <details> element is well-supported in modern browsers
Always test across different browsers for consistent behavior
Consider progressive enhancement for older browsers
Advanced Techniques
Use CSS custom properties for theme consistency
Implement ARIA attributes for enhanced accessibility
Conclusion
The HTML <details> element offers a powerful, semantic way to create interactive content without JavaScript. From simple FAQ accordions to innovative footnote systems, these examples demonstrate the versatility of this often-overlooked HTML element. By combining thoughtful CSS styling with the native functionality of <details>, you can create engaging, accessible user interfaces that enhance the user experience while maintaining clean, semantic markup.
Top comments (0)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Code of Conduct
â€¢
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Ilham Bouktir
Follow
Frontend Developer | Web Developer
Location
Agadir, Morocco
Joined
Apr 14, 2025
More from Ilham Bouktir
10 Mind-Blowing CodePen Demos
#codepen
#html
#css
#javascript
Best GitHub Repositories for Programmers
#programming
#frontend
#javascript
#github
Top 10 CSS Tricks Every Front-End Developer Should Know
#css
#frontend
ðŸ’Ž DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community â€” A space to discuss and keep up software development and manage your software career
Home
DEV++
Reading List
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Free Postgres Database
Software comparisons
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem â€” the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community Â© 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account