Rust Cheat Sheet - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE—the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project — features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto—from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Mohd Helmi Aziz
Posted on Sep 21
Rust Cheat Sheet
#programming
#rust
#microservices
#cheatsheet
1. SETUP:
# Install Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
# Check version
rustc --version
# Create new project
cargo new my_project
cd my_project
# Build and run
cargo build
cargo run
Enter fullscreen mode
Exit fullscreen mode
2. BASICS:
fn main() {
println!("Hello, world!"); // Print
let x = 5;
// Immutable variable
let mut y = 10;
// Mutable variable
const PI: f64 = 3.1415;
// Constant
}
Enter fullscreen mode
Exit fullscreen mode
3. DATA TYPES:
// Scalar
let a: i32 = -42;
let b: u32 = 42;
let c: f64 = 3.14;
let d: bool = true;
let e: char = 'R';
// Compound
let tup: (i32, f64, char) = (500, 6.4, 'z');
let (x, y, z) = tup; // Destructuring
let arr = [1, 2, 3, 4, 5];
let slice: &[i32] = &arr[1..3];
Enter fullscreen mode
Exit fullscreen mode
4. CONTROL FLOW:
if x > 5 {
println!("Greater!");
} else {
println!("Smaller!");
}
for n in 1..5 {
// 1 to 4
println!("{}", n);
}
let mut counter = 0;
while counter < 3 {
println!("count = {}", counter);
counter += 1;
}
Enter fullscreen mode
Exit fullscreen mode
5. FUNCTIONS:
fn add(a: i32, b: i32) -> i32 {
a + b // last expression = return
}
fn main() {
println!("{}", add(5, 3));
}
Enter fullscreen mode
Exit fullscreen mode
6. OWNERSHIP & BORROWING:
fn main() {
let s = String::from("Hello");
takes_ownership(s); // moved
// println!("{}", s); // ❌ cannot use after move
let x = 5;
makes_copy(x); // i32 implements Copy
println!("{}", x); // ✅ still valid
let s2 = String::from("Hi");
borrow(&s2); // pass by reference
println!("{}", s2); // ✅ still valid
}
fn takes_ownership(s: String) {
println!("{}", s);
}
fn makes_copy(x: i32) {
println!("{}", x);
}
fn borrow(s: &String) {
println!("{}", s);
}
Enter fullscreen mode
Exit fullscreen mode
7. STRUCTS & ENUMS:
struct User {
name: String,
age: u8,
}
enum Direction {
Up,
Down,
Left,
Right,
}
fn main() {
let user = User { name: String::from("Alice"), age: 25 };
println!("{} is {}", user.name, user.age);
let dir = Direction::Left;
match dir {
Direction::Up => println!("Up"),
Direction::Down => println!("Down"),
Direction::Left => println!("Left"),
Direction::Right => println!("Right"),
}
}
Enter fullscreen mode
Exit fullscreen mode
8. TRAITS & IMPL:
trait Greet {
fn say_hello(&self);
}
struct Person {
name: String,
}
impl Greet for Person {
fn say_hello(&self) {
println!("Hello, {}!", self.name);
}
}
fn main() {
let p = Person { name: String::from("Bob") };
p.say_hello();
}
Enter fullscreen mode
Exit fullscreen mode
9. ERROR HANDLING:
fn divide(a: f64, b: f64) -> Result<f64, String> {
if b == 0.0 {
Err(String::from("Division by zero!"))
} else {
Ok(a / b)
}
}
fn main() {
match divide(10.0, 2.0) {
Ok(res) => println!("Result: {}", res),
Err(err) => println!("Error: {}", err),
}
}
Enter fullscreen mode
Exit fullscreen mode
10. COLLECTIONS:
// Vector
let mut v = vec![1, 2, 3];
v.push(4);
for i in &v {
println!("{}", i);
}
// HashMap
use std::collections::HashMap;
let mut scores = HashMap::new();
scores.insert("Alice", 10);
scores.insert("Bob", 20);
println!("{:?}", scores);
Enter fullscreen mode
Exit fullscreen mode
11. COMMON MACROS:
println!("Hello {}!", "Rust"); // Print with formatting
dbg!(42); // Debug print to stderr
vec![1, 2, 3]; // Create vector
Enter fullscreen mode
Exit fullscreen mode
12. LIFETIMES (BASIC):
fn longest<'a>(a: &'a str, b: &'a str) -> &'a str {
if a.len() > b.len() { a } else { b }
}
fn main() {
let x = String::from("abcd");
let y = "xyz";
println!("{}", longest(&x, y));
}
Enter fullscreen mode
Exit fullscreen mode
13. CARGO COMMANDS:
cargo new project_name
# Create new project
cargo build
# Build project
cargo run
# Run project
cargo check
# Check for errors
cargo test
# Run tests
cargo fmt
# Format code
cargo doc --open
# Generate docs
Enter fullscreen mode
Exit fullscreen mode
Top comments (1)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Mirko Donnarumma
Mirko Donnarumma
Mirko Donnarumma
Follow
Rust newbie, improving every day
Joined
Nov 25, 2024
•
Sep 22
Dropdown menu
Copy link
Hide
Basics are often overlooked, great job posting this!
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Code of Conduct
•
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Mohd Helmi Aziz
Follow
Software Developer, Calisthenic Practitioner & Music Lover
Location
Kuala Lumpur, Malaysia
Work
Xeno Software Solutions
Joined
Aug 15, 2025
More from Mohd Helmi Aziz
Golang Cheat Sheet
#programming
#go
#microservices
#cheatsheet
💎 DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community — A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Reading List
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Free Postgres Database
Software comparisons
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem — the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community © 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account