The One Advice I'd Give My Past Self: Build Boring Sh*t That Sells - DEV Community
Forem Feed
Follow new Subforems to improve your feed
DEV Community
Follow
A space to discuss and keep up software development and manage your software career
Gamers Forem
Follow
An inclusive community for gaming enthusiasts
Future
Follow
News and discussion of science and technology such as AI, VR, cryptocurrency, quantum computing, and more.
Music Forem
Follow
From composing and gigging to gear, hot music takes, and everything in between.
DUMB DEV Community
Follow
Memes and software development shitposting
Vibe Coding Forem
Follow
Discussing AI software development, and showing off what we're building.
Popcorn Movies and TV
Follow
Movie and TV enthusiasm, criticism and everything in-between.
Design Community
Follow
Web design, graphic design and everything in-between
Maker Forem
Follow
A community for makers, hobbyists, and professionals to discuss Arduino, Raspberry Pi, 3D printing, and much more.
Scale Forem
Follow
For engineers building software at scale. We discuss architecture, cloud-native, and SRE—the hard-won lessons you can't just Google
Forem Core
Follow
Discussing the core forem open source software project — features, bugs, performance, self-hosting.
Security Forem
Follow
Your central hub for all things security. From ethical hacking and CTFs to GRC and career development, for beginners and pros alike
Open Forem
Follow
A general discussion space for the Forem community. If it doesn't have a home elsewhere, it belongs here
Crypto Forem
Follow
A collaborative community for all things Crypto—from Bitcoin to protocol development and DeFi to NFTs and market analysis.
Dropdown menu
Dropdown menu
Skip to content
Navigation menu
Search
Powered by Algolia
Search
Log in
Create account
DEV Community
Close
Add reaction
Like
Unicorn
Exploding Head
Raised Hands
Fire
Jump to Comments
Save
Boost
More...
Moderate
Copy link
Copy link
Copied to Clipboard
Share to X
Share to LinkedIn
Share to Facebook
Share to Mastodon
Report Abuse
Shayan
Posted on Sep 15
The One Advice I'd Give My Past Self: Build Boring Sh*t That Sells
#webdev
#programming
#javascript
#ai
I've been building products full-time for several years now. If I could go back and give myself one piece of advice when I started, it would be this: stop trying to build something revolutionary and start building something people already pay for.
I know that sounds depressing. We all got into this because we wanted to change the world, not build another invoicing app. But here's the thing about building products for a living: your landlord doesn't accept GitHub stars as payment.
The Market Validation Trap
Most indie hackers start the same way. They spend months building something nobody has ever seen before. A revolutionary new approach to an old problem. A tool that's going to change how people work. Something that doesn't exist because it's so innovative.
You know what these projects usually have in common? Zero customers.
Meanwhile, you'll see other developers launch "boring" products and hit $5K MRR in three months. Another email tool. Another form builder. Another analytics dashboard. They're not changing the world, but they're changing their bank accounts.
Why Boring Works
Here's what took me too long to understand: if competitors exist, that's good news. It means people are already pulling out their credit cards for this type of solution. You don't have to convince anyone they need it. You don't have to educate the market. You don't have to wait for behavior change.
The market is already there. You just need to grab a small piece of it.
Think about it this way. There are probably 50 different project management tools. Notion, Asana, Monday, ClickUp, and dozens more. Yet Linear came along, built another project management tool, and raised millions. Why? Because the market for project management is massive. Even 0.1% of that market is enough to build a sustainable business.
Understanding Risk as an Indie Hacker
When you're building products solo or with a small team, you're not playing the same game as venture-backed startups. They can afford to take moonshots because they have 18 months of runway and investors who expect 9 out of 10 bets to fail.
You probably have 6 months of savings and a partner asking when this "building apps thing" is going to start paying bills.
Your biggest risk isn't that someone copies your idea. Your biggest risk is that nobody wants what you're building. And the best way to reduce that risk is to build something people are already buying from someone else.
The Math is Simple
Let's say you want to make $10K per month. That's a good living for most people. Here are your options:
Option A: Build something revolutionary that nobody's seen before
Market size: Unknown
Customer education needed: Massive
Willingness to pay: Unknown
Competition: None (red flag)
Time to first customer: 6-12 months maybe?
Option B: Build a simpler alternative to an existing product
Market size: Proven (just look at competitor revenues)
Customer education needed: None
Willingness to pay: Proven
Competition: Yes (validation)
Time to first customer: 1-3 months
With Option B, you need just 100 customers paying $100/month or 334 customers paying $30/month. If your competitor has 10,000 customers, you need to convince 1-3% of them to switch. That's not a moonshot. That's just execution.
How to Find These Boring Ideas
The process is embarrassingly simple:
Go to any SaaS marketplace or directory
Find products charging $50+ per month
Read their reviews and complaints
Search "[product name] alternatives" on Google
If people are searching for alternatives, you've found your opportunity
I did this with UserJot. The feedback management market was clearly proven - companies were paying hundreds per month for these tools. But when I researched deeper, I found a gap. There was room for something different in that market. The opportunity wasn't to copy what existed, but to serve the customers who weren't quite happy with their current options.
But What About Competition?
This is where most people get stuck. "But Stripe already exists!" "But there are already 100 form builders!"
Good. That means the market is validated. Your job isn't to beat all of them. Your job is to find the gap they're not filling. Every successful product leaves gaps. Maybe they've moved upmarket and abandoned small businesses. Maybe they've become too complex for simple use cases. Maybe they're missing a workflow that a specific niche needs.
Big companies can't serve everyone perfectly. They make trade-offs. Your opportunity is in those trade-offs.
The Innovation Misconception
You don't need to invent a new category. Innovation can be:
Better pricing model (no per-user pricing when everyone else has it)
Better user experience (cleaner interface when competitors are bloated)
Better support (actually answering emails when competitors use chatbots)
Different target market (freelancers when competitors target enterprise)
Regional focus (built for EU compliance when competitors are US-focused)
Stripe didn't invent payment processing. They just made it developer-friendly. Notion didn't invent docs and databases. They just put them in one place. Linear didn't invent project management. They just made it fast and keyboard-driven.
My Actual Results
When I switched from building "innovative" products to building in proven markets, everything changed. With my previous revolutionary ideas:
6 months to launch
0 paying customers after another 6 months
Constant pivoting because nobody understood the value
With UserJot (entering a proven market with clear differentiation):
6 weeks to launch
First paying customer in week 2
Clear roadmap because customers tell me exactly what they need
The difference? With UserJot, I found a proven market and identified where I could differentiate. Companies already collect feedback. They already pay for these tools. I just needed to understand what gap existed and fill it.
The Reality Check
Look, I get it. Building another email tool or form builder doesn't feel sexy. You didn't learn to code to make marginal improvements to existing products. You wanted to build the future.
But here's the reality: you can't build the future if you can't pay rent. And you can't iterate your way to product-market fit if you run out of money in month 3.
Start with boring. Make money. Then use that stability and experience to build whatever moonshot you want. But don't bet your ability to do this full-time on being the one person who successfully creates a new market from nothing.
The Checklist
Before you build your next product, ask yourself:
Are people already paying for something similar?
Can I find complaints about existing solutions?
Can I build a simpler/cheaper/better version for a specific group?
Will people understand what this is without a 10-minute explanation?
Can I point to specific companies and say "they would pay for this"?
If you answered no to any of these, you're taking on unnecessary risk.
The Practical Playbook
Here's exactly how to execute this strategy:
1. Pick Your Market
Find a category where companies spend $50-500/month. These are sweet spots, expensive enough that people pay, cheap enough that decisions happen quickly.
2. Research the Gap
Don't just copy. Find what's missing. Maybe existing tools are too complex for small teams. Maybe they're too expensive for bootstrappers. Maybe they're missing a key workflow. There's always a gap.
3. Build an MVP in 4-6 Weeks
Not 6 months. Not a year. If you can't build a sellable version in 6 weeks, the scope is too big. Cut features until you can.
4. Launch with Actual Pricing
Free trials are fine, but have real pricing from day one. You want to validate that people will pay, not just that they'll sign up.
5. Add a Feedback Board
This is crucial and most people skip it. Add a feedback board (I use UserJot for this) from day one. Let users tell you what to build next. This turns your early customers into your product roadmap.
6. Double Down on What Works
Once you get your first 10 customers, stop guessing. They'll tell you exactly what features to build, what to fix, and what to ignore.
7. Iterate Based on Feedback, Not Feelings
Your customers are already paying you. They're invested in your success. Listen to them, not your assumptions about what the market wants.
Final Thoughts
The startup media loves stories about revolutionary products that created new categories. Those stories are exciting. They're also survivorship bias in action. For every Uber, there are 10,000 "Uber for X" companies that died because the market didn't exist.
You don't need to be revolutionary to build a sustainable business. You just need to be useful to enough people who are already paying for something similar.
Find a proven market. Build something a little better, cheaper, or simpler. Get to $10K MRR. Then worry about changing the world.
Your past self will thank you when you're actually doing this full-time instead of going back to a day job after your savings run out.
Top comments (14)
Subscribe
Personal
Trusted User
Create template
Templates let you quickly answer FAQs or store snippets for re-use.
Submit
Preview
Dismiss
Collapse
Expand
Jonas Scholz
Jonas Scholz
Jonas Scholz
Follow
Building the easiest way to deploy Docker containers @ sliplane.io
Location
Germany
Education
Karlsruher Institute for Technology
Pronouns
he/him
Work
Co-Founder @ sliplane.io
Joined
Aug 31, 2020
•
Sep 15
Dropdown menu
Copy link
Hide
your landlord doesn't accept GitHub stars as payment
have you tried though 🧐
Like comment:
Like comment:
9 likes
Like
Comment button
Reply
Collapse
Expand
Shayan
Shayan
Shayan
Follow
Building UserJot in Public
Location
Maryland, United States
Joined
Jan 14, 2025
•
Sep 16
Dropdown menu
Copy link
Hide
No maybe I should 😂
Like comment:
Like comment:
4 likes
Like
Comment button
Reply
Collapse
Expand
Cesar Aguirre
Cesar Aguirre
Cesar Aguirre
Follow
Software engineer, lifelong learner, language enthusiast & avid reader — Get my free 7-day email course to refactor your coding career: bit.ly/csarag-lessons
Location
Colombia 🇨🇴 (not Columbia)
Work
Content, Courses & Training for .NET teams — Helping teams to write maintainable & performant code
Joined
Jul 23, 2019
•
Sep 17
Dropdown menu
Copy link
Hide
Your past self will thank you when you're actually doing this full-time instead of going back to a day job after your savings run out.
Mic drop moment. Love your Practical Playbook section, especially tip #4.
Like comment:
Like comment:
4 likes
Like
Comment button
Reply
Collapse
Expand
Oscar
Oscar
Oscar
Follow
18 y/o, full-stack web dev specializing in backend development, content creator, low level programmer (aka Rust and C enjoyer). nvim & arch user
Email
oscar.gaske.cs@gmail.com
Location
United States, Virginia
Education
University of Mary Washington (current student)
Joined
May 9, 2023
•
Sep 17
Dropdown menu
Copy link
Hide
Definitely something I needed to hear 2 years ago.
Like comment:
Like comment:
5 likes
Like
Comment button
Reply
Collapse
Expand
leob
leob
leob
Follow
Joined
Aug 4, 2017
•
Sep 17
• Edited on Sep 18
• Edited
Dropdown menu
Copy link
Hide
Great insights (and well-written) - brilliant stuff, this is the kind of dev.to post which deserves way more likes (and should be in dev.to's "7 top posts of the week" as well) ...
Like comment:
Like comment:
4 likes
Like
Comment button
Reply
Collapse
Expand
Aleksei Berezkin
Aleksei Berezkin
Aleksei Berezkin
Follow
Passionate about the frontend and the webdev tooling
Location
München, Deutschland
Joined
Aug 22, 2020
•
Sep 16
Dropdown menu
Copy link
Hide
Well it's sometimes hard to tell if the product is “too innovative” or “new yet boring”. Even with your project, UserJot, which you frame as “boring” — I suppose it has something innovative, which didn't exist before. So how do exactly you tell apart “boring” vs ”innovative”?
Like comment:
Like comment:
4 likes
Like
Comment button
Reply
Collapse
Expand
Saribeg
Saribeg
Saribeg
Follow
Full-Stack JavaScript Developer
Joined
Sep 9, 2025
•
Sep 18
Dropdown menu
Copy link
Hide
Thanks for the insights!
If you’re working solo, this breakdown makes total sense to me.
I just wonder, if there’s a small team and some resources, maybe there’s still room to try something new... Of course, that would need proper research, validation, and talking to potential users before jumping in. Just thoughts. )))
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Collapse
Expand
Yalda Khoshpey
Yalda Khoshpey
Yalda Khoshpey
Follow
🎨 Front-End Developer | 🛠️ WordPress Customizer
💡 Skilled in HTML, CSS, JavaScript, and learning Python
🌐 Crafting clean, responsive websites with love and creativity
Email
missyaldatw@gmail.com
Location
IRAN,arak
Education
🎓 Education
Bachelor's Degree in French Literature
Azad University of Arak, Iran
Pronouns
she/her
Joined
Jun 11, 2025
•
Sep 19
Dropdown menu
Copy link
Hide
👏🏻 awesome article
Like comment:
Like comment:
2 likes
Like
Comment button
Reply
Collapse
Expand
Alexander Ertli
Alexander Ertli
Alexander Ertli
Follow
Developing impactful solutions from Hamburg and founder of contenox.
Email
alexander@contenox.com
Location
Hamburg, Germany
Education
University Bremen, Germany
Work
Solo Founder
Joined
May 15, 2025
•
Sep 18
Dropdown menu
Copy link
Hide
Revolutionary products are hard, technically. There is something special when you have to write your own distributed message delivery to get a function triggered. It's a solved problem. Just use Kafka or AWS. But no, now here we are even saying that none of that matters and just a simple ChatGPT wrapper slapped on some CRM will sell. Yeah, it will, and it probably would make my current rent bill astronomically small.
But you know what? Someone has to keep the edge moving, even if it means that failing multiple times will still, at some point, lead to a return that at least catches up with that ChatGPT wrapper slapped on some CRM (spoiler: it may never do).
Like comment:
Like comment:
2 likes
Like
Comment button
Reply
Collapse
Expand
Andrii
Andrii
Andrii
Follow
Joined
Nov 20, 2020
•
Sep 18
Dropdown menu
Copy link
Hide
Awesome article! But how do you find customers and communicate with them? For me it sounds like the hardest part in all of this, and even if you create something nice but don't have sales skills it's doomed :/
Like comment:
Like comment:
1 like
Like
Comment button
Reply
Collapse
Expand
Aaron Reese
Aaron Reese
Aaron Reese
Follow
Joined
May 12, 2023
•
Sep 18
Dropdown menu
Copy link
Hide
Sounds like a gap in the market for introvert programmers who needs to market their stuff, but how will they ever find out about it 🤦
Like comment:
Like comment:
3 likes
Like
Comment button
Reply
Collapse
Expand
Naveen Garg
Naveen Garg
Naveen Garg
Follow
A student and enthusiast in ML and I also code WebDev works.
Joined
Sep 1, 2025
•
Sep 20
Dropdown menu
Copy link
Hide
I shall copy you in your journey of tech. Shall I?
Like comment:
Like comment:
1 like
Like
Comment button
Reply
View full discussion (14 comments)
Code of Conduct
•
Report abuse
Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.
Hide child comments as well
Confirm
For further actions, you may consider blocking this person and/or reporting abuse
Shayan
Follow
Building UserJot in Public
Location
Maryland, United States
Joined
Jan 14, 2025
More from Shayan
Why Good Products Fail: A Reality Check on Marketing
#webdev
#programming
#javascript
#ai
The Backwards Way to $10K MRR: Build SEO First, Product Second
#webdev
#programming
#javascript
#ai
My SaaS Infrastructure as a Solo Founder
#webdev
#programming
#javascript
#ai
💎 DEV Diamond Sponsors
Thank you to our Diamond Sponsors for supporting the DEV Community
Google AI is the official AI Model and Platform Partner of DEV
Neon is the official database partner of DEV
Algolia is the official search partner of DEV
DEV Community — A space to discuss and keep up software development and manage your software career
Home
DEV++
Welcome Thread
Podcasts
Videos
Tags
DEV Education Tracks
DEV Challenges
DEV Help
Advertise on DEV
DEV Showcase
About
Contact
Forem Shop
Code of Conduct
Privacy Policy
Terms of Use
Built on Forem — the open source software that powers DEV and other inclusive communities.
Made with love and Ruby on Rails. DEV Community © 2016 - 2025.
We're a place where coders share, stay up-to-date and grow their careers.
Log in
Create account