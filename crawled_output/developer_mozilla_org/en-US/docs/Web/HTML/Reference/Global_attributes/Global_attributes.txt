Global attributes - HTML | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Border-image generator
Border-radius generator
Box-shadow generator
Color mixer
Color picker
Shape generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Web
HTML
Reference
Global attributes
Global attributes
Global attributes are attributes common to all HTML elements; they can be used on all elements, though they may have no effect on some elements.
Global attributes may be specified on all HTML elements, even those not specified in the standard. That means that any non-standard elements must still permit these attributes, even though using those elements means that the document is no longer HTML5-compliant. For example, HTML5-compliant browsers hide content marked as <foo hidden>â¦</foo>, even though <foo> is not a valid HTML element.
In addition to the basic HTML global attributes, the following global attributes also exist:
xml:lang and xml:base â these are inherited from the XHTML specifications and deprecated, but kept for compatibility purposes.
The ARIA role attribute and the multiple aria-* states and properties, used for ensuring accessibility.
The event handler attributes listed below.
In this article
List of global attributesList of global event handler attributesSpecificationsBrowser compatibilitySee also
List of global attributes
accesskey
Provides a hint for generating a keyboard shortcut for the current element. This attribute consists of a space-separated list of characters. The browser should use the first one that exists on the computer keyboard layout.
anchor
Non-standard
Associates a positioned element with an anchor element. The attribute's value is the id value of the element you want to anchor the positioned element to. The element can then be positioned using CSS anchor positioning.
autocapitalize
Controls whether inputted text is automatically capitalized and, if so, in what manner.
autocorrect
Controls whether input text is automatically corrected for spelling errors.
This can be applied to elements that have editable text except for <input> elements with the attribute: type="password", type="email", or type="url".
autofocus
Indicates that an element is to be focused on page load, or as soon as the <dialog> it is part of is displayed. This attribute is a boolean, initially false.
class
A space-separated list of the classes of the element. Classes allow CSS and JavaScript to select and access specific elements via the class selectors or functions like the method Document.getElementsByClassName().
contenteditable
An enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing. The attribute must take one of the following values:
true or the empty string, which indicates that the element must be editable;
false, which indicates that the element must not be editable.
plaintext-only, which indicates the element's raw text is editable, but rich text formatting is disabled.
data-*
Forms a class of attributes, called custom data attributes, that allow proprietary information to be exchanged between the HTML and its DOM representation that may be used by scripts. All such custom data are available via the HTMLElement interface of the element the attribute is set on. The HTMLElement.dataset property gives access to them.
dir
An enumerated attribute indicating the directionality of the element's text. It can have the following values:
ltr, which means left to right and is to be used for languages that are written from the left to the right (like English);
rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic);
auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then it applies that directionality to the whole element.
draggable
An enumerated attribute indicating whether the element can be dragged, using the Drag and Drop API. It can have the following values:
true, which indicates that the element may be dragged
false, which indicates that the element may not be dragged.
enterkeyhint
Hints what action label (or icon) to present for the enter key on virtual keyboards.
exportparts
Used to transitively export shadow parts from a nested shadow tree into a containing light tree.
hidden
An enumerated attribute indicating that the element is not yet, or is no longer, relevant. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown.
id
Defines a unique identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a fragment identifier), scripting, or styling (with CSS).
inert
A boolean value that makes the browser disregard user input events for the element. Useful when click events are present.
inputmode
Provides a hint to browsers about the type of virtual keyboard configuration to use when editing this element or its contents. Used primarily on <input> elements, but is usable on any element while in contenteditable mode.
is
Allows you to specify that a standard HTML element should behave like a registered customized built-in element (see Using custom elements for more details).
Note:
The item* attributes are part of the WHATWG HTML Microdata feature.
itemid
The unique, global identifier of an item.
itemprop
Used to add properties to an item. Every HTML element may have an itemprop attribute specified, where an itemprop consists of a name and value pair.
itemref
Properties that are not descendants of an element with the itemscope attribute can be associated with the item using an itemref. It provides a list of element ids (not itemids) with additional properties elsewhere in the document.
itemscope
itemscope (usually) works along with itemtype to specify that the HTML contained in a block is about a particular item. itemscope creates the Item and defines the scope of the itemtype associated with it. itemtype is a valid URL of a vocabulary (such as schema.org) that describes the item and its properties context.
itemtype
Specifies the URL of the vocabulary that will be used to define itemprops (item properties) in the data structure. itemscope is used to set the scope of where in the data structure the vocabulary set by itemtype will be active.
lang
Helps define the language of an element: the language that non-editable elements are in, or the language that editable elements should be written in by the user. The attribute should contain a valid BCP 47 language tag. xml:lang has priority over it.
nonce
A cryptographic nonce ("number used once") which can be used by Content Security Policy to determine whether or not a given fetch will be allowed to proceed.
part
A space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the ::part pseudo-element.
popover
Used to designate an element as a popover element (see Popover API). Popover elements are hidden via display: none until opened via an invoking/control element (i.e., a <button> or <input type="button"> with a popovertarget attribute) or a HTMLElement.showPopover() call.
role
Roles define the semantic meaning of content, allowing screen readers and other tools to present and support interaction with an object in a way that is consistent with user expectations of that type of object. roles are added to HTML elements using role="role_type", where role_type is the name of a role in the ARIA specification.
slot
Assigns a slot in a shadow DOM shadow tree to an element: An element with a slot attribute is assigned to the slot created by the <slot> element whose name attribute's value matches that slot attribute's value.
spellcheck
An enumerated attribute defines whether the element may be checked for spelling errors. It may have the following values:
empty string or true, which indicates that the element should be, if possible, checked for spelling errors;
false, which indicates that the element should not be checked for spelling errors.
style
Contains CSS styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the <style> element have mainly the purpose of allowing for quick styling, for example for testing purposes.
tabindex
An integer attribute indicating if the element can take input focus (is focusable), if it should participate to sequential keyboard navigation, and if so, at what position. It can take several values:
a negative value means that the element should be focusable, but should not be reachable via sequential keyboard navigation;
0 means that the element should be focusable and reachable via sequential keyboard navigation, but its relative order is defined by the platform convention;
a positive value means that the element should be focusable and reachable via sequential keyboard navigation; the order in which the elements are focused is the increasing value of the tabindex. If several elements share the same tabindex, their relative order follows their relative positions in the document.
title
Contains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip.
translate
An enumerated attribute that is used to specify whether an element's attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged. It can have the following values:
empty string or yes, which indicates that the element will be translated.
no, which indicates that the element will not be translated.
virtualkeyboardpolicy
Experimental
An enumerated attribute used to control the on-screen virtual keyboard behavior on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available for elements that its content is editable (for example, it is an <input> or <textarea> element, or an element with the contenteditable attribute set).
auto or an empty string, which automatically shows the virtual keyboard when the element is focused or tapped.
manual, which decouples focus and tap on the element from the virtual keyboard's state.
writingsuggestions
An enumerated attribute indicating if browser-provided writing suggestions should be enabled under the scope of the element or not.
false, which disables the browser's writing suggestions.
true or an empty string, which enables writing suggestions.
List of global event handler attributes
HTML event handler attributes are discouraged; see HTML attribute reference for how they work.
While the attributes listed below apply to all elements, they are not useful on all elements. For example, onvolumechange HTML attribute is accepted by all elements and attaches an event listener for volumechange, but only media elements will ever receive a volumechange event fired by the browser. For other elements, you can only use EventTarget.dispatchEvent() to manually dispatch one. Some attributes can be specified on <body>, but they would instead listen to events on window.
onabort
onanimationcancel
onanimationend
onanimationiteration
onanimationstart
onauxclick
onbeforeinput
onbeforematch
onbeforetoggle
onblur
oncancel
oncanplay
oncanplaythrough
onchange
onclick
onclose
oncommand
oncontentvisibilityautostatechange
oncontextlost
oncontextmenu
oncontextrestored
oncopy
oncuechange
oncut
ondblclick
ondrag
ondragend
ondragenter
ondragleave
ondragover
ondragstart
ondrop
ondurationchange
onemptied
onended
onerror
onfocus
onfocusin
onfocusout
onformdata
onfullscreenchange
onfullscreenerror
ongesturechange
Non-standard
ongestureend
Non-standard
ongesturestart
Non-standard
ongotpointercapture
oninput
oninvalid
onkeydown
onkeypress
Deprecated
onkeyup
onload
onloadeddata
onloadedmetadata
onloadstart
onlostpointercapture
onmousedown
onmouseenter
onmouseleave
onmousemove
onmouseout
onmouseover
onmouseup
onmousewheel
Deprecated
Non-standard
onpaste
onpause
onplay
onplaying
onpointercancel
onpointerdown
onpointerenter
onpointerleave
onpointermove
onpointerout
onpointerover
onpointerrawupdate
onpointerup
onprogress
onratechange
onreset
onresize
onscroll
onscrollend
onscrollsnapchange
Experimental
onscrollsnapchanging
Experimental
onsecuritypolicyviolation
onseeked
onseeking
onselect
onselectionchange
onselectstart
onslotchange
onstalled
onsubmit
onsuspend
ontimeupdate
ontoggle
ontouchcancel
ontouchend
ontouchmove
ontouchstart
ontransitioncancel
ontransitionend
ontransitionrun
ontransitionstart
onvolumechange
onwaiting
onwebkitmouseforcechanged
Non-standard
onwebkitmouseforcedown
Non-standard
onwebkitmouseforceup
Non-standard
onwebkitmouseforcewillbegin
Non-standard
onwheel
Specifications
Specification
HTML# the-title-attribute
HTML# the-accesskey-attribute
HTML# writing-suggestions
HTML# attr-popover-hint
HTML# the-hidden-attribute
HTML# dom-fe-autofocus
HTML# nonce-does-not-update-dom
HTML# attr-enterkeyhint
HTML# the-style-attribute
HTML# attr-nonce
HTML# attr-spellcheck
HTML# the-inert-attribute
HTML# attr-lang
HTML# attr-tabindex
HTML# classes
HTML# attr-inputmode
HTML# attr-data-*
HTML# attr-translate
HTML# the-draggable-attribute
HTML# attr-autocapitalize
HTML# attr-autocorrect
HTML# inert-subtrees
HTML# the-dir-attribute
HTML# the-id-attribute
HTML# attr-contenteditable
HTML# the-popover-attribute
HTML# attr-is
HTML# attr-slot
CSS Style Attributes# style-attribute
CSS Shadow Parts# part-attr
CSS Shadow Parts# element-attrdef-html-global-exportparts
VirtualKeyboard API# dom-elementcontenteditable-virtualkeyboardpolicy
DOM# ref-for-dom-element-slotâ
Browser compatibility
See also
Element interface that allows querying most global attributes.
Help improve MDN
Learn how to contribute
This page was last modified on â¨Sep 24, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
HTMLGuidesCheatsheetCommentsConstraint validationContent categoriesDate and time formatsMicrodataMicroformatsQuirks and standards modesResponsive imagesViewport meta elementHow toDefine terms with HTMLUse data attributesUse cross-origin imagesAdd a hitmap on top of an imageAuthor fast-loading HTML pagesAdd JavaScriptReferenceElements<a><abbr><acronym>
Deprecated
<address><area><article><aside><audio><b><base><bdi><bdo><big>
Deprecated
<blockquote><body><br><button><canvas><caption><center>
Deprecated
<cite><code><col><colgroup><data><datalist><dd><del><details><dfn><dialog><dir>
Deprecated
<div><dl><dt><em><embed><fencedframe>
Experimental
<fieldset><figcaption><figure><font>
Deprecated
<footer><form><frame>
Deprecated
<frameset>
Deprecated
<h1><head><header><hgroup><hr><html><i><iframe><img><input><ins><kbd><label><legend><li><link><main><map><mark><marquee>
Deprecated
<menu><meta><meter><nav><nobr>
Deprecated
<noembed>
Deprecated
<noframes>
Deprecated
<noscript><object><ol><optgroup><option><output><p><param>
Deprecated
<picture><plaintext>
Deprecated
<pre><progress><q><rb>
Deprecated
<rp><rt><rtc>
Deprecated
<ruby><s><samp><script><search><section><select><selectedcontent>
Experimental
<slot><small><source><span><strike>
Deprecated
<strong><style><sub><summary><sup><table><tbody><td><template><textarea><tfoot><th><thead><time><title><tr><track><tt>
Deprecated
<u><ul><var><video><wbr><xmp>
Deprecated
AttributesacceptautocompletecapturecontentcrossorigindirnamedisabledelementtimingforformmaxmaxlengthminminlengthmultiplepatternplaceholderreadonlyrelrequiredsizestepGlobal attributesaccesskeyanchor
Experimental
Non-standard
autocapitalizeautocorrectautofocusclasscontenteditabledata-*dirdraggableenterkeyhintexportpartshiddenidinertinputmodeisitemiditempropitemrefitemscopeitemtypelangnoncepartpopoverslotspellcheckstyletabindextitletranslatevirtualkeyboardpolicy
Experimental
writingsuggestionsAttributes by element<input> type<input type="button"><input type="checkbox"><input type="color"><input type="date"><input type="datetime-local"><input type="email"><input type="file"><input type="hidden"><input type="image"><input type="month"><input type="number"><input type="password"><input type="radio"><input type="range"><input type="reset"><input type="search"><input type="submit"><input type="tel"><input type="text"><input type="time"><input type="url"><input type="week"><script> typeimportmapspeculationrules
Experimental
Non-standard
<meta> namecolor-schemereferrerrobotstheme-colorviewport<meta> http-equivAttribute valuesrel keywordsrel="alternate stylesheet"rel="compression-dictionary"
Experimental
rel="dns-prefetch"rel="manifest"rel="me"rel="modulepreload"rel="noopener"rel="noreferrer"rel="preconnect"rel=prefetchrel=preloadrel=prerender
Non-standard
Deprecated
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.