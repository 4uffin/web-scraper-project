Color format converter - CSS | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Border-image generator
Border-radius generator
Box-shadow generator
Color mixer
Color picker
Shape generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Web
CSS
CSS colors
Color format converter
Color format converter
This tool lets you enter or pick a color and copy its corresponding value in any CSS color format. You can use the generated color value anywhere the <color> data type is supported in CSS. This tool can also help you understand the syntax of the different color notations.
In this article
How to use the toolSee also
How to use the tool
Enter a color in any format or pick one in the sRGB color space. You can also adjust the opacity (alpha channel).
Click the Copy button next to the corresponding color format to quickly copy its value. You can also click a color format name to learn more about it.
<div class="container">
<dialog open>
<p>
<label for="color-text">
Enter a color value in any format or pick a color:
</label>
<span class="color-inputs">
<input type="text" id="color-text" />
<input type="color" id="color-input" />
</span>
</p>
<p>
<label for="opacity-input">Adjust the opacity: </label>
<input
type="range"
id="opacity-input"
value="1"
min="0"
max="1"
step="0.01" />
</p>
<hr />
<table id="output-colors">
<caption>
Your color in different formats:
</caption>
<tbody>
<tr id="rgb-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb"
target="_blank">
RGB
</a>
</th>
<td><button id="copy-rgb-button">Copy</button><span></span></td>
</tr>
<tr id="hex">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color"
target="_blank">
HEX
</a>
</th>
<td><button id="copy-hex-button">Copy</button><span></span></td>
</tr>
<tr id="hsl-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl"
target="_blank">
HSL
</a>
</th>
<td><button id="copy-hsl-button">Copy</button><span></span></td>
</tr>
<tr id="hwb-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hwb"
target="_blank">
HWB
</a>
</th>
<td><button id="copy-hwb-button">Copy</button><span></span></td>
</tr>
<tr id="color-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color"
target="_blank">
color()
</a>
</th>
<td><button id="copy-color-button">Copy</button><span></span></td>
</tr>
<tr id="lab-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lab"
target="_blank">
Lab
</a>
</th>
<td><button id="copy-lab-button">Copy</button><span></span></td>
</tr>
<tr id="lch-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch"
target="_blank">
LCH
</a>
</th>
<td><button id="copy-lch-button">Copy</button><span></span></td>
</tr>
<tr id="oklab-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklab"
target="_blank">
Oklab
</a>
</th>
<td><button id="copy-oklab-button">Copy</button><span></span></td>
</tr>
<tr id="oklch-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch"
target="_blank">
OkLCh
</a>
</th>
<td><button id="copy-oklch-button">Copy</button><span></span></td>
</tr>
<tr id="xyz-d50-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Glossary/Color_space#xyz-d50"
target="_blank">
XYZ D50
</a>
</th>
<td><button id="copy-xyz-d50-button">Copy</button><span></span></td>
</tr>
<tr id="xyz-d65-function">
<th>
<a
href="https://developer.mozilla.org/en-US/docs/Glossary/Color_space#xyz"
target="_blank">
XYZ D65
</a>
</th>
<td><button id="copy-xyz-d65-button">Copy</button><span></span></td>
</tr>
</tbody>
</table>
</dialog>
</div>
dialog {
border: 1px solid;
border-radius: 5px;
box-shadow: 3px 3px 10px rgb(0 0 0 / 0.2);
background-color: white;
font-family: segue, arial, helvetica, sans-serif;
margin-top: 5vh;
width: 550px;
}
table {
width: 100%;
}
td,
th {
padding: 3px 0;
}
th {
background-color: #ededed;
}
td {
background-color: #dedede;
font-family: monospace;
}
body {
background:
linear-gradient(
-90deg,
transparent 0 38%,
47%,
rgb(0 0 0 / 0.7) 50%,
white 50% 100%
),
conic-gradient(
black 0 90deg,
transparent 90deg 180deg,
black 180deg 270deg,
transparent 270deg 360deg
);
background-size:
100% 100%,
20px 20px;
padding: 0;
margin: 0;
}
.container {
width: 100vw;
height: 100vh;
}
.color-inputs {
display: inline-flex;
margin-top: 0.6rem;
margin-bottom: 1.5rem;
}
button {
margin-right: 0.5rem;
}
input[type="text"] {
width: 300px;
margin-right: 0.5rem;
}
input[type="range"] {
width: 350px;
}
label {
user-select: none;
}
p {
display: flex;
flex-flow: column;
align-items: center;
margin: 0;
}
const background = document.querySelector("body div");
const colorText = document.getElementById("color-text");
const colorPicker = document.getElementById("color-input");
const opacityPicker = document.getElementById("opacity-input");
const hexOutput = document.querySelector("#hex td > span");
const rgbFunctionOutput = document.querySelector("#rgb-function td > span");
const colorFunctionOutput = document.querySelector("#color-function td > span");
const hslFunctionOutput = document.querySelector("#hsl-function td > span");
const hwbFunctionOutput = document.querySelector("#hwb-function td > span");
const labFunctionOutput = document.querySelector("#lab-function td > span");
const okLabFunctionOutput = document.querySelector("#oklab-function td > span");
const lchFunctionOutput = document.querySelector("#lch-function td > span");
const okLchFunctionOutput = document.querySelector("#oklch-function td > span");
const xyzD50FunctionOutput = document.querySelector(
"#xyz-d50-function td > span",
);
const xyzD65FunctionOutput = document.querySelector(
"#xyz-d65-function td > span",
);
const LRGB_LMS_MATRIX = [
[0.4122214708, 0.5363325363, 0.0514459929],
[0.2119034982, 0.6806995451, 0.1073969566],
[0.0883024619, 0.2817188376, 0.6299787005],
];
const LMS_LAB_MATRIX = [
[+0.2104542553, +0.793617785, -0.0040720468],
[+1.9779984951, -2.428592205, +0.4505937099],
[+0.0259040371, +0.7827717662, -0.808675766],
];
// srgb-linear to xyz-d50
// matrix taken from http://www.brucelindbloom.com/index.html?Eqn_RGB_to_XYZ.html
const LRGB_XYZ_D50_MATRIX = [
[0.4360747, 0.3850649, 0.1430804],
[0.2225045, 0.7168786, 0.0606169],
[0.0139322, 0.0971045, 0.7141733],
];
// srgb-linear to xyz-d65
// matrix taken from http://www.brucelindbloom.com/index.html?Eqn_RGB_to_XYZ.html
const LRGB_XYZ_D65_MATRIX = [
[0.4124564, 0.3575761, 0.1804375],
[0.2126729, 0.7151522, 0.072175],
[0.0193339, 0.119192, 0.9503041],
];
const currentColor = { r: 186, g: 218, b: 85, alpha: 1.0 }; // #bada55
function multiplyByMatrix(matrix, tuple) {
let i = [0, 0, 0];
let j = matrix.length;
let k = matrix[0].length;
for (let l = 0; l < j; l++)
for (let m = 0; m < k; m++) i[l] += matrix[l][m] * tuple[m];
return i;
}
function rgbToLinear(c) {
return c <= 0.04045 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
}
function intToHex(i) {
return Math.floor(i).toString(16).padStart(2, "0").toLowerCase();
}
function rgbToHEXText(c) {
return `#${intToHex(c.r)}${intToHex(c.g)}${intToHex(c.b)}`;
}
function rgbaToHEXAText(color) {
const hexText = rgbToHEXText(color);
if (color.alpha === 1.0) {
return hexText;
}
const alpha = intToHex(color.alpha * 255);
return `${hexText}${alpha}`;
}
function rgbaToHSLA(color) {
let { r, g, b, alpha } = color;
// Let's have r, g, b in the range [0, 1]
r = r / 255;
g = g / 255;
b = b / 255;
const min = Math.min(r, g, b);
const max = Math.max(r, g, b);
const delta = max - min;
let h, s, l;
if (delta === 0) {
h = 0;
} else if (max === r) {
h = ((g - b) / delta) % 6;
} else if (max === g) {
h = (b - r) / delta + 2;
} else h = (r - g) / delta + 4;
h = Math.round(h * 60);
// We want an angle between 0 and 360Â°
if (h < 0) {
h += 360;
}
l = (max + min) / 2;
s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));
s = Number((s * 100).toFixed(1));
l = Number((l * 100).toFixed(1));
return { h, s, l, alpha };
}
function toHSLAText(color) {
const { h, s, l, alpha } = rgbaToHSLA(color);
return `hsl(${h.toFixed(0)} ${s.toFixed(0)}% ${l.toFixed(0)}%${
alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""
})`;
}
function rgbaToHWBAText(color) {
let { h, s, l, alpha } = rgbaToHSLA(color);
const chroma = s * (1 - Math.abs(l / 50 - 1));
let W = (l - chroma / 2).toFixed(0);
let B = (100 - l - chroma / 2).toFixed(0);
return `hwb(${h} ${W}% ${B}%${alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""})`;
}
function rgbaToXYZD50(color) {
let { r, g, b, alpha } = color;
r = rgbToLinear(r / 255) * 255;
g = rgbToLinear(g / 255) * 255;
b = rgbToLinear(b / 255) * 255;
const xyz = multiplyByMatrix(LRGB_XYZ_D50_MATRIX, [r, g, b]);
return { x: xyz[0] / 255, y: xyz[1] / 255, z: xyz[2] / 255, alpha };
}
function rgbaToXYZD50Text(color) {
let { alpha } = color;
const xyz = rgbaToXYZD50(color);
return `color(xyz-d50 ${xyz.x.toFixed(5)} ${xyz.y.toFixed(5)} ${xyz.z.toFixed(
5,
)}${alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""})`;
}
function rgbaToXYZD65(color) {
let { r, g, b, alpha } = color;
r = rgbToLinear(r / 255) * 255;
g = rgbToLinear(g / 255) * 255;
b = rgbToLinear(b / 255) * 255;
const xyz = multiplyByMatrix(LRGB_XYZ_D65_MATRIX, [r, g, b]);
return { x: xyz[0] / 255, y: xyz[1] / 255, z: xyz[2] / 255, alpha };
}
function rgbaToXYZD65Text(color) {
let { alpha } = color;
const xyz = rgbaToXYZD65(color);
return `color(xyz-d65 ${xyz.x.toFixed(5)} ${xyz.y.toFixed(5)} ${xyz.z.toFixed(
5,
)}${alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""})`;
}
const D65 = [0.3457 / 0.3585, 1, 0.2958 / 0.3585];
function xyzToLab(color) {
let { x, y, z, alpha } = color;
[x, y, z] = [x, y, z].map((v, i) => {
v = v / D65[i];
return v > 0.0088564516 ? Math.cbrt(v) : v * 903.2962962962963 + 16 / 116;
});
return { l: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z), alpha };
}
function rgbaToLabText(color) {
let { alpha } = color;
const xyz = rgbaToXYZD50(color);
const lab = xyzToLab(xyz);
return `lab(${lab.l.toFixed(3)} ${lab.a.toFixed(3)} ${lab.b.toFixed(3)}${
alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""
})`;
}
function rgbToOklab(color) {
let { r, g, b, alpha } = color;
r = rgbToLinear(r / 255);
g = rgbToLinear(g / 255);
b = rgbToLinear(b / 255);
const lms = multiplyByMatrix(LRGB_LMS_MATRIX, [r, g, b]).map((v) =>
Math.cbrt(v),
);
const oklab = multiplyByMatrix(LMS_LAB_MATRIX, lms);
return { l: oklab[0], a: oklab[1], b: oklab[2], alpha };
}
function toOkLabText(color) {
let { alpha } = color;
const oklab = rgbToOklab(color);
return `oklab(${oklab.l.toFixed(5)} ${oklab.a.toFixed(5)} ${oklab.b.toFixed(
5,
)}${alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""})`;
}
function labToLCH(color) {
const { l, a, b, alpha } = color;
const c = Math.sqrt(a * a + b * b);
let h = Math.atan2(b, a) * (180 / Math.PI);
if (h < 0) {
h += 360;
}
return { l, c, h, alpha };
}
function toLCHText(color) {
let { alpha } = color;
const xyz = rgbaToXYZD50(color);
const lab = xyzToLab(xyz);
const lch = labToLCH(lab);
return `lch(${lch.l.toFixed(3)} ${lch.c.toFixed(3)} ${lch.h.toFixed(3)}${
alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""
})`;
}
function rgbaToOkLCh(color) {
const lab = rgbToOklab(color);
const oklch = labToLCH(lab);
return { l: oklch.l, c: oklch.c, h: oklch.h, alpha: color.alpha };
}
function toOkLChText(color) {
let { alpha } = color;
const oklch = rgbaToOkLCh(color);
return `oklch(${oklch.l.toFixed(5)} ${oklch.c.toFixed(5)} ${oklch.h.toFixed(
5,
)}${alpha < 1.0 ? ` / ${alpha.toFixed(3)}` : ""})`;
}
function colorToRGBA(c) {
const ctx = new OffscreenCanvas(1, 1).getContext("2d");
ctx.fillStyle = c;
ctx.fillRect(0, 0, 1, 1);
const data = ctx.getImageData(0, 0, 1, 1).data;
return {
r: data[0],
g: data[1],
b: data[2],
alpha: data[3] / 255,
};
}
function updateOutput(c) {
background.style.backgroundColor = rgbaToHEXAText(c);
hexOutput.innerText = rgbaToHEXAText(c);
rgbFunctionOutput.innerText = `rgb(${c.r} ${c.g} ${c.b}${c.alpha < 1 ? ` / ${c.alpha.toFixed(3)}` : ""})`;
colorFunctionOutput.innerText = `color(srgb ${(c.r / 255).toFixed(3)} ${(c.g / 255).toFixed(3)} ${(c.b / 255).toFixed(3)}${c.alpha < 1 ? ` / ${c.alpha.toFixed(3)}` : ""})`;
hslFunctionOutput.innerText = toHSLAText(c);
hwbFunctionOutput.innerText = rgbaToHWBAText(c);
labFunctionOutput.innerText = rgbaToLabText(c);
xyzD50FunctionOutput.innerText = rgbaToXYZD50Text(c);
xyzD65FunctionOutput.innerText = rgbaToXYZD65Text(c);
lchFunctionOutput.innerText = toLCHText(c);
okLabFunctionOutput.innerText = toOkLabText(c);
okLchFunctionOutput.innerText = toOkLChText(c);
}
function init() {
colorText.addEventListener("input", (e) => {
const color = colorToRGBA(e.target.value);
Object.assign(currentColor, color);
colorPicker.value = rgbToHEXText(currentColor);
opacityPicker.value = currentColor.alpha;
updateOutput(currentColor);
});
colorPicker.addEventListener("input", (e) => {
const text = e.target.value;
currentColor.r = parseInt(text.slice(1, 3), 16);
currentColor.g = parseInt(text.slice(3, 5), 16);
currentColor.b = parseInt(text.slice(5, 7), 16);
colorText.value = rgbaToHEXAText(currentColor);
opacityPicker.value = currentColor.alpha;
updateOutput(currentColor);
});
opacityPicker.addEventListener("input", (e) => {
const value = parseFloat(e.target.value);
currentColor.alpha = value;
colorText.value = rgbaToHEXAText(currentColor);
updateOutput(currentColor);
});
document.querySelectorAll("#output-colors button").forEach((button) => {
button.addEventListener("click", (e) => {
const text = e.target.nextElementSibling.innerText;
navigator.clipboard.writeText(text);
e.target.innerText = "Copied!";
setTimeout(() => {
e.target.innerText = "Copy";
}, 1000);
});
});
colorText.value = rgbaToHEXAText(currentColor);
colorPicker.value = rgbToHEXText(currentColor);
opacityPicker.value = currentColor.alpha;
updateOutput(currentColor);
}
init();
See also
Applying color with CSS properties
CSS color values
Using color wisely
Using relative colors
Understanding color and luminance
WCAG 1.4.1: Color contrast
Learn: Styling backgrounds and borders using CSS
Learn accessibility: Color and color contrast
Help improve MDN
Learn how to contribute
This page was last modified on â¨Sep 21, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
CSSBeginner's tutorialsYour first website: Styling the contentCSS styling basicsWhat is CSS?CSS getting startedChallenge: Biography pageBasic selectorsAttribute selectorsPseudo-classes and elementsCombinatorsTest: SelectorsBox modelTest: Box modelHandling conflictsTest: CascadeChallenge: Fixing blog stylesValues and unitsTest: Values and unitsSizingTest: SizingBackgrounds and bordersTest: Backgrounds and bordersChallenge: Sizing and decoratingOverflowTest: OverflowImages, media, formsTest: Images and formsStyling tablesDebugging CSSCSS text stylingText and font fundamentalsStyling listsStyling linksWeb fontsChallenge: Community school homepageCSS layoutIntroductionFloatsTest: FloatsPositioningTest: PositioningFlexboxTest: FlexboxCSS grid layoutTest: CSS gridResponsive web designMedia queriesTest: RWD & media queriesChallenge: Fundamental layoutCSS referenceModulesCSS anchor positioningCSS animationsCSS backgrounds and bordersCSS basic user interfaceCSS borders and box decorationsCSS box alignmentCSS box modelCSS box sizingCSS cascading and inheritanceCSS color adjustmentCSS colorsCSS compositing and blendingCSS conditional rulesCSS containmentCSS counter stylesCSS custom highlight APICSS custom properties for cascading variablesCSS displayCSS easing functionsCSS environment variablesCSS filter effectsCSS flexible box layoutCSS font loadingCSS fontsCSS fragmentationCSS generated contentCSS grid layoutCSS imagesCSS inline layoutCSS lists and countersCSS logical properties and valuesCSS maskingCSS media queriesCSS motion pathCSS multi-column layoutCSS namespacesCSS nestingCSS overflowCSS overscroll behaviorCSS paged mediaCSS positioned layoutCSS properties and values APICSS pseudo-elementsCSS round displayCSS ruby layoutCSS scopingCSS scroll anchoringCSS scroll snapCSS scroll-driven animationsCSS scrollbars stylingCSS selectorsCSS shadow partsCSS shapesCSS syntaxCSS tableCSS textCSS text decorationCSS transformsCSS transitionsCSS values and unitsCSS view transitionsCSS viewportCSS writing modesCSSOM viewProperties-moz-*-moz-float-edge
Non-standard
Deprecated
-moz-force-broken-image-icon
Non-standard
Deprecated
-moz-orient
Non-standard
-moz-user-focus
Non-standard
Deprecated
-moz-user-input
Non-standard
Deprecated
-webkit-*-webkit-border-before
Non-standard
-webkit-box-reflect
Non-standard
-webkit-mask-box-image
Non-standard
-webkit-mask-composite
Non-standard
-webkit-mask-position-x
Non-standard
-webkit-mask-position-y
Non-standard
-webkit-mask-repeat-x
Non-standard
-webkit-mask-repeat-y
Non-standard
-webkit-tap-highlight-color
Non-standard
-webkit-text-fill-color-webkit-text-security
Non-standard
-webkit-text-stroke-webkit-text-stroke-color-webkit-text-stroke-width-webkit-touch-callout
Non-standard
Custom properties (--*): CSS variablesaccent-coloralign-*align-contentalign-itemsalign-selfalignment-baselineallanchor-nameanimation-*animationanimation-compositionanimation-delayanimation-directionanimation-durationanimation-fill-modeanimation-iteration-countanimation-nameanimation-play-stateanimation-rangeanimation-range-endanimation-range-startanimation-timelineanimation-timing-functionappearanceaspect-ratiobackdrop-filterbackface-visibilitybackground-*backgroundbackground-attachmentbackground-blend-modebackground-clipbackground-colorbackground-imagebackground-originbackground-positionbackground-position-xbackground-position-ybackground-repeatbackground-sizeblock-sizeborder-*borderborder-blockborder-block-colorborder-block-endborder-block-end-colorborder-block-end-styleborder-block-end-widthborder-block-startborder-block-start-colorborder-block-start-styleborder-block-start-widthborder-block-styleborder-block-widthborder-bottomborder-bottom-colorborder-bottom-left-radiusborder-bottom-right-radiusborder-bottom-styleborder-bottom-widthborder-collapseborder-colorborder-end-end-radiusborder-end-start-radiusborder-imageborder-image-outsetborder-image-repeatborder-image-sliceborder-image-sourceborder-image-widthborder-inlineborder-inline-colorborder-inline-endborder-inline-end-colorborder-inline-end-styleborder-inline-end-widthborder-inline-startborder-inline-start-colorborder-inline-start-styleborder-inline-start-widthborder-inline-styleborder-inline-widthborder-leftborder-left-colorborder-left-styleborder-left-widthborder-radiusborder-rightborder-right-colorborder-right-styleborder-right-widthborder-spacingborder-start-end-radiusborder-start-start-radiusborder-styleborder-topborder-top-colorborder-top-left-radiusborder-top-right-radiusborder-top-styleborder-top-widthborder-widthbottombox-*box-align
Non-standard
Deprecated
box-decoration-breakbox-direction
Non-standard
Deprecated
box-flex
Non-standard
Deprecated
box-flex-group
Non-standard
Deprecated
box-lines
Non-standard
Deprecated
box-ordinal-group
Non-standard
Deprecated
box-orient
Non-standard
Deprecated
box-pack
Non-standard
Deprecated
box-shadowbox-sizingbreak-*break-afterbreak-beforebreak-insidecaption-sidecaret-*caret
Experimental
caret-animation
Experimental
caret-colorcaret-shape
Experimental
clearclip-*clip
Deprecated
clip-pathclip-rulecolor-*colorcolor-interpolationcolor-interpolation-filterscolor-schemecolumn-*column-countcolumn-fillcolumn-gapcolumn-rulecolumn-rule-colorcolumn-rule-stylecolumn-rule-widthcolumn-spancolumn-widthcolumnscontain-*containcontain-intrinsic-block-sizecontain-intrinsic-heightcontain-intrinsic-inline-sizecontain-intrinsic-sizecontain-intrinsic-widthcontainer-*containercontainer-namecontainer-typecontentcontent-visibilitycorner-*corner-block-end-shape
Experimental
corner-block-start-shape
Experimental
corner-bottom-left-shape
Experimental
corner-bottom-right-shape
Experimental
corner-bottom-shape
Experimental
corner-end-end-shape
Experimental
corner-end-start-shape
Experimental
corner-inline-end-shape
Experimental
corner-inline-start-shape
Experimental
corner-left-shape
Experimental
corner-right-shape
Experimental
corner-shape
Experimental
corner-start-end-shape
Experimental
corner-start-start-shape
Experimental
corner-top-left-shape
Experimental
corner-top-right-shape
Experimental
corner-top-shape
Experimental
counter-*counter-incrementcounter-resetcounter-setcursorcxcyddirectiondisplaydominant-baselineempty-cellsfield-sizing
Experimental
fill-*fillfill-opacityfill-rulefilterflex-*flexflex-basisflex-directionflex-flowflex-growflex-shrinkflex-wrapfloatflood-colorflood-opacityfont-*fontfont-familyfont-feature-settingsfont-kerningfont-language-overridefont-optical-sizingfont-palettefont-sizefont-size-adjustfont-smooth
Non-standard
font-stretch
Deprecated
font-stylefont-synthesisfont-synthesis-position
Experimental
font-synthesis-small-capsfont-synthesis-stylefont-synthesis-weightfont-variantfont-variant-alternatesfont-variant-capsfont-variant-east-asianfont-variant-emojifont-variant-ligaturesfont-variant-numericfont-variant-positionfont-variation-settingsfont-weightforced-color-adjustgapgrid-*gridgrid-areagrid-auto-columnsgrid-auto-flowgrid-auto-rowsgrid-columngrid-column-endgrid-column-startgrid-rowgrid-row-endgrid-row-startgrid-templategrid-template-areasgrid-template-columnsgrid-template-rowshanging-punctuationheighthyphenate-characterhyphenate-limit-charshyphensimage-*image-orientationimage-renderingimage-resolution
Experimental
initial-letterinline-sizeinset-*insetinset-blockinset-block-endinset-block-startinset-inlineinset-inline-endinset-inline-startinterpolate-size
Experimental
isolationjustify-*justify-contentjustify-itemsjustify-selfleftletter-spacinglighting-colorline-*line-breakline-clampline-heightline-height-step
Experimental
list-*list-stylelist-style-imagelist-style-positionlist-style-typemargin-*marginmargin-blockmargin-block-endmargin-block-startmargin-bottommargin-inlinemargin-inline-endmargin-inline-startmargin-leftmargin-rightmargin-topmargin-trim
Experimental
marker-*markermarker-endmarker-midmarker-startmask-*maskmask-bordermask-border-modemask-border-outsetmask-border-repeatmask-border-slicemask-border-sourcemask-border-widthmask-clipmask-compositemask-imagemask-modemask-originmask-positionmask-repeatmask-sizemask-typemath-*math-depthmath-shift
Experimental
math-stylemax-*max-block-sizemax-heightmax-inline-sizemax-widthmin-*min-block-sizemin-heightmin-inline-sizemin-widthmix-blend-modeobject-fitobject-positionoffset-*offsetoffset-anchoroffset-distanceoffset-pathoffset-positionoffset-rotateopacityorderorphansoutline-*outlineoutline-coloroutline-offsetoutline-styleoutline-widthoverflow-*overflowoverflow-anchoroverflow-blockoverflow-clip-marginoverflow-inlineoverflow-wrapoverflow-xoverflow-yoverlay
Experimental
overscroll-*overscroll-behavioroverscroll-behavior-blockoverscroll-behavior-inlineoverscroll-behavior-xoverscroll-behavior-ypadding-*paddingpadding-blockpadding-block-endpadding-block-startpadding-bottompadding-inlinepadding-inline-endpadding-inline-startpadding-leftpadding-rightpadding-toppage-*pagepage-break-after
Deprecated
page-break-before
Deprecated
page-break-inside
Deprecated
paint-orderperspectiveperspective-originplace-*place-contentplace-itemsplace-selfpointer-eventsposition-*positionposition-anchorposition-areaposition-tryposition-try-fallbacksposition-try-orderposition-visibility
Experimental
print-color-adjustquotesrreading-flow
Experimental
reading-order
Experimental
resizerightrotaterow-gapruby-*ruby-alignruby-overhangruby-positionrxryscalescroll-*scroll-behaviorscroll-marginscroll-margin-blockscroll-margin-block-endscroll-margin-block-startscroll-margin-bottomscroll-margin-inlinescroll-margin-inline-endscroll-margin-inline-startscroll-margin-leftscroll-margin-rightscroll-margin-topscroll-marker-group
Experimental
scroll-paddingscroll-padding-blockscroll-padding-block-endscroll-padding-block-startscroll-padding-bottomscroll-padding-inlinescroll-padding-inline-endscroll-padding-inline-startscroll-padding-leftscroll-padding-rightscroll-padding-topscroll-snap-alignscroll-snap-stopscroll-snap-typescroll-target-group
Experimental
scroll-timelinescroll-timeline-axisscroll-timeline-namescrollbar-*scrollbar-colorscrollbar-gutterscrollbar-widthshape-*shape-image-thresholdshape-marginshape-outsideshape-renderingspeak-as
Experimental
stop-colorstop-opacitystroke-*strokestroke-dasharraystroke-dashoffsetstroke-linecapstroke-linejoinstroke-miterlimitstroke-opacitystroke-widthtab-sizetable-layouttext-*text-aligntext-align-lasttext-anchortext-autospacetext-boxtext-box-edgetext-box-trimtext-combine-uprighttext-decorationtext-decoration-colortext-decoration-linetext-decoration-skip
Experimental
text-decoration-skip-inktext-decoration-styletext-decoration-thicknesstext-emphasistext-emphasis-colortext-emphasis-positiontext-emphasis-styletext-indenttext-justifytext-orientationtext-overflowtext-renderingtext-shadowtext-size-adjust
Experimental
text-spacing-trim
Experimental
text-transformtext-underline-offsettext-underline-positiontext-wraptext-wrap-modetext-wrap-styletimeline-scopetoptouch-actiontransform-*transformtransform-boxtransform-origintransform-styletransition-*transitiontransition-behaviortransition-delaytransition-durationtransition-propertytransition-timing-functiontranslateunicode-bidiuser-modify
Non-standard
Deprecated
user-selectvector-effectvertical-alignview-*view-timelineview-timeline-axisview-timeline-insetview-timeline-nameview-transition-classview-transition-namevisibilitywhite-spacewhite-space-collapsewidowswidthwill-changeword-breakword-spacingwriting-modexyz-indexzoomSelectors& nesting selectorAttribute selectorsClass selectorsID selectorsType selectorsUniversal selectorsCombinatorsChild combinatorColumn combinator
Experimental
Descendant combinatorNamespace separatorNext-sibling combinatorSelector listSubsequent-sibling combinatorPseudo-classes:-moz-*:-moz-broken
Non-standard
Deprecated
:-moz-drag-over
Non-standard
:-moz-first-node
Experimental
Non-standard
:-moz-handler-blocked
Non-standard
:-moz-handler-crashed
Non-standard
:-moz-handler-disabled
Non-standard
:-moz-last-node
Experimental
Non-standard
:-moz-loading
Non-standard
:-moz-locale-dir(ltr)
Non-standard
:-moz-locale-dir(rtl)
Non-standard
:-moz-only-whitespace
Non-standard
:-moz-submit-invalid
Non-standard
:-moz-suppressed
Non-standard
:-moz-user-disabled
Non-standard
:-moz-window-inactive
Non-standard
:active:active-view-transition:any-link:autofill:blank
Experimental
:buffering:checked:current
Experimental
:default:defined:dir():disabled:empty:enabled:first-*:first:first-child:first-of-type:focus-*:focus:focus-visible:focus-within:fullscreen:future:has-slotted:has():heading
Experimental
:heading()
Experimental
:host:host-context()
Deprecated
:host():hover:in-range:indeterminate:invalid:is():lang():last-child:last-of-type:left:link:local-link
Experimental
:modal:muted:not():nth-*:nth-child():nth-last-child():nth-last-of-type():nth-of-type():only-child:only-of-type:open:optional:out-of-range:past:paused:picture-in-picture:placeholder-shown:playing:popover-open:read-only:read-write:required:right:root:scope:seeking:stalled:state():target:target-current
Experimental
:user-invalid:user-valid:valid:visited:volume-locked:where()Pseudo-elements::-moz-*::-moz-color-swatch
Non-standard
::-moz-focus-inner
Non-standard
Deprecated
::-moz-list-bullet
Experimental
Non-standard
::-moz-list-number
Experimental
Non-standard
::-moz-meter-bar
Non-standard
::-moz-progress-bar
Experimental
Non-standard
::-moz-range-progress
Non-standard
::-moz-range-thumb
Non-standard
::-moz-range-track
Non-standard
::-webkit-*::-webkit-inner-spin-button
Non-standard
::-webkit-meter-bar
Non-standard
Deprecated
::-webkit-meter-even-less-good-value
Non-standard
::-webkit-meter-inner-element
Non-standard
::-webkit-meter-optimum-value
Non-standard
::-webkit-meter-suboptimum-value
Non-standard
::-webkit-progress-bar
Non-standard
::-webkit-progress-inner-element
Non-standard
::-webkit-progress-value
Non-standard
::-webkit-scrollbar
Non-standard
::-webkit-search-cancel-button
Non-standard
::-webkit-search-results-button
Non-standard
::-webkit-slider-runnable-track
Non-standard
::-webkit-slider-thumb
Non-standard
::after::backdrop::before::checkmark
Experimental
::column
Experimental
::cue::details-content::file-selector-button::first-letter::first-line::grammar-error::highlight()::marker::part()::picker-icon
Experimental
::picker()
Experimental
::placeholder::scroll-*::scroll-button()
Experimental
::scroll-marker
Experimental
::scroll-marker-group
Experimental
::selection::slotted()::spelling-error::target-text::view-*::view-transition::view-transition-group()::view-transition-image-pair()::view-transition-new()::view-transition-old()At-rules@charset@color-profile@container@counter-style@document
Non-standard
Deprecated
@font-face@font-feature-values@font-palette-values@import@keyframes@layer@media@namespace@page@position-try
Experimental
@property@scope@starting-style@supports@view-transitionFunctions-moz-image-rect
Non-standard
Deprecated
abs()acos()anchor-size()anchor()asin()atan()atan2()attr()blur()brightness()calc-size()
Experimental
calc()circle()clamp()color-mix()color()conic-gradient()contrast-color()
Experimental
contrast()cos()counter()counters()cross-fade()cubic-bezier()device-cmyk()drop-shadow()element()
Experimental
ellipse()env()exp()fit-content()grayscale()hsl()hue-rotate()hwb()hypot()if()
Experimental
image-set()image()inset()invert()lab()layer()lch()light-dark()linear-gradient()linear()log()matrix()matrix3d()max()min()minmax()mod()oklab()oklch()opacity()paint()palette-mix()
Experimental
path()perspective()polygon()pow()radial-gradient()ray()rect()rem()repeat()repeating-conic-gradient()repeating-linear-gradient()repeating-radial-gradient()rgb()rotate()rotate3d()rotateX()rotateY()rotateZ()round()saturate()scale()scale3d()scaleX()scaleY()scaleZ()scroll()sepia()shape()sibling-count()
Experimental
sibling-index()
Experimental
sign()sin()skew()skewX()skewY()sqrt()steps()superellipse()
Experimental
symbols()tan()translate()translate3d()translateX()translateY()translateZ()url()var()view()xywh()Types<absolute-size><alpha-value><angle-percentage><angle><baseline-position><basic-shape><blend-mode><box-edge><calc-keyword><calc-sum><color-interpolation-method><color><content-distribution><content-position><corner-shape-value>
Experimental
<custom-ident><dashed-ident><dimension><display-box><display-inside><display-internal><display-legacy><display-listitem><display-outside><easing-function><filter-function><flex><frequency-percentage><frequency><generic-family><gradient><hex-color><hue-interpolation-method><hue><ident><image><integer><length-percentage><length><line-style><named-color><number><overflow-position><overflow><percentage><position-area><position><ratio><relative-size><resolution><self-position><shape>
Deprecated
<string><system-color><text-edge><time-percentage><time><transform-function><url>GuidesAnchor positioningUsing anchor positioningHandling overflowAnimationsAnimatable propertiesUsing animationsBackgrounds and bordersUsing multiple backgroundsResizing background imagesScaling SVG backgroundsBox alignmentOverviewBox alignment in block layoutBox alignment in flexboxBox alignment in grid layoutBox alignment in multi-column layoutBox modelIntroductionMastering margin collapsingCascadeIntroductionInheritanceSpecificityProperty value processingShorthand propertiesCustom propertiesUsing custom propertiesColorsApplying color to HTMLColor valuesUsing relative colorsUsing color wiselyAccessibility: Colors and luminanceAccessibility: Color contrastColumnsBasic conceptsStyling columnsUsing multi-column layoutsSpanning and balancing columnsHandling overflowHandling content breaksConditional rulesUsing feature queriesUsing container scroll-state queriesContainmentContainer queriesUsing containmentUsing container size and style queriesCSSOM viewCoordinate systemsViewport conceptsDisplayBlock and inline layoutFlow layoutFlow layout and overflowFlow layout and writing modesIn flow and out of flowLayout and the containing blockFormatting contextsBlock formatting contextInline formatting contextUsing multi-keyword syntaxVisual formatting modelFilter effectsUsing filter effectsFlexboxBasic conceptsFlexbox and other layoutsAligning flex itemsOrdering flex itemsControlling flex item ratiosWrapping flex itemsTypical use casesFontsOpenType featuresVariable fontsWOFFGridBasic conceptsGrid and other layoutsGrid template areasUsing line-based placementUsing named grid linesAuto-placementAligning itemsLogical values and writing modesCommon grid layoutsSubgridGrid layout and accessibilityMasonry layout
Experimental
ImagesUsing gradientsStyling replaced elementsImplementing image spritesLists and countersUsing countersIndenting listsLogical propertiesBasic conceptsLogical properties for floating and positioningLogical properties for margins, borders, and paddingLogical properties for sizingMedia queriesUsing media queriesUsing media queries for accessibilityTesting media queries programmaticallyPrintingNesting style rulesNesting at-rulesNesting and specificityUsing nestingOverflowCreating carouselsPositioningStacking contextStacking floating elementsUnderstanding z-indexUsing z-indexStacking without z-indexScroll anchoringOverviewScroll snapBasic conceptsUsing scroll snap eventsSelectorsPrivacy and :visitedSelector structureSelectors and combinatorsUsing :targetShapesOverviewBox-value shapesImage-based shapesUsing shape-outsideSyntaxIntroductionCommentsAt-rule functionsError handlingTextWrapping and breaking textHandling whitespaceText decorationText shadowsTransformsUsing transformsTransitionsUsing transitionsValues and unitsValue definition syntaxNumeric data typesTextual data typesUsing math functionsLayout cookbookRecipe: Media objectsColumn layoutsCenter an elementSticky footersSplit navigationBreadcrumb navigationList group with badgesPaginationCardGrid wrapperToolsBorder-image generatorBorder-radius generatorBox-shadow generatorColor format converterColor mixerShape generator
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.