Learn web development | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Border-image generator
Border-radius generator
Box-shadow generator
Color mixer
Color picker
Shape generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Learn
Learn web development
The essential skill set for new front-end developers
Welcome to MDN Learning Web Development (also known as Learn). This resource provides a structured set of tutorials teaching the essential skills and practices for being a successful front-end developer, along with challenges and further recommended resources.
In this article
The essential skill set for new front-end developersAbout Learn web developmentDon't know where to get started?Test your skillsGetting our code examplesContact usSee also
About Learn web development
Teaches the essential skills and knowledge every front-end developer needs for career success and industry relevance, as defined in the MDN Curriculum.
Created by the MDN community and refined with insights from students, educators, and developers from the broader web community.
Designed to take you from "beginner" to "comfortable" (not "beginner" to "expert"), giving you enough knowledge to use more advanced resources (such as the rest of MDN).
Note:
Last updated: August 2025 (see changelog).
Don't know where to get started?
Never coded before?
Our Getting started modules provide setup tutorials and essential concepts and background information for complete beginners. You should start here if you are a complete beginner (i.e., you've not installed a code editor or written any code yet).
Want to master the essentials?
Our Core modules provide a structured set of tutorials teaching the essential skills and practices for being a successful front-end developer.
Beyond the basics?
Our Extension modules cover useful additional skills to learn as you start to expand your knowledge and develop specialisms. Go onto these after you finish our Core.
Working at a school?
Use our modules to guide your teaching, check out our Educators page for more ideas, or enroll your students in Scrimba's Frontend Developer Career PathMDN learning partner.
Test your skills
Throughout the course, you'll find several articles designed to help you assess whether you have understood what we are teaching you in the course. There are two types:
"Test your skills" articles occur more frequently, and test your knowledge of a single isolated feature such as HTML links, the CSS box model, or JavaScript functions.
"Challenges" occur less frequently, and test your ability to use several features together to create a complete website or program of some kind.
Most of the questions feature HTML/CSS/JavaScript code blocks that show the starting code for each task. The recommended way to complete each one is to press the "Play" button in one of the code blocks to open the example in the MDN Playground and then edit the code according to the question instructions.
If you make a mistake, you can clear your work using the Reset button in the MDN Playground. If you get really stuck, you can (usually) view the solution at the bottom of each question section, or reach out for help.
Note:
If you'd prefer to work in your own editor or in an online editor (such as CodePen or JSFiddle), you can copy the code from the MDN Playground into your chosen environment.
Some questions don't include code blocks to start from, and instead ask you to download starter files to work on your local machine with. Sometimes this is due to the complex nature of the question, and sometimes we just wanted to change things up a bit.
Getting our code examples
The code examples you'll encounter in the Learning Area are all available on GitHub:
The easiest way to get them is to download a ZIP of the latest main code branch.
If you are familiar with Git and GitHub, you could also choose to clone the repository.
Contact us
If you want to get in touch with us about anything, use the communication channels. We'd love to hear from you about anything you think is wrong or missing on the site, requests for new learning topics, requests for help with items you don't understand, or any other questions or concerns.
If you're interested in helping develop/improve the content, take a look at how you can help and get in touch! We are more than happy to talk to you, whether you are a learner, teacher, experienced web developer, or someone else interested in helping to improve the learning experience.
See also
The Frontend Developer Career Path MDN learning partner
Scrimba's Frontend Developer Career Path teaches all you need to know to be a competent front-end web developer, with fun interactive lessons and challenges, knowledgeable teachers, and a supportive community. Go from zero to landing your first front-end job! Many of the course components are available as standalone free versions.
Codecademy
A great interactive site for learning programming languages from scratch.
freeCodeCamp.org
Interactive site with tutorials and projects to learn web development.
Learn JavaScript
An excellent resource for aspiring web developers â Learn JavaScript in an interactive environment, with short lessons and interactive tests, guided by automated assessment. The first 40 lessons are free, and the complete course is available for a small one-time payment.
Help improve MDN
Learn how to contribute
This page was last modified on â¨Aug 21, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
Getting started modulesEnvironment setupInstalling softwareBrowsing the webCode editorsDealing with filesCommand lineYour first websiteWhat will it look like?Creating the contentStyling the contentAdding interactivityPublishingWeb standardsHow the web worksThe web standards modelHow browsers load websitesSoft skillsResearch and learningCollaboration and teamworkWorkflows and processesFinding a jobCore modulesStructuring content with HTMLBasic HTML syntaxWeb page metadataHeadings and paragraphsEmphasis and importanceListsTest: HTML text basicsAdvanced text featuresTest: Advanced HTML textChallenge: Letter markupStructuring documentsCreating linksTest: LinksChallenge: Bird watching siteImagesTest: ImagesVideo and audioTest: Audio and videoChallenge: Splash pageTable basicsTable accessibilityChallenge: Planet data tableForms and buttonsTest: Forms and buttonsChallenge: Feedback formDebugging HTMLTest: HTML tests indexAdditional tutorialsVector graphicsEmbedding technologiesCSS styling basicsWhat is CSS?CSS getting startedChallenge: Biography pageBasic selectorsAttribute selectorsPseudo-classes and elementsCombinatorsTest: SelectorsBox modelTest: Box modelHandling conflictsTest: CascadeChallenge: Fixing blog stylesValues and unitsTest: Values and unitsSizingTest: SizingBackgrounds and bordersTest: Backgrounds and bordersChallenge: Sizing and decoratingOverflowTest: OverflowImages, media, formsTest: Images and formsStyling tablesDebugging CSSTest: Styling basics tests indexAdditional tutorialsAdvanced styling effectsCascade layersMultiple text directionsOrganizing your CSSCSS text stylingText and font fundamentalsStyling listsStyling linksWeb fontsChallenge: Community school homepageCSS layoutIntroductionFloatsTest: FloatsPositioningTest: PositioningFlexboxTest: FlexboxCSS grid layoutTest: CSS gridResponsive web designMedia queriesTest: RWD & media queriesChallenge: Fundamental layoutTest: Layout tests indexAdditional tutorialsMultiple-column layoutPractical positioning examplesLegacy layout methodsSupporting older browsersDynamic scripting with JavaScriptWhat is JavaScript?JavaScript walkthroughTroubleshootingVariablesTest: VariablesNumbers and operatorsTest: MathStringsString methodsTest: StringsArraysTest: ArraysChallenge: Story generatorConditionalsTest: ConditionalsLoopsTest: LoopsFunctionsBuild your own functionFunction return valuesTest: FunctionsEventsEvent bubblingTest: EventsChallenge: Image galleryObjectsTest: ObjectsDOM scriptingNetwork requestsJSONTest: JSONChallenge: House data UIDebugging and error handlingTest: JavaScript tests indexJavaScript frameworks and librariesIntroductionFramework featuresReact getting startedReact ToDo appReact componentsReact events and stateReact editing, filtering, conditional UIReact accessibilityReact resourcesAccessibilityWhat is accessibility?Accessibility toolsAccessible HTMLTest: HTML a11yAccessible CSS and JSTest: CSS/JS a11yWAI-ARIATest: WAI-ARIAAccessible multimediaMobile accessibilityChallenge: A11y debuggingTest: A11y tests indexDesign for developersVersion controlExtension modulesAdvanced JavaScript objectsObject prototypesObject-oriented programmingClasses in JavaScriptTest: Object-oriented JavaScriptObject building practiceChallenge: Bouncing balls featuresTest: OOJS tests indexClient-side web APIsIntroductionVideo and audioDrawing graphicsClient-side storageThird-party APIsAsynchronous JavaScriptIntroductionUsing promisesImplementing promise-based APIsIntroducing workersChallenge: Animation sequenceWeb formsYour first formHow to structure a web formBasic native form controlsThe HTML5 input typesOther form controlsStyling web formsAdvanced form stylingCustomizable selectsUI pseudo-classesClient-side form validationSending form dataUnderstanding client-side toolsOverviewPackage managementSample toolchainDeploying our appServer-side websitesFirst stepsIntroductionClient-server overviewServer-side frameworksWebsite securityDjango (Python)Django introductionDev environment setup1: Local library tutorial2: Skeleton website3: Models4: Django admin site5: Home page6: Generic list and detail views7: Sessions framework8: Authentication and permissions9: Forms10: Testing11: DeployingDjango securityChallenge: Django blogExpress (Node.js)Express/Node introductionDev environment setup1: Local library tutorial2: Skeleton website3: Using databases with Mongoose4: Routes and controllers5: Displaying data6: Working with forms7: DeployingWeb performanceThe "why" of web performanceWhat is web performance?Perceived performanceMeasuring performanceMultimedia: ImagesMultimedia: videoPerformant JavaScriptPerformant HTMLPerformant CSSPerformance business caseTestingIntroductionTesting strategiesCommon HTML and CSS problemsFeature detectionAutomated testingAutomation environment setupFurther resourcesHow to solve common problemsCommon CSS problemsCommon HTML problemsCommon JavaScript problemsDesign and accessibilityTools and setupWeb mechanicsAboutResources for educatorsChangelog
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.