Getting started modules - Learn web development | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Border-image generator
Border-radius generator
Box-shadow generator
Color mixer
Color picker
Shape generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Learn
Getting started modules
Getting started modules
Welcome to Getting started! If you are a complete beginner (i.e., you've not installed a code editor or written any code yet), then this is the place to be. The Getting started modules take you through installing the software you need, familiarity with your development environment, taking your first stab at building a simple website, and understanding some of the essential concepts surrounding web development.
In this article
PrerequisitesModulesSee also
Prerequisites
There is no prerequisite knowledge for starting this course. Also note that we don't consider learning these topics as required before moving on to the Core modules, but we believe students will have an easier time if they spend some time on these topics first.
Modules
Environment setup
In the Environment setup module, we show you what tools you need to do simple web development and how to install them properly and help you understand important aspects of your environment such as file systems and the command line.
Your first website
This module introduces you to the practicalities of web development. You'll gather the assets and write the code to construct and publish a simple webpage.
Web standards
This module covers the fundamentals of how the web works at a high level â including the model used for communication, the core technologies involved, how those technologies are created, and how a web browser renders and displays websites to a user.
Soft skills
This module provides recommendations of soft skills you can aim to get better at while learning web development, and which constitute good traits to have when entering the industry. They will help immensely in developing the right attitudes for learning, researching, and collaborating, and increase the chances of getting hired.
See also
The Frontend Developer Career Path MDN learning partner
Scrimba's Frontend Developer Career Path teaches all you need to know to be a competent front-end web developer, with fun interactive lessons and challenges, knowledgeable teachers, and a supportive community. Go from zero to landing your first front-end job! Many of the course components are available as standalone free versions.
Help improve MDN
Learn how to contribute
This page was last modified on â¨Apr 18, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
Getting started modulesEnvironment setupInstalling softwareBrowsing the webCode editorsDealing with filesCommand lineYour first websiteWhat will it look like?Creating the contentStyling the contentAdding interactivityPublishingWeb standardsHow the web worksThe web standards modelHow browsers load websitesSoft skillsResearch and learningCollaboration and teamworkWorkflows and processesFinding a jobCore modulesStructuring content with HTMLBasic HTML syntaxWeb page metadataHeadings and paragraphsEmphasis and importanceListsTest: HTML text basicsAdvanced text featuresTest: Advanced HTML textChallenge: Letter markupStructuring documentsCreating linksTest: LinksChallenge: Bird watching siteImagesTest: ImagesVideo and audioTest: Audio and videoChallenge: Splash pageTable basicsTable accessibilityChallenge: Planet data tableForms and buttonsTest: Forms and buttonsChallenge: Feedback formDebugging HTMLTest: HTML tests indexAdditional tutorialsVector graphicsEmbedding technologiesCSS styling basicsWhat is CSS?CSS getting startedChallenge: Biography pageBasic selectorsAttribute selectorsPseudo-classes and elementsCombinatorsTest: SelectorsBox modelTest: Box modelHandling conflictsTest: CascadeChallenge: Fixing blog stylesValues and unitsTest: Values and unitsSizingTest: SizingBackgrounds and bordersTest: Backgrounds and bordersChallenge: Sizing and decoratingOverflowTest: OverflowImages, media, formsTest: Images and formsStyling tablesDebugging CSSTest: Styling basics tests indexAdditional tutorialsAdvanced styling effectsCascade layersMultiple text directionsOrganizing your CSSCSS text stylingText and font fundamentalsStyling listsStyling linksWeb fontsChallenge: Community school homepageCSS layoutIntroductionFloatsTest: FloatsPositioningTest: PositioningFlexboxTest: FlexboxCSS grid layoutTest: CSS gridResponsive web designMedia queriesTest: RWD & media queriesChallenge: Fundamental layoutTest: Layout tests indexAdditional tutorialsMultiple-column layoutPractical positioning examplesLegacy layout methodsSupporting older browsersDynamic scripting with JavaScriptWhat is JavaScript?JavaScript walkthroughTroubleshootingVariablesTest: VariablesNumbers and operatorsTest: MathStringsString methodsTest: StringsArraysTest: ArraysChallenge: Story generatorConditionalsTest: ConditionalsLoopsTest: LoopsFunctionsBuild your own functionFunction return valuesTest: FunctionsEventsEvent bubblingTest: EventsChallenge: Image galleryObjectsTest: ObjectsDOM scriptingNetwork requestsJSONTest: JSONChallenge: House data UIDebugging and error handlingTest: JavaScript tests indexJavaScript frameworks and librariesIntroductionFramework featuresReact getting startedReact ToDo appReact componentsReact events and stateReact editing, filtering, conditional UIReact accessibilityReact resourcesAccessibilityWhat is accessibility?Accessibility toolsAccessible HTMLTest: HTML a11yAccessible CSS and JSTest: CSS/JS a11yWAI-ARIATest: WAI-ARIAAccessible multimediaMobile accessibilityChallenge: A11y debuggingTest: A11y tests indexDesign for developersVersion controlExtension modulesAdvanced JavaScript objectsObject prototypesObject-oriented programmingClasses in JavaScriptTest: Object-oriented JavaScriptObject building practiceChallenge: Bouncing balls featuresTest: OOJS tests indexClient-side web APIsIntroductionVideo and audioDrawing graphicsClient-side storageThird-party APIsAsynchronous JavaScriptIntroductionUsing promisesImplementing promise-based APIsIntroducing workersChallenge: Animation sequenceWeb formsYour first formHow to structure a web formBasic native form controlsThe HTML5 input typesOther form controlsStyling web formsAdvanced form stylingCustomizable selectsUI pseudo-classesClient-side form validationSending form dataUnderstanding client-side toolsOverviewPackage managementSample toolchainDeploying our appServer-side websitesFirst stepsIntroductionClient-server overviewServer-side frameworksWebsite securityDjango (Python)Django introductionDev environment setup1: Local library tutorial2: Skeleton website3: Models4: Django admin site5: Home page6: Generic list and detail views7: Sessions framework8: Authentication and permissions9: Forms10: Testing11: DeployingDjango securityChallenge: Django blogExpress (Node.js)Express/Node introductionDev environment setup1: Local library tutorial2: Skeleton website3: Using databases with Mongoose4: Routes and controllers5: Displaying data6: Working with forms7: DeployingWeb performanceThe "why" of web performanceWhat is web performance?Perceived performanceMeasuring performanceMultimedia: ImagesMultimedia: videoPerformant JavaScriptPerformant HTMLPerformant CSSPerformance business caseTestingIntroductionTesting strategiesCommon HTML and CSS problemsFeature detectionAutomated testingAutomation environment setupFurther resourcesHow to solve common problemsCommon CSS problemsCommon HTML problemsCommon JavaScript problemsDesign and accessibilityTools and setupWeb mechanicsAboutResources for educatorsChangelog
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.