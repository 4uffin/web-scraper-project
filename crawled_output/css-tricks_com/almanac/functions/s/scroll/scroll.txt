scroll() | CSS-Tricks
Skip to main content
CSS-Tricks
Articles
Notes
Links
Guides
Almanac
Picks
Shuffle
Search
CSS Almanac → Functions → S → scroll()
scroll()
Saleh Mubashar
on
Jul 2, 2025
Get affordable and hassle-free WordPress hosting plans with Cloudways — start your free trial today.
Experimental: Check browser support before using this in production.
The scroll() function provides an anonymous scroll progress timeline based on a scroller’s position. Unlike the view() function, which animates based on an element’s position in a scrollport, the scroll() function animates based on how far elements have been scrolled along a given axis.
span {
animation: text 1s steps(var(--n, 100)) forwards;
animation-timeline: scroll(root);
}
@keyframes text {
0% {
background-size: 0;
}
}
The scroll timeline is then used to track the user’s scroll position and determine the scroll progress accordingly. In other words, the animation is based on the user’s scroll position instead of the default timeline.
CodePen Embed Fallback
The scroll() function is defined in the Scroll-driven Animations.
Syntax
Remember the scroll() function can only be used with the CSS animation-timeline property.
animation-timeline: scroll(<scroller> <axis>);
Arguments
/* Default behavior */
animation-timeline: scroll();
/* Just the scroller */
animation-timeline: scroll(nearest); /* Closest scrollable ancestor */
animation-timeline: scroll(root); /* The document itself */
animation-timeline: scroll(self); /* The element itself (if scrollable) */
/* Just the axis */
animation-timeline: scroll(block); /* Perpendicular to text flow */
animation-timeline: scroll(inline); /* Parallel to text flow */
animation-timeline: scroll(y); /* Explicitly vertical */
animation-timeline: scroll(x); /* Explicitly horizontal */
/* Both parameters */
animation-timeline: scroll(root y);
scroller
nearest(default): The closest parent element with a scrollbar
root: The entire page (document)
self: The element itself, if it’s scrollable
axis
block (default): Scroll axis in the block direction (usually vertical for horizontal writing).
inline: Scroll axis in the inline direction (typically horizontal for horizontal writing).
y: Vertical scroll axis.
x: Horizontal scroll axis.
If you don’t provide the function with any parameters, it will automatically use the nearest scrollable ancestor (i.e., scroller) and track scrolling in the block direction by default. If a specified axis is not a scroll container, i.e, it does not have a scrollbar, the scroll() function will not work.
Behind the scenes, scroll() animations do the following:
The function starts from the element being animated and moves up the DOM tree.
It looks for the first parent element that has a scrollbar.
That scroll container’s position is then used to calculate the scroll progress. This scroll container is referred to as the scroller.
The default scroll axis, block, means the direction that is perpendicular to the text flow is used. For most Western languages (those that flow horizontally), this results in a vertical scroll axis.
The old way
What could be more basic than the popular scroll watcher animation? You’ve probably come across a progress element fixed at the top of the page, whose progress increases as you scroll down a webpage. This progress element was formerly achieved with the aid of JavaScript.
window.addEventListener("scroll", () => {
const scrollTop = document.documentElement.scrollTop;
const scrollHeight = document.documentElement.scrollHeight;
const clientHeight = document.documentElement.clientHeight;
const scrolled = (scrollTop / (scrollHeight - clientHeight)) * 100;
document.querySelector(".scroll-watcher").style.width = `${scrolled}%`;
});
document.documentElement.scrollTop shows how much you’ve scrolled, scrollHeight - clientHeight gives the total scrollable height, and then you calculate the percentage and apply it to the .scroll-watcher width.
.scroll-watcher {
height: 6px;
width: 0%;
transition: width 0.1s linear;
}
CodePen Embed Fallback
Basic Usage
Not anymore! With just CSS, using the scroll() function, you can achieve the same effect:
scroll-watcher {
height: 6px;
width: 0;
animation: scroll-watcher linear;
animation-timeline: scroll();
animation-duration: auto;
}
@keyframes scroll-watcher {
to {
width: 100%;
}
}
CodePen Embed Fallback
Note: When using the animation shorthand, make sure to declare animation-timeline after it. The shorthand resets animation-timeline to auto, so any earlier value gets overridden.
Examples!
Let’s look at a quick example. Here’s a red circle that fades in and scales up as you scroll down the page. This version uses the default behavior, so we’re not passing any arguments to scroll():
CodePen Embed Fallback
The animation is driven by vertical scrolling of the document, which in this case is also the nearest scrollable ancestor. So, the default scroll() behavior works out of the box. The block axis resolves to vertical scrolling since the text flows horizontally.
animation-name: fadeScale;
animation-duration: 1ms; /* Firefox requires this */
animation-timeline: scroll();
We can play around with the axis. For example, in this case, the animation is tied to horizontal scrolling instead of vertical (despite it also being present). If you set the axis to block or leave the axis parameter empty, then the animation would instead follow the vertical scrollbar by default.
CodePen Embed Fallback
Demos
I’ll be providing examples in this section, as the goal is to understand how scroll()works. However, you can check out a bunch of awesome and pretty practical examples and implementations over at Bramus’s demo site.
Scroll progress bar
One of the simplest — and most effective — ways to use a scroll timeline is for a progress bar that tracks how far you’ve scrolled. In this setup, the width of the bar is directly tied to the document’s scroll progress. Since we’re tracking vertical scrolling on the root (the whole page), the default behavior of scroll() works great out of the box.
CodePen Embed Fallback
Parallax effect
This example uses a scroll-driven animation to create a simple parallax effect. As you scroll, the .content section shifts upward by adjusting its margin. It’s a basic demo, but shows the potential for similar more complex effects.
CodePen Embed Fallback
Text reveal
You’ve likely seen text that reveals itself as you scroll—like a typewriter effect. We can recreate this using a scroll-driven animation that gradually changes the background size of a linear gradient. As the background expands, each character appears to be “colored in.” Using steps() and ch units makes the reveal snap cleanly, one character at a time.
CodePen Embed Fallback
Scroll Shadows
Another subtle way you can incorporate the view timeline is by adding scroll shadows, especially on mobile. There’s a separate article that covers this in much more detail, but in short, here’s how it works:
CodePen Embed Fallback
This technique uses animation-timeline: scroll() with custom properties (--left-fade, --right-fade) and a CSS mask to fade out the edges of a scrollable container. The scroll progress controls how much of the fade is applied to the left and right edges of the element.
view() vs. scroll()
view() Functionscroll() FunctionPurposeTracks an element’s visibility progress within a specific view (e.g., viewport or scroll container).Tracks scroll progress of a scroll container (e.g., viewport or overflow element).Syntaxview([axis] [inset])scroll([scroller] [axis])Main Use CaseAnimates based on how much of an element is visible in a view timeline.Animates based on the scroll position of a scroll container.Timeline TypeView Timeline: Tied to an element’s entry/exit in a view.Scroll Timeline: Tied to the scroll position of a container.LimitationsLimited to visibility-based animations; requires a subject element.Tracks the scroll progress of a scroll container (e.g., viewport or overflow element).
Browser support
The scroll() function currently has limited availability and it’s walled behind experimental flags in some browsers. You can check for support and add some fallback using the snippet below:
@supports (animation-timeline: scroll()) {
.scroll-watcher {
animation-timeline: scroll();
animation-duration: auto;
}
}
Specification
The CSS scroll() function is defined in the Scroll-Driven Animations specification which is currently in Editor’s Draft status as of June 2025. That means the information in the specification can change between now and when the feature becomes a formal Candidate Recommendation, so refer to the Browser Support section before using it in a production environment.
Related tricks!
Article
on
Jan 6, 2025
Unleash the Power of Scroll-Driven Animations
animation Scroll Driven Animation
Geoff Graham
Link
on
Feb 13, 2025
Scroll Driven Animations Notebook
Scroll Driven Animation
Geoff Graham
Article
on
May 5, 2025
Modern Scroll Shadows Using Scroll-Driven Animations
Scroll Driven Animation
Kevin Hamer
Article
on
May 15, 2025
Scroll-Driven Animations Inside a CSS Carousel
carousel
Geoff Graham
Article
on
Nov 6, 2024
Popping Comments With CSS Anchor Positioning and View-Driven Animations
anchor positioning Scroll Driven Animation
Juan Diego Rodríguez
Article
on
Mar 25, 2025
Case Study: Combining Cutting-Edge CSS Features Into a “Course Navigation” Component
Case Studies
Daniel Schwarz
Related
Almanac
on
Feb 18, 2025
animation-timeline
.element { animation-timeline: --imageTimeline; }
animation
Saleh Mubashar
Almanac
on
Dec 9, 2024
view-timeline-name
.element { view-timeline-name: --image-zoom; }
view transitions
Geoff Graham
Almanac
on
Jul 2, 2025
view()
.element { animation-timeline: view(); }
Saleh Mubashar
At-Rules
A
B
C
@charset
@color-profile
@container
@counter-style
D
E
F
@font-face
@font-feature-values
@font-palette-values
G
H
I
@import
J
K
@keyframes
L
@layer
M
@media
color-gamut
prefers-reduced-motion
N
@namespace
O
P
@page
@position-try
@property
Q
R
S
@scope
@starting-style
@supports
T
U
V
@view-transition
W
X
Y
Z
Functions
A
anchor()
anchor-size()
attr()
B
C
calc-size()
circle()
clamp()
color()
color-mix()
conic-gradient()
counter()
counters()
cubic-bezier()
D
E
ellipse()
env()
exp()
F
fit-content()
G
H
hsl()
I
image()
image-set()
inset()
J
K
L
lab()
lch()
light-dark()
linear()
linear-gradient()
M
matrix()
max()
min()
minmax()
mod()
N
O
oklab()
oklch()
P
path()
polygon()
Q
R
radial-gradient()
random()
rem()
repeating-conic-gradient()
repeating-linear-gradient()
repeating-radial-gradient()
rgb()
round()
S
scroll()
shape()
sibling-count()
sibling-index()
steps()
symbols()
T
U
url()
V
view()
W
X
xywh()
Y
Z
Properties
A
accent-color
align-content
align-items
align-self
all
anchor-name
anchor-scope
animation
animation-timeline
appearance
aspect-ratio
B
backdrop-filter
backface-visibility
background
background-attachment
background-clip
background-color
background-image
background-origin
background-position
background-repeat
background-size
background-blend-mode
bleed
block-overflow
block-size
border
border-block
border-inline
border-boundary
border-collapse
border-image
border-image-outset
border-image-repeat
border-image-slice
border-image-source
border-image-width
border-radius
border-spacing
bottom
box-decoration-break
box-shadow
box-sizing
break-after
break-before
break-inside
C
caption-side
caret
caret-color
caret-shape
clear
clip-path
color
color-scheme
column-count
column-fill
column-rule
column-rule-color
column-rule-style
column-rule-width
column-span
column-width
columns
contain
container
container-name
container-type
content
content-visibility
counter-increment
counter-reset
counter-set
cursor
D
direction
display
E
empty-cells
F
field-sizing
fill
filter
flex
flex-basis
flex-direction
flex-flow
flex-grow
flex-shrink
flex-wrap
float
font
font-family
font-size
font-stretch
font-style
font-variant
font-weight
font-display
font-feature-settings
font-kerning
font-optical-sizing
font-palette
font-size-adjust
font-synthesis
font-variant-alternates
font-variant-emoji
font-variant-numeric
G
gap
column-gap
row-gap
grid
grid-auto-columns
grid-auto-flow
grid-auto-rows
grid-template
grid-template-areas
grid-template-columns
grid-template-rows
grid-area
grid-column
grid-column-end
grid-column-start
grid-row
grid-row-end
grid-row-start
grid-row / grid-column
H
hanging-punctuation
height
hyphenate-character
hyphenate-limit-chars
hyphens
I
image-rendering
initial-letter
inline-size
inset
inset-block
inset-block-end
inset-block-start
inset-inline
inset-inline-end
inset-inline-start
interpolate-size
isolation
J
justify-content
justify-items
justify-self
K
L
left
letter-spacing
line-break
line-clamp
line-height
list-style
M
margin
margin-block
margin-block-end
margin-block-start
margin-inline
margin-inline-end
margin-inline-start
margin-trim
mask
mask-clip
mask-composite
mask-image
mask-mode
mask-origin
mask-position
mask-repeat
mask-size
mask-border
mask-type
max-height
max-inline-size
max-width
min-height
min-width
mix-blend-mode
N
O
object-fit
object-position
offset-anchor
offset-distance
offset-path
offset-rotate
opacity
order
orphans
outline
outline-color
outline-style
outline-width
outline-offset
overflow
overflow-anchor
overflow-clip-margin
overflow-wrap
overlay
overscroll-behavior
P
padding
padding-block
padding-inline
page-break
paint-order
perspective
perspective-origin
place-content
place-items
place-self
pointer-events
position
position-anchor
position-area
position-try-fallbacks
position-try-order
position-visibility
print-color-adjust
Q
quotes
R
resize
right
rotate
S
scale
scroll-behavior
scroll-margin
scroll-marker-group
scroll-padding
scroll-snap-align
scroll-snap-stop
scroll-snap-type
scrollbar
scrollbar-color
scrollbar-gutter
scrollbar-width
shape-image-threshold
shape-margin
shape-outside
speak
stroke
stroke-dasharray
stroke-dashoffset
stroke-linecap
stroke-linejoin
stroke-width
T
tab-size
table-layout
text-align
text-align-last
text-box
text-box-edge
text-box-trim
text-combine-upright
text-decoration
text-decoration-color
text-decoration-line
text-decoration-style
text-decoration-thickness
text-decoration-skip
text-decoration-skip-ink
text-emphasis
text-indent
text-justify
text-orientation
text-overflow
text-rendering
text-shadow
text-stroke
text-transform
text-underline-offset
text-underline-position
text-wrap-mode
text-wrap-style
top / bottom / left / right
touch-action
transform
transform-origin
transform-style
transition
transition-behavior
transition-delay
transition-duration
transition-property
transition-timing-function
translate
U
unicode-bidi
unicode-range
user-select
V
vertical-align
view-timeline-name
view-transition-name
visibility
W
white-space
widows
width
will-change
word-break
word-spacing
writing-mode
X
Y
Z
z-index
zoom
Pseudo-Selectors
A
:active
:any-link
:autofill
B
::backdrop
::before / ::after
:blank
C
:checked
:current
D
::details-content
:default
:defined
:dir()
:disabled
E
:empty
:enabled
F
::file-selector-button
::first-letter
::first-line
:first
:first-child
:first-of-type
:focus
:focus-visible
:focus-within
:fullscreen
:future
G
H
:has()
:hover
I
:in-range
:indeterminate
:invalid
:is
J
K
L
:lang()
:last-child
:last-of-type
:left
:link
M
::marker
N
:not
:nth-child
:nth-last-child
:nth-last-of-type
:nth-of-type
O
:only-child
:only-of-type
:open
:optional
:out-of-range
P
::placeholder
:past
:placeholder-shown
:popover-open
Q
R
:read-write / :read-only
:required
:right
:root
S
::scroll-button()
::scroll-marker
::scroll-marker-group
::selection
T
::target-text
:target
:target-current
U
:user-invalid
V
::view-transition
::view-transition-group
::view-transition-image-new
::view-transition-image-old
::view-transition-image-pair
:valid
:visited
W
:where
X
Y
Z
Selectors
A
Adjacent sibling
[attribute]
B
C
Chained
Child
Class
D
Descendant
E
F
G
General sibling
H
I
ID
J
K
L
M
N
O
P
Q
R
S
T
Type
U
Universal
V
W
X
Y
Z
TOC
Syntax
Arguments
The old way
Basic Usage
Examples!
Demos
view() vs. scroll()
Browser support
Specification
Related tricks!
Psst! Create a DigitalOcean account and get $200 in free credit for cloud-based hosting and services.
This comment thread is closed. If you have important information to share, please contact us.
CSS-Tricks is powered by DigitalOcean.
Keep up to date on web dev
with our hand-crafted newsletter
DigitalOcean
About DO
Cloudways
Legal stuff
Get free credit!
CSS-Tricks
Contact
Write for CSS-Tricks!
Advertise with us
Social
RSS Feeds
CodePen
Mastodon
Bluesky
Back to Top