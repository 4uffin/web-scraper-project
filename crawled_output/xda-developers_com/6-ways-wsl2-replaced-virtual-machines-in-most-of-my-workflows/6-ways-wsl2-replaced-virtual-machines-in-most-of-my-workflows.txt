6 ways WSL2 replaced virtual machines in most of my workflows
Menu
Sign in now
Close
News
PC Hardware
Submenu
CPU
GPU
Storage
Monitors
Keyboards & Mice
Software
Submenu
Productivity
Other Software
Operating Systems
Submenu
Windows
Linux
macOS
Devices
Submenu
Single-Board Computers
Laptops
Gaming Handheld
Prebuilt PC
Home
Submenu
Networking
Smart Home
Gaming
Submenu
Game Reviews
Sign in
Newsletter
Menu
Follow
Followed
Like
Threads
1
More Action
Summary
Generate a summary of this story
Sign in now
Switch 2
RTX 5060
Windows 11
Gaming
Forums
Close
6 ways WSL2 replaced virtual machines in most of my workflows
By
Ty Sherback
Published Sep 13, 2025
His love of PCs and their components was born out of trying to squeeze every ounce of performance out of the family computer. Tinkering with his own build at age 10 turned into building PCs for friends and family, fostering a passion that would ultimately take shape as a career path.
Besides being the first call for tech support for those close to him, Ty is a computer science student, with his focus being cloud computing and networking. He also competed in semi-pro Counter-Strike for 8 years, making him intimately familiar with everything to do with peripherals.
Sign in to your XDA account
Summary
Generate a summary of this story
follow
Follow
followed
Followed
Like
Like
Thread
1
Log in
Here is a fact-based summary of the story contents:
Try something different:
Show me the facts
Explain it like I’m 5
Give me a lighthearted recap
If you've ever had to work in a Linux environment, but still needed quick access to Windows-based tools and features, it's likely you've turned to virtual machines. They were (and still are, in some ways) a great way to create a bridge between the two operating systems, but have been largely replaced by Microsoft's Windows Subsystem for Linux. WSL2 is Microsoft's attempt to develop an extremely lightweight way to run Linux within a Windows environment, and it has largely trounced my need for bulky virtual machines.
Complete file system integration
No shared folders needed
One of the huge downsides of ever working inside virtual machines is the huge hassle of shared folder setups. Any time you want to pass long files to your VMs, it requires setting them up, and while sometimes it works as intended, whenever it doesn't, it's a huge drag. WSL2 makes this a moot point entirely, because it exposes Linux file system paths to Windows directly, allowing you to share configuration files, develop and test code instantly, and even transfer larger media assets, all within a native environment. It can sometimees be even more convenient than having a dedicated Linux OS installed on your system, as sharing files between operating systems and their different file systems can be made difficult because of settings like fast boot, or the lack of certain packages on the Linux side of things. I used to try and maintain a synced folder between my VMs and my host machine, but now, WSL2 solves pretty much all of my file sharing woes.
Dynamic resource sharing
No more pre-allocation
While VMs pre-allocate resources like CPU cores, RAM, and storage, WSL2 only uses resources as needed, like any other process on your PC. Any time you're running something intensive, the performance scales automatically, and when it's dormant, it releases memory back to the main system as needed, just like Windows does (most of the time). For me, this is super convenient. As someone who fills a lot of different shoes, I'll often have different Adobe apps open, games being launched after work, and of course, my unhealthy number of browser tabs. WSL2 does what I need it to do, then ensures resources are properly distributed back to my system.
Easier software management
Package managers make software less clunky
While you can get similar experiences natively on Windows or by dual-booting a Linux OS, nothing quite matches the software management that package managers offer you. apt, pacman, zypper and dnf can all be ran directly inside WSL2, which means you get direct access to the Linux package ecosystem. I can use them to install anything from OpenSSH to specific versions of Node.js if I need them, without having to deal with the clunk of Windows and being pigeonholed into GUIs.
Docker integration
Incredibly convenient
Docker itself is already extremely powerful and robust, even if you run it directly on Windows. But running it inside of WSL2 is simple, and gets rid of a lot of the overhead that Docker Desktop brings along with it. Docker Desktop already hooks into WSL2, but running it without the GUI means you're that much closer to native Linux behavior. For me, this is way simpler and more efficient than firing up a Linux VM, then running Docker inside of that.
Networking simplicity
No need for a ton of separate virtual adapters
One of the most annoying parts of working with VMs, to me, was networking. Between all the NAT configuration, bridging adapters and tweaking firewalls, I've had it up to here with networking VMs. WSL2 integrates directly into my existing network stack, so all localhost ports, firewall rules, and other settings apply.
Hardware acceleration support
GPU compute is right there for you
WSL2 supports GPU acceleration through CUDA and DirectML, which means any kind of AI training or rendering workloads can be run directly in a Linux environment. Sure, it's possible to get this working through VMs, but it's not always seamless. Among all the other benefits, if I choose to dabble in any kind of ML, it's nice to know I can run something like TensorFlow directly on my GPU through WSL2, removing the need for any kind of VM.
Virtual machines still have a place
Just not in my workflow. I'm not testing anything with the intention of deploying it into a production environment, so spinning up a ton of virtual machines just seems like added bulk and hassle that I don't need. WSL2 is incredibly light, runs fast, and is way more closely integrated with Windows, which is still my main OS for the foreseeable future.
Linux
Windows Subsystem for Linux
Ubuntu
Follow
Followed
Like
Share
Facebook
X
LinkedIn
Reddit
Flipboard
Copy link
Email
Close
Thread
1
Sign in to your XDA account
We want to hear from you! Share your opinions in the thread below and remember to keep it respectful.
Reply / Post
Images
Attachment(s)
Please respect our community guidelines. No links, inappropriate language, or spam.
Your comment has not been saved
Send confirmation email
Sort by:
Popular
Oldest
Newest
pexxie
pexxie
pexxie
#TS965067
Member since 2025-09-14
0
Threads
2
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
I am very grateful for what Microsoft have done for us here. I use it with VS Code and various extensions for linux development work, as well as running various linux tools and scripts. I am still reliant on VMs however for snapshots and UDP networking.
2025-09-14 05:37:07
Upvote
1
Downvote
Reply
Copy
Terms
Privacy
Feedback
Recommended
Sep 10, 2025
6 smart home devices I can't live without
Sep 9, 2025
The most alive and immersive open-world maps ever created
Sep 10, 2025
5 projects you can do for much cheaper with an ESP32 than a Raspberry Pi
Sep 9, 2025
Forget the Switch 2, the Steam Deck is still the ultimate travel console
Today's best deals
This legendary FromSoftware title with 93% positive reviews is 50% off on Steam
11 hours ago
Don't learn the hard way how a power outage can ruin your gear
14 hours ago
Why pay more? Save $189 on Windows 11 Pro today
17 hours ago
See More
Trending Now
You can win an Asus ROG Ally X by declaring your favorite game: here's how
This awesome Raspberry Pi project brings the Game Boy Advance back to life
Borderlands 4 is a big example of why we need to stop making excuses for buggy launches
Join Our Team
Our Audience
About Us
Press & Events
Contact Us
Follow Us
Advertising
Careers
Terms
Privacy
Policies
XDA is part of the
Valnet Publishing Group
Copyright © 2025 Valnet Inc.