I migrated my self-hosted services from one Proxmox node to another, and it was shockingly easy
Menu
Sign in now
Close
News
PC Hardware
Submenu
CPU
GPU
Storage
Monitors
Keyboards & Mice
Software
Submenu
Productivity
Other Software
Operating Systems
Submenu
Windows
Linux
macOS
Devices
Submenu
Single-Board Computers
Laptops
Gaming Handheld
Prebuilt PC
Home
Submenu
Networking
Smart Home
Gaming
Submenu
Game Reviews
Sign in
Newsletter
Menu
Follow
Followed
Like
Threads
More Action
Summary
Generate a summary of this story
Sign in now
Switch 2
RTX 5060
Windows 11
Gaming
Forums
Close
I migrated my self-hosted services from one Proxmox node to another, and it was shockingly easy
By
Ayush Pande
Published 1 day ago
Ayush Pande is a PC hardware and gaming writer. When he's not working on a new article, you can find him with his head stuck inside a PC or tinkering with a server operating system. Besides computing, his interests include spending hours in long RPGs, yelling at his friends in co-op games, and practicing guitar.
Sign in to your XDA account
Summary
Generate a summary of this story
follow
Follow
followed
Followed
Like
Like
Thread
Log in
Here is a fact-based summary of the story contents:
Try something different:
Show me the facts
Explain it like I’m 5
Give me a lighthearted recap
Thanks to its astonishingly low minimal system requirements and built-in support for LXCs, Proxmox is one of the best virtualization platforms for repurposing old machines into robust self-hosting workstations. In fact, I’ve armed a budget-friendly NAS I received a few days ago with Proxmox and plan to use it for hosting a couple of experimental containers. But since I’ve already got an old laptop serving as an LXC-hosting PVE node, I figured I could try migrating some virtual guests from the dinosaur machine to my shiny new NAS. Turns out, there are a multitude of ways to move containers and virtual machines between guests. Having tinkered with many of them over the last few days, here are some perks and quirks I encountered in each method.
A Proxmox cluster can help
But I wouldn’t go for this solution
The native support for cluster setups is one of the many perks of Proxmox, and there are many advantages to connecting a couple of PVE nodes in a cluster. This includes the ability to seamlessly migrate virtual guests between the workstations as you see fit. Even if you don’t have a shared storage pool for a high-availability setup, migrating services between cluster nodes is fairly simple. Once you’ve connected the two nodes inside a cluster, you can right-click on your preferred virtual guest and press the Migrate option. Then, you’ll want to set the right Target Node (in this case, the PVE workstation where you wish to transfer your VMs and LXCs) and hit the Migrate button. Assuming you have the right network bridge and storage pools configured on both nodes and there aren’t any conflicts in the CIDs or VIDs, the migration process will begin. For folks who already use clusters, this method works like a charm. But if you’re not interested in deploying a cluster, I wouldn’t recommend doing so just to migrate virtual guests. For starters, you’ll have a hard time maintaining a quorum with just two PVE machines, and you won’t be able to access either node if one of them goes down. Breaking a cluster and removing nodes is also a royal pain. Since my main motive was to transfer some LXCs to my NAS, it’s clear that deploying a cluster wouldn’t quite cut it.
You can also migrate virtual guests using backups
Proxmox Backup Server comes in handy here
Backing up virtual guests and restoring them is a neat way to perform cold migrations, where the VMs/LXCs remain inoperational for the entire duration of the transfer process. While you can do so using configuration files and FTP clients, the Proxmox Backup Server makes this process a cinch. Assuming you’ve already got a PBS instance, you’ll want to connect it with both the sender and receiver nodes. After that, you’ll want to create a Backup Task encompassing all the containers and virtual machines on the old node via the Backup menu within the Datacenter tab. Once the backup process is complete, you can switch to the PBS storage tab on your target node. You’ll find a list of the snapshots created on the sender node inside the Backup tab, and you can add them to the current PVE workstation by pressing the Restore button. If you’ve already got Proxmox Backup Server set up on a bare-metal machine, this is one of the best methods for migrating virtual guests. Rather than worrying about ID conflicts or missing bridges/storage pools, this method lets you choose the VM/LXC IDs, storage pool, privilege level, and other settings when restoring the virtual guests. But for folks who only have two nodes, you’ll probably end up running PBS in a virtualized setup. Depending on the number of virtual guests in your arsenal, you may need extra free storage on the node where you plan to host the PBS server.
Proxmox Datacenter Manager is perfect for the task
Even though the tool is still in its alpha stage
Besides PBS, Proxmox Datacenter Manager is another first-party tool for PVE workstations. Except, it’s designed to help you manage multiple Proxmox instances instead of snapshots. Although it’s still very much a work-in-progress, the Proxmox Datacenter Manager has a couple of neat features, including the ability to migrate virtual machines and containers between the nodes paired with the tool. To transfer your VMs and LXCs, you’ll want to start by selecting the Migrate button inside the Source node tab. Inside the pop-up window, you’ll have to pick the Target Remote (which is the name of the other node) and choose the Target Storage and Target Network options. You can also modify the ID of the virtual guest and can even opt to delete the original instance on the source PVE rig. If you don’t have enough space for a virtualized Proxmox Backup Server, deploying the Datacenter Manager is the next best solution. It doesn’t require a lot of disk space and is much quicker than waiting for PBS to create the snapshots and then restoring them on the target node.
Linux
Home Lab
Self-Hosting
Follow
Followed
Like
Share
Facebook
X
LinkedIn
Reddit
Flipboard
Copy link
Email
Close
Thread
Sign in to your XDA account
We want to hear from you! Share your opinions in the thread below and remember to keep it respectful.
Be the first to post
Images
Attachment(s)
Please respect our community guidelines. No links, inappropriate language, or spam.
Your comment has not been saved
Send confirmation email
This thread is open for discussion.
Be the first to post your thoughts.
Terms
Privacy
Feedback
Recommended
3 days ago
This overlooked Mac app helped me double my productivity
4 days ago
You don’t need to spend too much money to start your home lab - here’s how you can do so for cheap
4 days ago
eGPUs over Thunderbolt sound great, but be aware of these limitations
3 days ago
5 Linux features I rely on for maximum performance
Today's best deals
This retro-inspired mechanical keyboard is all vibes and now just $44
1 hour ago
This rare discount makes the AMD Ryzen 7 9800X3D the ultimate CPU for your next gaming PC build
4 hours ago
This legendary triple-A FPS series is currently $10 for six games on Steam
21 hours ago
See More
Trending Now
I set up my own NTP server to keep all of my devices totally synchronized
Maxon Cinema 4D, ZBrush, and Razer Synapse are all coming to Windows on Arm
Netdata is an open source dashboard that shows all my servers and services in one place
Join Our Team
Our Audience
About Us
Press & Events
Contact Us
Follow Us
Advertising
Careers
Terms
Privacy
Policies
XDA is part of the
Valnet Publishing Group
Copyright © 2025 Valnet Inc.