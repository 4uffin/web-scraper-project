I ran my NAS in Proxmox and set up an SMB share so my LXCs can access it
Menu
Sign in now
Close
News
PC Hardware
Submenu
CPU
GPU
Storage
Monitors
Keyboards & Mice
Software
Submenu
Productivity
Other Software
Operating Systems
Submenu
Windows
Linux
macOS
Devices
Submenu
Single-Board Computers
Laptops
Gaming Handheld
Prebuilt PC
Home
Submenu
Networking
Smart Home
Gaming
Submenu
Game Reviews
Sign in
Newsletter
Menu
Follow
Followed
Like
Threads
3
More Action
Summary
Generate a summary of this story
Sign in now
Switch 2
RTX 5060
Windows 11
Gaming
Forums
Close
I ran my NAS in Proxmox and set up an SMB share so my LXCs can access it
By
Ayush Pande
Published Sep 18, 2025
Ayush Pande is a PC hardware and gaming writer. When he's not working on a new article, you can find him with his head stuck inside a PC or tinkering with a server operating system. Besides computing, his interests include spending hours in long RPGs, yelling at his friends in co-op games, and practicing guitar.
Sign in to your XDA account
Summary
Generate a summary of this story
follow
Follow
followed
Followed
Like
Like
Thread
3
Log in
Here is a fact-based summary of the story contents:
Try something different:
Show me the facts
Explain it like I’m 5
Give me a lighthearted recap
Having built numerous projects on Proxmox, it’s easily the most versatile virtualization platform out there. Between the sheer number of community scripts and home lab-oriented settings, there’s nothing you can’t accomplish with Proxmox and a little bit of patience. And I say that as someone who has put together everything from virtualized dev environments and daily-driver VMs to full-on Hackintosh setups on my Proxmox nodes. However, I’ve usually avoided running a NAS on top of my PVE rigs, and tend to separate my home server-oriented Proxmox workstations from my storage servers. But after many discussions with our technical wizard, Adam Conway, I figured I might as well give a virtualized NAS a shot. Heck, we even found a neat way to connect network shares from this VM-based storage server with unprivileged LXCs – a feat that typically involves a lot of headache from running terminal commands.
What’s the point of this project?
Useful when you've only got unprivileged LXCs
Between my crippling addiction to buying as many server parts as possible and my role as a tech reviewer, I’ve got a few spare rigs lying around. As such, it’s no surprise that I can run a primary and secondary NAS, with the latter being relegated to my storage experiments. However, that’s not the case for most home labbers, and if there’s anything I’ve realized after hours of tinkering with old PCs, it’s that you don’t need to shell out a ton of money for a home server. Although I always recommend going for separate machines for NAS and Proxmox nodes, I’ve heard that you can build a reliable storage server inside a virtual machine and wanted to test this notion out myself. As for the network share portion of the article, here’s a general overview of my setup: I’ve got an SMB share running on my (virtualized) TrueNAS server, which I first mounted to my PVE host. After that, I ran a couple of terminal commands to set up a mount point to the LXC, which causes the share to appear as a local drive for the container. If you’re wondering why I’d go for this workaround, it’s because of the permission issues with unprivileged containers. In exchange for providing better security, unprivileged LXCs tend to cause a lot of problems when mounting a network share – which is the reason I’ve been running my Jellyfin LXC in privileged mode. Luckily, this workaround circumvents that issue and lets me connect my secure, unprivileged containers with SMB shares without dealing with UID/GID mappings.
Deploying my NAS on Proxmox
And setting up an SMB share
The first step was creating a NAS inside a VM. Having cycled between numerous NAS-centric distributions in the past, I always find myself coming back to TrueNAS, and it’s the one I wanted to use for this project. So, I uploaded an ISO file of the distro to the ISO Images section within the local storage pool on my Proxmox host before using the Create VM wizard to assign some CPU, memory, and storage resources to my virtual machine-based NAS. But before I could boot into TrueNAS, I passed the HBA card of my Proxmox host to the NAS virtual machine. TrueNAS recommends passing through the SATA controller or HBA card to a virtualized setup, as doing so provides close to bare-metal performance to the physical drives. Since I’d already configured PCI passthrough beforehand, I quickly added the HBA card to my TrueNAS VM using the PCI Device option inside the Hardware tab. After running the TrueNAS installation wizard, I logged into the distro’s web UI. I quickly configured two drives using the Storage section, before navigating to the User page within the Credentials tab to create a new account for my SMB shares. With the setup nearly complete, I navigated to the Network section, clicked the Add button next to the Windows (SMB) Shares section, and created a new Dataset within the drive pool for the share. Finally, I edited the ACL permissions to grant my newly created user full access to the SMB folder.
Connecting the SMB share to Proxmox (and my LXCs)
I had to run a couple of commands
Now that I was done with configuring TrueNAS, I turned my attention to my Proxmox host. Before deploying an LXC for this setup, I headed to the Datastore on Proxmox’s web UI, selected the Storage tab, and tapped on the CIFS/SMB option under the Add button. Then, I added a name (which can be any random string) as the ID, the IP Address of my TrueNAS VM as the Server, and entered the Username and Password of the account associated with the SMB share. Soon, the name of the Share popped up within the field with the same name, and I hit the Add button. Next, I had to create a directory that would serve as the mount point on my LXC. I went with a new Jellyfin container and made sure to set the container mode to unprivileged. But rather than configuring Jellyfin’s web UI, I headed to the Console tab within the LXC’s page on Proxmox’s interface, and ran the mkdir /mnt/folder-name command to create a new directory. I then moved to the Shell tab of my Proxmox node, ran the cd /etc/pve/lxc command to switch to the folder containing the config files of my virtual guests. After executing the ls command to see the contents of the directory, I used the nano editor to open the configuration file with the same numerals as the container ID. I added the following line inside this file: mp0: /mnt/pve/share-name,mp=/mnt/folder-name
Here, the share-name variable points to the ID I’d given to my SMB share. I restarted the container and began the initial configuration wizard. Lo and behold, the folder appeared inside the Add Media Library tab. Just to double-check everything, I transferred a video from my PC to the network share and rescanned the Library. Sure enough, the clip appeared inside Jellyfin’s UI!
Nevertheless, a virtualized NAS setup has its drawbacks
While this setup works pretty well for an all-in-one Proxmox node, I’m still apprehensive about replacing my NAS with a virtualized instance. While it’s possible to recover my storage server unless I try something truly wacky with my PVE node, I just prefer a bare-metal NAS workstation. That way, my backup and data archival rig would remain operational 24/7, and I’d be able to work on wacky computing projects without worrying about accidentally bringing my NAS down.
Home Lab
Follow
Followed
Like
Share
Facebook
X
LinkedIn
Reddit
Flipboard
Copy link
Email
Close
Thread
3
Sign in to your XDA account
We want to hear from you! Share your opinions in the thread below and remember to keep it respectful.
Reply / Post
Images
Attachment(s)
Please respect our community guidelines. No links, inappropriate language, or spam.
Your comment has not been saved
Send confirmation email
Sort by:
Popular
Oldest
Newest
XDANoob
XDANoob
XDANoob
#RG264694
Member since 2025-09-20
0
Threads
1
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
how do you mount the shares while proxmox let's say is rebooting? It cannot mount before the share itself is available and truenas has been started.
2025-09-20 00:30:46
Upvote
Downvote
Reply
Copy
alpha754293
alpha754293
alpha754293
#HK743600
Member since 2024-08-19
0
Threads
84
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
Four things:1) You can absolutely run the NAS on Proxmox with or without the virtual TrueNAS VM. i.e. if you don't the virtualised NAS taking up some of your system resources (which is more important for more resource-constrained systems), then you can just install and configure Samba directly on the Debian install that Proxmox runs on top of.The Debian base is perfectly capable of running SMB/NFS/iSCSI (although for me, iSCSI didn't work quite as well as it does via TrueNAS, not really sure why). But SMB/NFS definitely works and very well, I might add.2) If you have a system that you're running 24/7, you can run Proxmox on it. Most storage servers spend a significant amount of their time at or near idle. Putting it to use beyond just being a NAS improves its overall utilisation. And you can do a LOT with Proxmox that would seldomly impact the underlying NAS system itself. This is what my "do-it-all" Proxmox server does.3) Having virtualised TrueNAS, you can *expect* that the data bandwidth through the virtualised TrueNAS to be quite slow. I had my 5950X running, gave my TrueNAS VM four Samsung 860 Evo 1 TB SATA 6 Gbps SSDs, and when loading Halo Infinite, it was barely touching 2.5 Gbps (via the virtio NIC, which shows up as a 10 Gbps NIC). It ended up being actually faster if I just passed the SATA SSD to my Windows VM. And that's what I ended up doing, ultimately.4) I forget if Proxmox stores your SMB credentials in /etc/pve/storage.cfg, in plain text. You might want to double-check that. But you can absolutely do this. I've done it and it works well. If you want to make it even easier, but it takes a bit more upfront work, set up Active Directory via Samba, and then route all of your users through that, that way you'll have one set of user credentials that's managed from one interface (I use the turnkey linux AD template for that). And you route everything through your AD user credentials. Then privileged vs. unprivileged is largely academic for you
2025-09-19 09:50:19
Upvote
Downvote
Reply
Copy
Marcus
Marcus
Marcus
#DH666882
Member since 2025-06-02
0
Threads
10
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
I am running truNas on my Proxmox and I am 100% pleased with it.
It runs like a top and when I copy data back and forth from one machine to another through it, it is like it knows it is internal.
It is very quick and efficient.
2025-09-19 12:13:20
Upvote
Downvote
Reply
Copy
Terms
Privacy
Feedback
Recommended
Sep 16, 2025
5 reasons high-end CPUs have become overkill in 2025
Sep 16, 2025
Windows lives on the C: drive, and the reason it's not called A: or B: goes back to the 1970s
Sep 16, 2025
This self hosted app turned my terminal into a full network monitoring dashboard
Sep 16, 2025
I always play these 4 game franchises on PlayStation over Xbox consoles, and it's better that way
Today's best deals
This retro-inspired mechanical keyboard is all vibes and now just $44
1 hour ago
This rare discount makes the AMD Ryzen 7 9800X3D the ultimate CPU for your next gaming PC build
3 hours ago
This legendary triple-A FPS series is currently $10 for six games on Steam
21 hours ago
See More
Trending Now
I replaced my browser's home page with this self hosted dashboard, and it's the best productivity tweak I've ever made
3 reasons why Obsidian seems intimidating, and why you shouldn't worry
5 of my favorite SSH client for Windows
Join Our Team
Our Audience
About Us
Press & Events
Contact Us
Follow Us
Advertising
Careers
Terms
Privacy
Policies
XDA is part of the
Valnet Publishing Group
Copyright © 2025 Valnet Inc.