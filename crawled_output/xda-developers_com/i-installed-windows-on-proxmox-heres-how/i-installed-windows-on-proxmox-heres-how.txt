I installed Windows on Proxmox, and it's a bit more involved than you might expect
Menu
Sign in now
Close
News
PC Hardware
Submenu
CPU
GPU
Storage
Monitors
Keyboards & Mice
Software
Submenu
Productivity
Other Software
Operating Systems
Submenu
Windows
Linux
macOS
Devices
Submenu
Single-Board Computers
Laptops
Gaming Handheld
Prebuilt PC
Home
Submenu
Networking
Smart Home
Gaming
Submenu
Game Reviews
Sign in
Newsletter
Menu
Follow
Followed
Like
Threads
3
More Action
Summary
Generate a summary of this story
Sign in now
Switch 2
RTX 5060
Windows 11
Gaming
Forums
Close
I installed Windows on Proxmox, and it's a bit more involved than you might expect
By
Ayush Pande
Published Sep 10, 2025
Ayush Pande is a PC hardware and gaming writer. When he's not working on a new article, you can find him with his head stuck inside a PC or tinkering with a server operating system. Besides computing, his interests include spending hours in long RPGs, yelling at his friends in co-op games, and practicing guitar.
Sign in to your XDA account
Summary
Generate a summary of this story
follow
Follow
followed
Followed
Like
Like
Thread
3
Log in
Here is a fact-based summary of the story contents:
Try something different:
Show me the facts
Explain it like I’m 5
Give me a lighthearted recap
Having tinkered with multiple virtualization platforms over the last couple of years, I have to admit that Proxmox is hands-down the most versatile of them all. Between its underlying KVM, support for community scripts, and compatibility with ZFS, Proxmox can run practically any operating system, ranging from server distros like TrueNAS and OpenMediaVault to DIY Hackintosh setups. Throw in nested virtualization, and you can even run Qubes OS and other virtualization platforms. Heck, you can even run the mighty Windows 11 on your Proxmox server – provided it’s not lacking on the performance front. That said, Microsoft’s flagship OS is a bit more complex to configure on Proxmox than other operating systems. So much so that you’ll have to tweak a bunch of settings before you can even get your virtual machine to boot into Windows 11.
Creating the Windows 11 VM
The VirtIO drivers file is a life-saver
When you’re deploying a virtual machine for pretty much any OS besides Windows 11, you’d probably select the ISO file and assign the adequate amount of resources to it. Well, Windows 11 requires you to download a second ISO file for the VirtIO drivers. If you haven’t heard of them, VirtIO drivers let you interface certain hardware components with KVM, which is the underlying hypervisor on Proxmox. Without these drivers, you’ll have a hard time getting your PVE-based virtual machine to detect the storage controller and won’t be able to select the SCSI virtual drive when installing Windows 11. Luckily, doing so is a walk in the park. Once you've got the ISO file for VirtIO drivers, you’ll have to add it to your local storage like any other OS image. When you’re configuring the Windows 11 virtual machine, you’ll want to toggle the checkbox for the Add additional drive for VirtIO drivers before selecting the ISO file you downloaded earlier.
Be sure to enable TPM and UEFI BIOS
Since Windows 11 mandates TPM 2.0 support, you’ll also need to get the VM to recognize the security module. Fortunately, Proxmox lets you interface a virtualized TPM component with your virtual machines to simplify your Windows 11 setup. When you’re creating a new Windows 11 virtual machine, you’ll have to enable the TPM checkbox before selecting a drive (I usually go with local-lvm). You’ll also have to use OVMF BIOS instead of their legacy SeaBIOS counterpart when configuring the Windows 11 VM. Once you’ve switched the BIOS to OVMF (UEFI), remember to toggle the Add EFI Disk option before selecting a data pool as your EFI Storage.
Installing the essential drivers from the installation wizard
Although you could set up some VirtIO drivers after you've installed Windows 11, you'll want to configure some high-priority ones inside the installation wizard. Once you've started the Windows 11 virtual machine, you'll want to head to go through the usual setup sequence until you arrive at the screen where you need to select the location for your Windows 11 installation. By default, you won't spot a single drive, even if you've allocated multiple SCSI disks to the virtual machine. That's where the VirtIO drivers disk we added earlier comes into play, and pressing the Browse button within the setup wizard will bring up their directory. For the SCSI drivers, you’ll have to choose the win11 folder within the amd64 directory. This will bring up the Red Hat SCSI passthrough driver, and once you’ve installed them, your SCSI drive will be visible. While you're at it, I'd also recommend installing the drivers for the paravirtualized Ethernet adapter, which you can do either during initial setup by selecting the "Have disk" option when prompted to create a Microsoft account, or after creating a local account. Unlike most Linux OSes, Windows doesn't detect the paravirtualized Ethernet adapter by default, making VirtIO's NetKVM drivers critical for your VM. All you have to do is navigate to the amd64 directory within the w11 folder of NetKVM.
I recommend installing the rest of the VirtIO drivers as well
It's fairly easy to pull off
Once you're done installing Windows 11 onto a virtual machine, there's one final tweak you'd want to make. You see, VirtIO has a couple of other useful drivers, including those for Balloon memory, QXL, and guest-agent. While they may sound somewhat insignificant, these drivers are especially useful if you want a snappy experience in your QEMU-based Windows 11 setup, as they'll also improve the performance of the noVNC viewer in your browser. Luckily, installing these drivers is as simple as heading to the virtio-win directory (it's typically the D: drive), scrolling down, and installing virtio-win-guest-tools. This will install the entire Red Hat driver package for your virtualized Windows instance.
With enough tweaks, you can even turn the Windows 11 VM into a daily driver
I did it!
After you're done configuring the Windows 11 virtual machine, I recommend taking a snapshot of your setup. That way, you don't have to spend another hour repeating the same steps when things go awry. If performance is what you're looking for, you’ll want to allocate enough CPU and memory provisions to your virtual machine. Heck, you can even pass a GPU to it!
I’ll admit that PCI passthrough is somewhat difficult, let alone GPU passthrough. But if you’re willing to modify certain config files and deal with some terminal commands on the Proxmox shell, you can turn your Windows 11 virtual machine into a force to be reckoned with. Yes, I speak from experience.
Windows
Home Lab
Follow
Followed
Like
Share
Facebook
X
LinkedIn
Reddit
Flipboard
Copy link
Email
Close
Thread
3
Sign in to your XDA account
We want to hear from you! Share your opinions in the thread below and remember to keep it respectful.
Reply / Post
Images
Attachment(s)
Please respect our community guidelines. No links, inappropriate language, or spam.
Your comment has not been saved
Send confirmation email
Sort by:
Popular
Oldest
Newest
Jerry
Jerry
Jerry
#TV937180
Member since 2024-02-21
0
Threads
2
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
All you needed to do is use the set.the VM CPU to host.
I did not have any problems at all. I am running 2 LXD containers, 3 Linux VMs and one Windows 11 VM on a Ryzen 7 Nuc with 64gb of ram 4tb local storage and 30tb Ceph
2025-09-13 17:03:06
Upvote
1
Downvote
Reply
2
Copy
samwathegreat
samwathegreat
samwathegreat
#EV932480
Member since 2025-07-11
0
Threads
2
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
That only works if the underlying CPU is already supported by Windows 11.
If the host CPU does not support Windows 11 (like my haswell xeon) you can just use one of the virtual CPUs and it will work just fine.I agree that the author made this out to be much more difficult than it actually is...Running a few dozen containers and VMS here.. a handful of them Windows 10 and 11.
2025-09-14 12:39:09
Upvote
Downvote
Reply
Copy
Ralph
Ralph
Ralph
#HE900252
Member since 2025-09-18
0
Threads
1
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
Yeah, I didn’t find it difficult either—unless downloading an extra ISO and clicking three more buttons counts as an odyssey. Honestly, if you’ve already made it far enough to install and use Proxmox, you're not the average 'next next finish' end-user anymore. You’re basically the IT demigod of your household at that point.The article title made it sound like you need to enter a cheat code, chant in Latin, and sacrifice a PCI slot to summon Windows 11 on Proxmox. But really, it’s just: ‘mount VirtIO ISO > load drivers > enable TPM & UEFI.’ Boom. Done. The hardest part might be explaining to your friends why you voluntarily run Windows inside Linux.To be fair, the author did say it's a walk in the park—but it’s more like a walk through IKEA. There are a few extra steps, maybe a little confusion at the start, but you end up with something functional… if you follow the signs and don't get distracted by the shiny things (like GPU passthrough).
2025-09-18 09:11:17
Upvote
Downvote
Reply
Copy
Terms
Privacy
Feedback
Recommended
Sep 9, 2025
I used to fear the Raspberry Pi’s underwater Wi-Fi capabilities, but now I’m looking forward to it
Sep 10, 2025
5 PC components where I never chase looks over performance
Sep 9, 2025
Review: Hell is Us is not a Soulslike, but something far more daring and original
Sep 10, 2025
Arm skipped the NPU hype, making the CPU great at AI instead
Today's best deals
This legendary FromSoftware title with 93% positive reviews is 50% off on Steam
11 hours ago
Don't learn the hard way how a power outage can ruin your gear
15 hours ago
Why pay more? Save $189 on Windows 11 Pro today
17 hours ago
See More
Trending Now
I tried out the brand new KDE Linux distro, and it's already my favorite
This awesome Raspberry Pi project brings the Game Boy Advance back to life
7 ancient Windows commands that are still helpful for troubleshooting today
Join Our Team
Our Audience
About Us
Press & Events
Contact Us
Follow Us
Advertising
Careers
Terms
Privacy
Policies
XDA is part of the
Valnet Publishing Group
Copyright © 2025 Valnet Inc.