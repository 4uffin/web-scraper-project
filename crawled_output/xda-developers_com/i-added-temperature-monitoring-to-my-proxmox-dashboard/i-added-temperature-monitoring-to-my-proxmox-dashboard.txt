I added real-time temperature monitoring to my Proxmox dashboard, here's how
Menu
Sign in now
Close
News
PC Hardware
Submenu
CPU
GPU
Storage
Monitors
Keyboards & Mice
Software
Submenu
Productivity
Other Software
Operating Systems
Submenu
Windows
Linux
macOS
Devices
Submenu
Single-Board Computers
Laptops
Gaming Handheld
Prebuilt PC
Home
Submenu
Networking
Smart Home
Gaming
Submenu
Game Reviews
Sign in
Newsletter
Menu
Follow
Followed
Like
Threads
1
More Action
Summary
Generate a summary of this story
Sign in now
Switch 2
RTX 5060
Windows 11
Gaming
Forums
Close
I added real-time temperature monitoring to my Proxmox dashboard, here's how
By
Ayush Pande
Published Aug 31, 2025
Ayush Pande is a PC hardware and gaming writer. When he's not working on a new article, you can find him with his head stuck inside a PC or tinkering with a server operating system. Besides computing, his interests include spending hours in long RPGs, yelling at his friends in co-op games, and practicing guitar.
Sign in to your XDA account
Summary
Generate a summary of this story
follow
Follow
followed
Followed
Like
Like
Thread
1
Log in
Here is a fact-based summary of the story contents:
Try something different:
Show me the facts
Explain it like I’m 5
Give me a lighthearted recap
Despite working on wacky experiments all the time, I take my home lab management tasks seriously. As such, monitoring services, add-ons, and tools rank high on my list of mission-critical applications. I rely on Uptime Kuma to track the operational status of my container army, while Beszel keeps an eye on my server nodes. These days, I use Pulse to monitor my Proxmox workstations as well as the LXCs and VMs running on them from a neat dashboard. Speaking of Proxmox, I also appreciate the extra graphs added to PVE 9, as they let me check the resource contention on my servers. But as someone who has set up system temperature monitoring via Conky widgets (on Linux systems) and Rainmeter plugins (on Windows PCs), I’m not fond of the fact that I can’t monitor the temps of the server nodes on Proxmox. So, one thing led to another, and I ended up trying out some packages and tools to bring temp sensors to my PVE workstations.
Glances was my first choice
After all, it’s a solid monitoring utility
As always, self-hosting yet another monitoring service seemed like the first solution to my temperature-sensing woes. After going through a handful of tools, Glances (not to be confused with Glance, which is an entirely different beast altogether) seemed like a decent option. Rather than providing an icon-based interface, Glances has many similarities to the CLI-heavy aesthetics of btop. But instead of forcing me to check the console at all times, Glances runs as an addon inside a Proxmox LXC and displays all my essential server stats from a web UI – including the temps for each CPU core. Fortunately, the Proxmox VE Helper-Scripts repository includes a dedicated addon for Glances, so I don’t have to spend hours manually configuring it. Since I needed a pre-existing LXC for the task, I quickly spun up a Debian container by running bash -c "$(curl -fsSL https://raw.githubusercontent.com/community-scripts/ProxmoxVE/main/ct/debian.sh)" within the Shell tab of my Proxmox workstation. After that, all I had to do was run bash -c "$(curl -fsSL https://raw.githubusercontent.com/community-scripts/ProxmoxVE/main/tools/addon/glances.sh)" inside the Console tab of my freshly-created Debian LXC and wait for the script to do its magic. Soon, the container was up and running, and I used the IP address displayed within the terminal interface to access Glances. The UI was just as neat as I’d imagined it to be, and I could finally keep tabs on the CPU temps. However, I wasn’t satisfied yet…
But I switched to lm-sensors
You'll need to execute a couple of commands
Although Glances is an amazing app for checking my system parameters, I was hoping for something that could display the temps directly in Proxmox rather than a separate dashboard. After reading the docs for lm-sensors, I figured I could try setting up the package on my PVE nodes. To kick things off, I pulled the lm-sensors package by running the apt install lm-sensors command within my node’s Shell interface. After that, I executed sensors-detect to configure the package's kernel modules. I left most settings at their default values, though the tool was only able to pick two sensors: one (or technically two, since I ran the command on my dual-Xeon server) for the CPU, and another for the NVMe SSD housing my virtual guests.
The PVE-mods repo solved my problems
And setting it up was a breeze
So far, I could run the sensor command inside the Proxmox shell to get the temps for my CPU core and storage drive. But what I really wanted was a way to add live temperature readings to my PVE dashboard. I could try editing the /usr/share/perl5/PVE/API2/Nodes.pm config file to display the lm-sensor readings inside Proxmox’s web UI. But my paranoid self wasn’t ready to edit several JSON lines, since a single mistake could result in my server going offline for a few hours. That’s when I came across the PVE-mods repository by genius developer Meliox, which includes a couple of scripts to enhance Proxmox’s functionality. One of these mods – Node sensor readings view – was precisely what I was looking for. Setting it up was just as painless. I downloaded the script using the wget https://raw.githubusercontent.com/Meliox/PVE-mods/main/pve-mod-gui-sensors.sh command and executed it using bash pve-mod-gui-sensors.sh install. Once the installation was complete, I cleared the browser cache and restarted it. Lo and behold, the temperature readings from both processors and my NVMe drive appeared inside the Proxmox node. Since I’m rocking Proxmox 9, I was a bit apprehensive about the script’s compatibility, but it works incredibly well.
I also followed the process to get the DIMM sensors to read (and display) the RAM temps from the Arch wiki. But I never managed to get it working – and not because of the package compatibility issues between Arch and Debian, mind you. Once I’d installed the i2c-tools package via the apt install i2c-tools command and loaded the right kernel module using modprobe i2c_dev, the tool worked right off the bat. But I wasn’t sure if the 0x8, 0x44, and 0x48 buses corresponded to the DIMM temp sensors after executing the i2cdetect -y 0 command. Call me paranoid, but I didn’t want to risk breaking the PVE installation. Plus, since I cared more about the CPU and storage temps, Meliox’s script was all I needed for my Proxmox nodes.
Linux
Follow
Followed
Like
Share
Facebook
X
LinkedIn
Reddit
Flipboard
Copy link
Email
Close
Thread
1
Sign in to your XDA account
We want to hear from you! Share your opinions in the thread below and remember to keep it respectful.
Reply / Post
Images
Attachment(s)
Please respect our community guidelines. No links, inappropriate language, or spam.
Your comment has not been saved
Send confirmation email
Sort by:
Popular
Oldest
Newest
xxxda
xxxda
xxxda
#MD222792
Member since 2024-01-24
0
Threads
23
Posts
Following
0
Stories
0
Topics
0
Authors
0
Users
Follow
Followed
0
Followers
View
```sudo apt install btop && btop```Far superior.
2025-09-02 13:45:22
Upvote
Downvote
Reply
Copy
Terms
Privacy
Feedback
Recommended
Sep 9, 2025
5 reasons why PC gaming feels broken in 2025
Sep 9, 2025
Review: Hell is Us is not a Soulslike, but something far more daring and original
Sep 10, 2025
You, too, can build this awesome foam dart shooting gallery with an ESP32
Sep 9, 2025
5 apps that are way better on Linux than they are on Windows
Today's best deals
This retro-inspired mechanical keyboard is all vibes and now just $44
31 minutes ago
This rare discount makes the AMD Ryzen 7 9800X3D the ultimate CPU for your next gaming PC build
3 hours ago
This legendary triple-A FPS series is currently $10 for six games on Steam
20 hours ago
See More
Trending Now
The Virtua Fighter 5 R.E.V.O.: World Stage closed beta was more of the same, but with a bigger pool of players
After Windows, I want Raycast to come to Linux next
Forget VRAM — these 5 GPU trends are way more disturbing
Join Our Team
Our Audience
About Us
Press & Events
Contact Us
Follow Us
Advertising
Careers
Terms
Privacy
Policies
XDA is part of the
Valnet Publishing Group
Copyright © 2025 Valnet Inc.