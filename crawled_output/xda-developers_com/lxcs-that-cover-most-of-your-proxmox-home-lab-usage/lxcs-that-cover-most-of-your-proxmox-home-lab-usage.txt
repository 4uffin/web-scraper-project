6 LXCs that can cover 90% of your Proxmox home lab usage
Menu
Sign in now
Close
News
PC Hardware
Submenu
CPU
GPU
Storage
Monitors
Keyboards & Mice
Software
Submenu
Productivity
Other Software
Operating Systems
Submenu
Windows
Linux
macOS
Devices
Submenu
Single-Board Computers
Laptops
Gaming Handheld
Prebuilt PC
Home
Submenu
Networking
Smart Home
Gaming
Submenu
Game Reviews
Sign in
Newsletter
Menu
Follow
Followed
Like
Threads
More Action
Summary
Generate a summary of this story
Sign in now
Switch 2
RTX 5060
Windows 11
Gaming
Forums
Close
6 LXCs that can cover 90% of your Proxmox home lab usage
By
Ayush Pande
Published 10 hours ago
Ayush Pande is a PC hardware and gaming writer. When he's not working on a new article, you can find him with his head stuck inside a PC or tinkering with a server operating system. Besides computing, his interests include spending hours in long RPGs, yelling at his friends in co-op games, and practicing guitar.
Sign in to your XDA account
Summary
Generate a summary of this story
follow
Follow
followed
Followed
Like
Like
Thread
Log in
Here is a fact-based summary of the story contents:
Try something different:
Show me the facts
Explain it like I’m 5
Give me a lighthearted recap
Capable of running apps, packages, and distros inside isolated environments, containers and virtual machines are the crux of self-hosting and experimentation workloads. Although both have their own neat perks, there are plenty of cases where you may want to run containers over VMs. If you’re using an old, computationally-challenged rig as a server, you might want to switch to containers, as VMs tend to have significantly higher processing overhead. Heck, I recently converted an old laptop into a Proxmox host, and after some performance issues with virtual machines, I started using LXCs exclusively with this underpowered PVE node. Having turned it into a reliable self-hosting workstation, I can confirm that you’ll only need a handful of LXCs to run essential home lab services.
Debian
Quite versatile with the right add-ons
Call me basic if you want, but I adore Debian. Sure, it may not have any fun (read: weird) quirks or an experimental package manager with the largest number of tools, but it excels on the stability and compatibility fronts. As such, there are plenty of ways you can put a Debian-based LXC to good use. If you’re willing to tinker with Docker and don’t have enough resources to assign to your virtual machines, a Debian (or other stable distros, for that matter) VM is what you’re looking for. Likewise, you can arm your vanilla-flavored LXC with a host of add-ons, ranging from Tailscale setups to Code Server-hosting workstations. Speaking of dev environments, the Arch Linux LXC template works just as well for coding-related packages, and it’s worth checking out if you’re not fond of the king of vanilla distros.
Cosmos/CasaOS/Runtipi
To run the bulk of your container suite
Nested containerization may seem like a terrible idea, but having tinkered with a handful of container platforms inside LXCs, I can confirm that it’s a lot more reliable than you may think. Better yet, containerization platforms tend to feature simple yet aesthetically-pleasing web UIs, making them a better choice for beginners or casual home labbers who don’t wish to deal with the added difficulty of managing containers via terminal commands. As for the platform itself, you’ve got plenty of choices. I’ve been using Cosmos as of late, and between its customizable app repositories, simple network (and storage) management, and built-in cron scheduler, it’s a terrific option for container enthusiasts. Its mouth-watering UI is just the cherry on top. That said, CasaOS and Runtipi have their own strengths and are worthwhile alternatives. The former has a file explorer built into it, allowing you to use your container-hosting platform as a file-sharing server, while the latter has a sleek interface that’s perfect for folks who love minimalist UI designs. Regardless of your choice, you can deploy most of the productivity, creativity, maintenance, and media server apps using the containerization platform.
NextcloudPi
An LXC-powered Microsoft 365 alternative
A quick disclaimer before I talk about NextcloudPi: I switched to a virtual machine-based Nextcloud instance after the container variant started feeling too sluggish due to all the documents I'd uploaded to it. That said, the NextcloudPi LXC template is far from terrible for most workloads, and it’s a solid option if you don’t have enough system resources to run a dedicated VM for the personal cloud. Without any tweaks, NextcloudPi is great for storing personal documents and sharing them with other users. However, its utility goes through the roof once you start arming it with the right packages from the built-in app store. My favorites are the Collabora Online and Nextcloud Office apps, which let me work on spreadsheets, text documents, and presentation slides directly on NextcloudPi. Throw in the Notes, PDF Annotations, Tasks, Forms, and other utilities, and you can turn a NextcloudPi instance into a full-fledged Microsoft 365.
Home Assistant
That said, the container variant has one major flaw
Ask the smart home community about the platform they use to control their paraphernalia, and you’d hear an overwhelmingly positive response about Home Assistant – and this praise is well warranted. After all, Home Assistant is compatible with a ton of smart devices, has simple yet robust trigger-action automations, and works well with community-created blueprints – all while helping you monitor and track your IoT products from neat, customizable dashboards. That said, the LXC version of Home Assistant has an Achilles Heel that needs to be mentioned. The Add-on Store is another killer feature of Home Assistant, as it lets you deploy useful self-hosted services on top of your HASS instance. Unfortunately, the Home Assistant LXC doesn’t feature it, so you’ll have to run these apps on a container platform (or even a Debian-based Docker/Podman setup) and connect them with your HASS instance.
Pulse
To keep an eye on Proxmox
While it may seem excessive for a mere home lab, I’ve deployed a handful of services just to maintain my server nodes. Most of them, including my dashboards, network scanners, and uptime trackers, ship with my containerization platforms. Pulse is an exception, and that’s a real shame, because this neat utility deserves more recognition. Designed for Proxmox, Pulse can not only keep track of the resource consumption and uptime of my PVE nodes, but it can also do so for the VMs and LXCs running on them. The LXC can also connect to Proxmox Backup Server and pull records of recent snapshots. And I haven’t even mentioned its gorgeous UI, the ability to add links to each virtual guest’s web UI, and built-in alert provisions.
OpenMediaVault
For basic NAS tasks
If you’re looking to quickly share files between multiple users, a NextcloudPi LXC is more than enough. But for folks who need dedicated network shares for their home lab, a NAS-oriented distro is what you’re looking for. OpenMediaVault is light enough to run on weak devices, but in case your home server can’t handle a separate VM, you can deploy this niche OS as an LXC. The reason why I haven’t mentioned it until the very bottom is that the LXC variant of OpenMediaVault becomes a pain to use once you step into complex workloads. Adding extra drives requires numerous config file tweaks, and you might even run into weird issues and bugs when using a containerized OMV instance. Nevertheless, it’s worth checking out if you need a simple data archival platform or an SMB/NFS-powered file sharing server that consumes fairly minimal resources.
You’ll also need a couple of VMs, though
So far, our LXC suite can satisfy most of your demands. But if you’ve got some resources to spare, you might want to run a few virtual machines as well. For hardcore computing projects, you’ll want to deploy Debian, Arch Linux, Fedora, or other full-fledged distributions inside virtual machines rather than LXCs. Likewise, I’ve already mentioned the drawbacks of using NextcloudPi (or rather Nextcloud), Home Assistant, and OpenMediaVault inside containerized environments, with OMV being significantly more useful (and less troublesome) as a dedicated VM.
Linux
Self-Hosting
Home Lab
Follow
Followed
Like
Share
Facebook
X
LinkedIn
Reddit
Flipboard
Copy link
Email
Close
Thread
Sign in to your XDA account
We want to hear from you! Share your opinions in the thread below and remember to keep it respectful.
Be the first to post
Images
Attachment(s)
Please respect our community guidelines. No links, inappropriate language, or spam.
Your comment has not been saved
Send confirmation email
This thread is open for discussion.
Be the first to post your thoughts.
Terms
Privacy
Feedback
Recommended
3 days ago
Why I keep coming back to SMB for my home lab file sharing
4 days ago
Wi-Fi 7 is exciting, but here's why you shouldn't buy a new router (yet)
4 days ago
This ultra-compact keyboard with Qi wireless charging is now just $36
3 days ago
These are gaming's most iconic NPCs who stole the spotlight
Today's best deals
The Lenovo laptop we can't stop talking about is now $450 less
10 hours ago
This mini PC with an AMD Ryzen 7 and 32GB of DDR5 RAM is an absolute powerhouse, and it's now $220 off
13 hours ago
This highly stylised RPG with 94% positive reviews is down to its lowest price ever on Steam
20 hours ago
See More
Trending Now
Zorin OS 18 opens its doors to those fleeing Microsoft as the Windows 10 end-of-life date looms
Kiwix is the free, open-source tool every student needs
Review: Dying Light: The Beast is the true Dying Light sequel I'd been waiting for
Join Our Team
Our Audience
About Us
Press & Events
Contact Us
Follow Us
Advertising
Careers
Terms
Privacy
Policies
XDA is part of the
Valnet Publishing Group
Copyright © 2025 Valnet Inc.